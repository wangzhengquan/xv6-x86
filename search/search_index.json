{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u7b80\u4ecb xv6\u662f\u4e00\u4e2a\u4f9b\u5b66\u4e60\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8ddflinux\u76f8\u6bd4\u5b83\u7684\u4ee3\u7801\u91cf\u5f88\u5c0f\u3002\u7136\u800c\u201c\u9ebb\u96c0\u867d\u5c0f\u4e94\u810f\u4ff1\u5168\u201d\uff0c\u5373\u662f\u8fd9\u6837\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u4f9d\u7136\u5f88\u5177\u6709\u6311\u6218\u6027\uff0c\u6240\u4ee5\u6211\u6839\u636e\u81ea\u5df1\u7684\u5b66\u4e60\u4f53\u4f1a\u5199\u4e86\u8fd9\u4e00\u7cfb\u5217\u7684\u5173\u4e8exv6\u7684\u7b14\u8bb0\u3002 Boot loader Entry kernel Scheduler \u7b2c\u4e00\u4e2a\u8fdb\u7a0b \u4e2d\u65ad\u5904\u7406\u6d41\u7a0b \u7cfb\u7edf\u8c03\u7528 \u65f6\u95f4\u4e2d\u65ad \u786c\u76d8\u4e2d\u65ad \u6587\u4ef6\u7cfb\u7edf \u8bbe\u5907\u7ba1\u7406 Reference: \u6e90\u7801\uff1a https://github.com/mit-pdos/xv6-public","title":"\u7b80\u4ecb"},{"location":"#_1","text":"xv6\u662f\u4e00\u4e2a\u4f9b\u5b66\u4e60\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8ddflinux\u76f8\u6bd4\u5b83\u7684\u4ee3\u7801\u91cf\u5f88\u5c0f\u3002\u7136\u800c\u201c\u9ebb\u96c0\u867d\u5c0f\u4e94\u810f\u4ff1\u5168\u201d\uff0c\u5373\u662f\u8fd9\u6837\u4e00\u4e2a\u5f88\u7b80\u5355\u7684\u64cd\u4f5c\u7cfb\u7edf\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u4f9d\u7136\u5f88\u5177\u6709\u6311\u6218\u6027\uff0c\u6240\u4ee5\u6211\u6839\u636e\u81ea\u5df1\u7684\u5b66\u4e60\u4f53\u4f1a\u5199\u4e86\u8fd9\u4e00\u7cfb\u5217\u7684\u5173\u4e8exv6\u7684\u7b14\u8bb0\u3002 Boot loader Entry kernel Scheduler \u7b2c\u4e00\u4e2a\u8fdb\u7a0b \u4e2d\u65ad\u5904\u7406\u6d41\u7a0b \u7cfb\u7edf\u8c03\u7528 \u65f6\u95f4\u4e2d\u65ad \u786c\u76d8\u4e2d\u65ad \u6587\u4ef6\u7cfb\u7edf \u8bbe\u5907\u7ba1\u7406","title":"\u7b80\u4ecb"},{"location":"#reference","text":"\u6e90\u7801\uff1a https://github.com/mit-pdos/xv6-public","title":"Reference:"},{"location":"boot_loader/","text":"The Boot Loader x86 \u7684\u542f\u52a8 \u770b\u5177\u4f53\u7684\u4ee3\u7801\u524d\u5148\u8bf4\u8bf4 x86 \u67b6\u6784\u5f00\u673a\u5f15\u5bfc\u7684\u76f8\u5173\u77e5\u8bc6\u3002\u4ece\u7ed9 x86 \u901a\u7535\u7684\u4e00\u523b\u5f00\u59cb\uff0cCPU \u6267\u884c\u7684\u7b2c\u4e00\u6bb5\u6307\u4ee4\u662f BIOS \u56fa\u5316\u5728 ROM \u4e0a\u7684\u4ee3\u7801\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u786c\u4ef6\u5b9a\u6b7b\u7684\u89c4\u77e9\uff0c\u5c31\u662f\u8fd9\u6837\u3002 \u800c BIOS \u5728\u786c\u4ef6\u81ea\u68c0\u5b8c\u6210\u540e\u4f1a\u6839\u636e\u4f60\u5728 BIOS \u91cc\u8bbe\u7f6e\u7684\u542f\u52a8\u987a\u5e8f\uff08\u786c\u76d8\u3001\u5149\u9a71\u3001USB\uff09\u8bfb\u53d6\u6bcf\u4e2a\u5f15\u5bfc\u8bbe\u5907\u7684\u7b2c\u4e00\u4e2a\u6247\u533a 512\u5b57\u8282\u7684\u5185\u5bb9\uff0c\u5e76\u5224\u65ad\u8fd9\u6bb5\u5185\u5bb9\u7684\u6700\u540e 2 \u5b57\u8282\u662f\u5426\u4e3a 0xAA55\uff0c\u5982\u679c\u662f\u8bf4\u660e\u8fd9\u4e2a\u8bbe\u5907\u662f\u53ef\u5f15\u5bfc\u7684\uff0c\u4e8e\u662f\u5c31\u5c06\u8fd9 512 \u5b57\u8282\u7684\u5185\u5bb9\u653e\u5230\u5185\u5b58\u7684 0x7c00\uff0c\u7136\u540e\u544a\u8bc9 CPU \u53bb\u6267\u884c\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6307\u4ee4\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u540c\u6837\u662f\u786c\u4ef6\u5b9a\u6b7b\u7684\u89c4\u77e9\uff0c\u5c31\u662f\u8fd9\u6837\u3002 \u6709\u4e86\u4e0a\u9762\u7684\u4ecb\u7ecd\u6211\u4eec\u518d\u56de\u5230 xv6 \u5982\u679c\u4f60\u770b\u4e00\u4e0b\u7f16\u8bd1\u751f\u6210\u7684 bootblock \u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f60\u4f1a\u60ca\u559c\u7684\u53d1\u73b0\u5b83\u7684\u6587\u4ef6\u5927\u5c0f\u521a\u597d\u662f 512 \u5b57\u8282\u3002\u7528\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\uff08\u6211\u5728 Mac OSX \u4e0b\u7528\u7684\u662f 0xED \u8fd9\u4e2a\u8f6f\u4ef6\uff09\u6253\u5f00 bootblock \u8fd9\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f60\u53c8\u4f1a\u53d1\u73b0\u8fd9\u4e2a 512 \u5b57\u8282\u7684\u6587\u4ef6\u7684\u6700\u540e\u4e24\u5b57\u8282\u6b63\u597d\u662f 0xAA55\u3002 \u770b\u4e00\u4e0bMakefile \u4e2d bootblock\u7684\u7684\u751f\u6210\u4ee3\u7801 bootblock: bootasm.S bootmain.c $(CC) $(CFLAGS) -fno-pic -O -nostdinc -I. -c bootmain.c $(CC) $(CFLAGS) -fno-pic -nostdinc -I. -c bootasm.S $(LD) $(LDFLAGS) -N -e start -Ttext 0x7C00 -o bootblock.o bootasm.o bootmain.o $(OBJDUMP) -S bootblock.o > bootblock.asm $(OBJCOPY) -S -O binary -j .text bootblock.o bootblock ./sign.pl bootblock $(LD)\u94fe\u63a5\u547d\u4ee4\u8d1f\u8d23\u628a'.o'\u6587\u4ef6\u94fe\u63a5\u4e3a\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u4e0a\u9762\u8bf4\u8fc7BIOS\u4f1a\u628a\u5f15\u5bfc\u6247\u533a\uff08boot sector\uff09\u91cc\u7684boot loader \u52a0\u8f7d\u52300x7C00\u7684\u5185\u5b58\u5730\u5740\u4e0a\uff0c\u8fd9\u4e5f\u662fboot loader\u5f00\u59cb\u6267\u884c\u7684\u5730\u65b9,\u8fd9\u91cc\u7684 -Ttext 0x7C00 \u5c31\u662f\u544a\u8bc9\u94fe\u63a5\u5668\u4ee3\u7801\u6bb5\u7684\u8d77\u59cb\u4f4d\u7f6e\u662f0x7C00\uff0c \u8fd9\u6837\u94fe\u63a5\u5668\u5c31\u53ef\u4ee5\u5728\u4ea7\u751f\u7684\u4ee3\u7801\u4e2d\u751f\u6210\u6b63\u786e\u7684\u5185\u5b58\u5730\u5740\u3002\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5165\u53e3\u662f start(\u901a\u8fc7 -e start \u8bbe\u5b9a)\u3002\u8fd9\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u662fELF\u683c\u5f0f\u7684\uff0c\u4f46\u662f\u6b64\u65f6\u64cd\u4f5c\u7cfb\u7edf\u8fd8\u672a\u88ab\u52a0\u8f7d\u8fd0\u884c\u65e0\u6cd5\u8bc6\u522bELF\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6240\u4ee5$(OBJCOPY)\u547d\u4ee4\u628abootblock.o\u8fd9\u4e2aELF\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u6bb5\uff08 -j .text \uff09\u6309\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\uff08 -O binary \uff09\u62f7\u8d1d\u5230bootblock\u6587\u4ef6\u4e2d\u3002./sign.pl\u8fd9\u4e2a\u547d\u4ee4\u8d1f\u8d23\u628a boot loader \u6587\u4ef6bootblock\u586b\u5145\u4e3a512\u4e2a\u5b57\u8282\u5927\u5c0f\uff0c\u7136\u540e\u628a\u672b\u5c3e\u4e24\u4e2a\u5b57\u8282\u8bbe\u7f6e\u4e3a 0xAA55 \u4f5c\u4e3a\u5f15\u5bfc\u6247\u533a\u7684\u6807\u793a\u3002 \u5728 xv6.img \u7684\u751f\u6210\u4ee3\u7801\u4e2d xv6.img: bootblock kernel fs.img dd if=/dev/zero of=xv6.img count=10000 dd if=bootblock of=xv6.img conv=notrunc dd if=kernel of=xv6.img seek=1 conv=notrunc \u53ef\u4ee5\u53d1\u73b0xv6.img \u5c31\u662f\u628abootblock\u548ckernel\u62fc\u63a5\u6210\u4e00\u4e2a\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u7684\u5927\u5c0f\u662f10000\u4e2a\u6247\u533a \uff08count=10000\uff09\uff0cbootbloack\u5728\u7b2c\u4e00\u4e2a\u6247\u533a\uff0ckernel\u88ab\u62fc\u63a5\u5230\u7b2c\u4e00\u4e2a\u6247\u533a\u540e\u8fb9\uff08seek=1\uff09\u3002 \u8fdb\u5165Boot Loader \u5728\"x86 \u7684\u542f\u52a8\"\u4e00\u8282\u4e2d\u8bb2\u5230BIOS\u4f1a\u628aboot loader\u52a0\u8f7d\u5230\u5185\u5b58\u76840x7c00\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u8df3\u8f6c\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u53bb\u6267\u884cboot loader\u4ee3\u7801\u3002\u6b64\u65f6\u63a7\u5236\u6743\u5df2\u7ecf\u4ea4\u7ed9boot loader\u4e86. boot loader\u4e3b\u8981\u5b8c\u6210\u4e86\u4e24\u4e2a\u529f\u80fd\uff1a \u5b9e\u6a21\u5f0f\u5207\u6362\u5230\u4fdd\u62a4\u6a21\u5f0f\uff1a\u4ece20\u4f4d\uff081M\uff09\u5bfb\u5740\u5b9e\u6a21\u5f0f\u5207\u6362\u523032\u4f4d(4G)\u5bfb\u5740\u7684\u4fdd\u62a4\u6a21\u5f0f \u52a0\u8f7d\u5185\u6838\uff1a\u6839\u636eELF\u5185\u6838\u6587\u4ef6\u6240\u6307\u5b9a\u7684\u7269\u7406\u5730\u5740\uff0c\u4ece\u786c\u76d8\u4e2d\u628a\u5185\u6838\u5230\u5185\u5b58\u4e2d\u7684\u8be5\u5730\u5740\u4e0a\uff0c\u7136\u540e\u8df3\u8f6c\u5230\u5185\u6838ELF\u6587\u4ef6\u6240\u5730\u5740\u7684\u5165\u53e3\u70b9\u3002 \u5b9e\u6a21\u5f0f\u5230\u4fdd\u62a4\u6a21\u5f0f \u9996\u5148\u7406\u89e3\u4e00\u4e0b\u5b9e\u6a21\u5f0f\u4e0e\u4fdd\u62a4\u6a21\u5f0f\u3002\u5982\u679c\u8bf4\u8fdb\u7a0b\u662f\u5bf9CPU\u7684\u62bd\u8c61\uff0c\u6587\u4ef6\u662f\u5bf9\u786c\u76d8\u7684\u62bd\u8c61\uff0c\u90a3\u4e48\u865a\u62df\u5185\u5b58\u5c31\u662f\u5bf9\u7269\u7406\u5185\u5b58\u7684\u62bd\u8c61\u3002\u5b9e\u9645\u4e0a\u8ba1\u7b97\u673a\u7f16\u7a0b\u9762\u5bf9\u7684\u90fd\u662f\u865a\u62df\u5185\u5b58\uff0c\u4e5f\u5c31\u662f\u8bf4\u7f16\u7a0b\u65f6\u5b58\u53d6\u6570\u636e\u7684\u5730\u5740\u90fd\u662f\u865a\u62df\u5730\u5740\uff08\u4e5f\u5373\u903b\u8f91\u5730\u5740\uff09\uff0cCPU\u628a\u865a\u62df\u5730\u5740\u4ea4\u7ed9MMU\uff08Memery management unit\uff09\u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740\uff0c\u518d\u53bb\u8bbf\u95ee\u7269\u7406\u5185\u5b58\u3002\u5176\u5b9e\u8fd9\u91cc\u8bf4\u7684\u5185\u5b58\u662f\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\uff08Adress Space\uff09\u5e76\u4e0d\u5355\u6307\u5b58\u53d6\u6570\u636e\u7684\u5185\u5b58\uff0c\u4e5f\u5305\u62ec\u4e00\u4e9b\u5916\u90e8\u8bbe\u5907\u6bd4\u5982\u663e\u793a\u5668/\u952e\u76d8\u7b49\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u8fd9\u4e9b\u5916\u90e8\u8bbe\u5907\u8bfb\u5199\u4e5f\u662f\u88ab\u5f71\u5c04\u5230\u7279\u5b9a\u7684\u5185\u5b58\u5730\u5740\u7a7a\u95f4\u4e0a\u3002 \u5b9e\u6a21\u5f0f\u4e0bMMU\u4e0d\u4f1a\u8fdb\u884c\u5730\u5740\u8f6c\u6362\u4e5f\u5c31\u662f\u8bf4\u865a\u62df\u5730\u5740\u7b49\u4e8e\u7269\u7406\u5730\u5740\u3002\u5b9e\u6a21\u5f0f\u5bfb\u5740\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b 16 \u2217 selector + offset \u7b2c\u4e00\u4e2a16\u4f4d\u7684\u503c\u53eb\u505aselector\u662f\u5b58\u50a8\u5728\u6bb5\u5bc4\u5b58\u5668\u91cc\u7684\uff0c\u7b2c\u4e8c\u4e2a16\u4f4d\u7684\u503c\u53eb\u505aoffset.\u4e3a\u4ec0\u4e48\u8981\u7528\u8fd9\u6837\u7684\u65b9\u5f0f\u8868\u793a\u5462\uff1f\u539f\u6765\u65e9\u671f\u82f1\u7279\u5c14\u7684 8086 CPU \u662f 16 \u4f4d\u7684\uff0c\u5982\u679c\u76f4\u63a5\u7528\u6765\u8868\u793a\u5185\u5b58\u5730\u5740\u7684\u8bdd\uff0c16 \u4f4d\u6700\u5927\u53ef\u4ee5\u8868\u793a\u7684\u5185\u5b58\u5730\u5740\u662f 2^16 = 65536 \u4e2a\u5730\u5740\uff0c\u6bcf\u4e2a\u5730\u5740\u4ee3\u8868\u4e00\u5b57\u8282\u7684\u5185\u5b58\u6570\u636e\u7684\u8bdd\uff0c16 \u4f4d\u6700\u591a\u53ea\u80fd\u652f\u6301 64KB \u5185\u5b58\uff0c\u8fd9\u663e\u7136\u662f\u4e0d\u591f\u7528\u7684\u3002\u4e8e\u662f\u82f1\u7279\u5c14\u5728\u4fdd\u6301\u6570\u636e\u7ebf\u5bbd\u4e3a 16 \u4f4d\u7684\u540c\u65f6\u5c06\u5730\u5740\u7ebf\u7684\u5bbd\u5ea6\u589e\u5927\u5230 20 \u4f4d\uff0c\u4e5f\u5c31\u662f\u8bf4\u5185\u5b58\u5730\u5740\u662f 20 \u4f4d\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u652f\u6301 2^20 = 1MB \u7684\u5185\u5b58\uff0c\u5f53\u65f6\u7684\u4eba\u4eec\u8ba4\u4e3a\u8fd9\u6837\u5c31\u8db3\u591f\u4e86\u3002\u73b0\u5728\u95ee\u9898\u6765\u4e86\uff0c16 \u4f4d\u7684\u6570\u636e\u7ebf\u5bbd\uff08\u5bc4\u5b58\u5668\u81ea\u7136\u4e5f\u662f 16 \u4f4d\u7684\uff09\u5982\u4f55\u80fd\u8868\u793a 20 \u4f4d\u7684\u5730\u5740\u5462\uff1f\u7b54\u6848\u662f\u7528\u4e24\u4e2a 16 \u4f4d\u7684\u5bc4\u5b58\u5668\u6765\u8868\u793a\u3002\u8fd9\u5c31\u662f\u201c\u6bb5\u57fa\u5740\u201d + \u201c\u504f\u79fb\u91cf\u201d\u5bfb\u5740\u65b9\u5f0f\u7684\u7531\u6765\u3002\u4e00\u4e2a 16 \u4f4d\u7684\u5bc4\u5b58\u5668\u6765\u8868\u793a\u201c\u6bb5\u57fa\u5740\u201d\uff08CS\u3001DS\u3001SS\u3001ES\u56db\u4e2a\u5bc4\u5b58\u5668\uff09\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u662f\u5148\u5c06 16 \u4f4d\u7684\u201c\u6bb5\u57fa\u5740\u201d\u5de6\u79fb 4 \u4f4d\uff0c\u7136\u540e\u52a0\u4e0a 16 \u4f4d\u7684\u201c\u504f\u79fb\u91cf\u201d\u6700\u7ec8\u5f97\u5230 20 \u4f4d\u7684\u5185\u5b58\u5730\u5740\u9001\u5165\u5730\u5740\u7ebf\u3002 \u4fdd\u62a4\u6a21\u5f0f\u4e0b\u9762\u5bf9\u7684\u662f\u865a\u62df\u5730\u5740\uff0cCPU\u8fdb\u884c\u5b58\u53d6\u6570\u636e\u65f6\u865a\u62df\u5730\u5740\u4f1a\u88ab\u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740\uff0c\u7136\u540e\u518d\u53bb\u8bbf\u95ee\u5185\u5b58\u3002\u4fdd\u62a4\u6a21\u5f0f\u5206\u4e3a\u4e24\u79cd\uff0c\u6bb5\u4fdd\u5b58\u6a21\u5f0f\u548c\u9875\u4fdd\u62a4\u6a21\u5f0f\u3002 \u6bb5\u4fdd\u62a4\u6a21\u5f0f\u9700\u8981\u7ef4\u62a4\u4e00\u5f20\u5168\u5c40\u63cf\u8ff0\u7b26\u8868(GDT)\uff0cGDT\u8bb0\u5f55\u4e86\u6bcf\u4e2a\u6bb5\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\u548c\u957f\u5ea6\u4ee5\u53ca\u5176\u4ed6\u7684\u4e00\u4e9b\u4fdd\u62a4\u4f4d\u3002\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u544a\u8bc9CPU GDT\u6240\u5728\u7684\u5730\u5740\uff0cCPU\uff08MMU\uff09\u901a\u8fc7CS\u6bb5\u5bc4\u5b58\u5668\u7684\u6bb5\u5730\u5740\u7d22\u5f15\u5230\u67d0\u4e00\u6761\u6bb5\u8868\u8bb0\u5f55\uff0c\u627e\u5230\u5bf9\u5e94\u6bb5\u7684\u6bb5\u7269\u7406\u5730\u5740\uff0c\u518d\u52a0\u4e0aIP\u5bc4\u5b58\u5668\u7684\u504f\u79fb\u91cf\u5c31\u5f97\u5230\u4e86\u7269\u7406\u5730\u5740\u3002\u66f4\u591a\u5173\u4e8eMemory segmentation\u7684\u8bf4\u660e\u53ef\u4ee5\u53c2\u8003(wikipedia)[https://en.wikipedia.org/wiki/Memory_segmentation] \u9875\u4fdd\u62a4\u6a21\u5f0f\u9700\u8981\u7ef4\u62a4\u4e00\u5f20\u9875\u8868\uff0c\u9875\u8868\u540c\u6837\u8bb0\u5f55\u4e86\u6bcf\u4e2a\u9875\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\uff0c\u901a\u5e38\u4e00\u4e2a\u9875\u7684\u5927\u5c0f\u662f4Kb,\u90a3\u4e48\u4e00\u4e2a32\u4f4d\u7684\u5730\u5740\u7684\u524d20\u4f4d\u662f\u9875\u8868\u7684\u7d22\u5f15\uff0c\u540e12\u4f4d\u662f\u504f\u79fb\u91cf\uff0c\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u544a\u8bc9CPU\u9875\u8868\u7684\u5730\u5740\uff0cCPU\uff08MMU\uff09\u901a\u8fc7\u865a\u62df\u5730\u5740\u7684\u524d20\u4f4d\u7d22\u5f15\u5230\u5bf9\u5e94\u7684\u9875\u8bb0\u5f55\uff0c\u627e\u5230\u5bf9\u5e94\u9875\u7684\u7269\u7406\u5730\u5740\uff0c\u518d\u52a0\u4e0a\u865a\u62df\u5730\u5740\u540e12\u4f4d\u7684\u504f\u79fb\u91cf\u5f97\u5230\u7269\u7406\u5730\u5740\u3002 bootasm.S \u4e0b\u9762\u770b\u4e00\u4e0b\u5177\u4f53\u7684\u4ee3\u7801\uff0cboot loader\u6709\u4e24\u4e2a\u6587\u4ef6bootasm.S\u548cbootmain.c. boot loader\u7684\u5165\u53e3\u5c31\u5728bootasm.S\u6587\u4ef6\u4e2d .code16 # Assemble for 16-bit mode .globl start start: cli # BIOS enabled interrupts; disable # Zero data segment registers DS, ES, and SS. xorw %ax,%ax # Set %ax to zero movw %ax,%ds # -> Data Segment movw %ax,%es # -> Extra Segment movw %ax,%ss # -> Stack Segment .code16 \u8fd9\u53e5\u662f\u8bc9 CPU \u6211\u4eec\u76ee\u524d\u662f\u5728 16 \u4f4d\u6a21\u5f0f\u4e0b\u6267\u884c\u4ee3\u7801\uff0c\u6b64\u65f6\u5185\u5b58\u5bfb\u5740\u80fd\u529b\u53ea\u6709 1MB\uff0c\u5e76\u4e14\u662f\u201c\u5b9e\u6a21\u5f0f\u201d\u4e0b\u3002 cli \u6307\u4ee4\u5173\u95ed\u4e86\u4e2d\u65ad\u54cd\u5e94\uff0c\u610f\u5473\u7740\u4ece\u8fd9\u4e00\u523b\u5f00\u59cb\u4f60\u7684\u8ba1\u7b97\u673a\u5c06\u4e0d\u518d\u54cd\u5e94\u4efb\u4f55\u4e2d\u65ad\u4e8b\u4ef6\uff08\u6bd4\u5982\u8fd9\u65f6\u5019\u4f60\u6572\u4e2a\u952e\u76d8\u70b9\u4e2a\u9f20\u6807\u5565\u7684\uff0cCPU \u5c31\u4e0d\u518d\u7406\u4f60\u4e86\uff09\u3002\u4e4b\u6240\u4ee5\u8981\u5173\u95ed\u4e2d\u65ad\u54cd\u5e94\u662f\u56e0\u4e3a\u8981\u4fdd\u8bc1\u5f15\u5bfc\u4ee3\u7801\u7684\u987a\u5229\u6267\u884c\uff08\u603b\u4e0d\u80fd\u6267\u884c\u5230\u4e00\u534a\u88ab CPU \u7ed9\u4e2d\u65ad\u4e86\u5427\uff0c\u90a3\u76f4\u63a5\u5c31\u6302\u4e86\uff09\u3002 \u63a5\u4e0b\u6765\u7684 4 \u884c\u4ee3\u7801\u663e\u793a\u7528\u5f02\u6216\u5c06 %ax \u5bc4\u5b58\u5668\u7684\u503c\u7f6e\u6210 0\uff0c\u7136\u540e\u5728\u7528 %ax \u5bc4\u5b58\u5668\u7684\u503c\u5c06 %ds\u3001%es\u3001%ss \u4e09\u4e2a\u5bc4\u5b58\u5668\u7684\u503c\u5168\u90e8\u7f6e 0\uff0c\u76f8\u5f53\u4e8e\u521d\u59cb\u5316\u4e86\u3002 \u6211\u4eec\u63a5\u7740\u5f80\u4e0b\u770b bootasm.S \u7684\u4ee3\u7801\u3002\u5728\u521d\u59cb\u5316\u597d\u5bc4\u5b58\u5668\u540e\uff0cbootasm.S \u63a5\u4e0b\u6765\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u6253\u5f00 A20 gate \u7a81\u7834 1MB \u5185\u5b58\u5bfb\u5740\u7684\u9650\u5236\u3002X86\u8ba1\u7b97\u673a\u8981\u7a81\u7834 1MB \u5185\u5b58\u5bfb\u5740\u7684\u9650\u5236\u5c31\u8981\u628a A20 gate \u6253\u5f00\uff0c\u63a7\u5236 A20 gate \u7684\u65b9\u6cd5\u6709 3 \u79cd\uff1a * 804x \u952e\u76d8\u63a7\u5236\u5668\u6cd5 * Fast A20 \u6cd5 * BIOS \u4e2d\u65ad\u6cd5 xv6 \u7528\u4e86\u7b2c\u4e00\u79cd 804x \u952e\u76d8\u63a7\u5236\u5668\u6cd5\uff0c\u8fd9\u4e5f\u662f\u6700\u53e4\u8001\u4e14\u6548\u7387\u6700\u6162\u7684\u4e00\u79cd\u3002\u5f53\u7136\u56e0\u4e3a\u786c\u4ef6\u7684\u4e0d\u540c\uff0c\u8fd9\u4e09\u79cd\u65b9\u6cd5\u53ef\u80fd\u4e0d\u4f1a\u88ab\u786c\u4ef6\u90fd\u652f\u6301\uff0c\u6b63\u786e\u7684\u505a\u6cd5\u5e94\u8be5\u662f\u8fd9\u4e09\u79cd\u90fd\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u6bcf\u5c1d\u8bd5\u4e00\u4e2a\u5c31\u9a8c\u8bc1\u4e00\u4e0b A20 gate \u662f\u5426\u88ab\u6b63\u786e\u6253\u5f00\u4ee5\u4fdd\u8bc1\u517c\u5bb9\u5404\u79cd\u786c\u4ef6\u3002\u4f46\u662f xv6 \u4f5c\u4e3a\u4e00\u6b3e\u6559\u5b66\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u5c31\u6ca1\u5fc5\u8981\u505a\u7684\u8fd9\u4e48\u590d\u6742\u91cc\u3002\u53ea\u7528\u4e86\u4e00\u79cd\u6700\u53e4\u8001\u7684\u65b9\u6cd5\uff08\u4fdd\u8bc1\u517c\u5bb9\u5927\u591a\u6570\u786c\u4ef6\uff09\u800c\u4e14\u6ca1\u6709\u5bf9\u6253\u5f00\u6210\u529f\u4e0e\u5426\u505a\u9a8c\u8bc1\u3002\u50cf\u8bf8\u5982 Linux \u8fd9\u6837\u7684\u64cd\u4f5c\u7cfb\u7edf\u5c31\u628a\u4e09\u79cd\u65b9\u6cd5\u7684\u5b9e\u73b0\u90fd\u505a\u597d\uff0c\u5e76\u4e14\u52a0\u4e0a\u4e86\u9a8c\u8bc1\u673a\u5236\u3002 \u6211\u4eec\u5177\u4f53\u6765\u770b xv6 \u7684\u5b9e\u73b0\u4ee3\u7801 # Physical address line A20 is tied to zero so that the first PCs # with 2 MB would run software that assumed 1 MB. Undo that. # /////////////////////////////////////////////////////////////// # \u8fd9\u91cc\u7528\u4e86\u901a\u8fc7\u952e\u76d8\u63a7\u5236\u5668\u7aef\u53e3\u7684\u65b9\u6cd5\u6253\u5f00 A20 \u5730\u5740 # \u6253\u5f00 A20 \u5730\u5740\u7ebf\u7684\u65b9\u6cd5\u6709\u4e09\u79cd\uff0c\u5177\u4f53\u53ef\u53c2\u8003\uff1a # http://kernelx.weebly.com/a20-address-line.html # # \u4e0b\u9762\u90fd\u662f\u9488\u5bf9 804x \u952e\u76d8\u63a7\u5236\u5668\u7aef\u53e3\u7684\u64cd\u4f5c\uff0c\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u7528\u5230\u7684\u4e24\u4e2a\u7aef\u53e3 # 0x64 \u4ece\u8be5\u7aef\u53e3\u6267\u884c in \u8bfb\u53d6\u64cd\u4f5c\u65f6\uff0c\u8bfb\u53d6\u72b6\u6001\u5bc4\u5b58\u5668\uff0c8 \u4f4d\uff0c\u7b2c\u4e8c # \u4f4d\u6807\u8bc6\u8f93\u5165\u7f13\u51b2\u662f\u5426\u6709\u6570\u636e\u6240\u4ee5\u4e0b\u9762\u7528 0x2 \u6765 test \u8f93\u5165\u7f13\u51b2\u662f\u5426\u6709\u6570\u636e # \u5411\u8be5\u7aef\u53e3\u6267\u884c out \u5199\u64cd\u4f5c\u65f6\uff0c\u4ee3\u8868\u5411\u952e\u76d8\u63a7\u5236\u5668\u53d1\u9001\u547d\u4ee4\uff0c\u53d1\u9001 0xd1 \u4ee3 # \u8868\u8981\u5411\u952e\u76d8\u63a7\u5236\u5668\u7684 P2 \u7aef\u53e3\u5199\u5165\u6570\u636e\uff0c\u8981\u5199\u5165\u7684\u6570\u636e\u901a\u8fc7 0x60 \u7aef\u53e3\u4f20\u5165 # # P2 \u7aef\u53e3\uff0c8\u4f4d\uff0c\u7b2c\u4e8c\u4f4d\u5c31\u662f A20 \u5f00\u5173\uff0c\u6240\u4ee5\u5728 seta20.2 \u4ee3\u7801\u6bb5\u5c06 0xdf \u901a\u8fc7 # 0x60 \u7aef\u53e3\u5199\u5165\u5230 P2 \u65f6\u5c31\u4f1a\u628a A20 \u7f6e\u4f4d\uff0cA20 \u6253\u5f00\u540e\uff0c\u8fdb\u5165\u4fdd\u62a4\u6a21\u5f0f seta20.1: inb $0x64,%al # Wait for not busy testb $0x2,%al jnz seta20.1 # \u901a\u8fc7 0x64 \u72b6\u6001\u5bc4\u5b58\u5668\u7684\u7b2c\u4e8c\u4f4d\u5224\u65ad\u952e\u76d8\u7f13\u51b2\u533a\u91cc\u662f\u5426\u6709\u6570\u636e\uff0c\u5982\u679c\u8fd8\u6709\u6570\u636e\uff0c\u5219\u7b49\u5f85 movb $0xd1,%al # 0xd1 -> port 0x64 outb %al,$0x64 # 0xd1 \u4ee3\u8868\u5411 804x \u63a7\u5236\u5668\u7684 P2 \u5199\u6570\u636e seta20.2: inb $0x64,%al # Wait for not busy testb $0x2,%al jnz seta20.2 # \u540c\u4e0a\uff0c\u7ee7\u7eed\u5224\u65ad\u952e\u76d8\u7f13\u51b2\u533a\u662f\u5426\u6709\u6570\u636e\uff0c\u5982\u679c\u6709\u6570\u636e\uff0c\u5219\u7b49\u5f85 movb $0xdf,%al # 0xdf -> port 0x60 outb %al,$0x60 # \u5c06 0xdf 11011111 \u5199\u5165\u952e\u76d8\u63a7\u5236\u5668\u7684 P2 \u53e3\uff0c\u610f\u5473\u7740 A20 \u6253\u5f00\uff0c\u8fdb\u5165\u4fdd\u62a4\u6a21\u5f0f \u8fd9\u91cc bootasm.S \u7528\u4e86\u4e24\u4e2a\u65b9\u6cd5 seta20.1 \u548c seta20.2 \u6765\u5b9e\u73b0\u901a\u8fc7 804x \u952e\u76d8\u63a7\u5236\u5668\u6253\u5f00 A20 gate\u3002 \u8fd9\u4e2a\u529e\u6cd5\u786e\u5b9e\u662f\u5206\u4e24\u6b65\u6765\u641e\u7684\uff1a \u7b2c\u4e00\u6b65\u662f\u5411 804x \u952e\u76d8\u63a7\u5236\u5668\u7684 0x64 \u7aef\u53e3\u53d1\u9001\u547d\u4ee4\u3002\u8fd9\u91cc\u4f20\u9001\u7684\u547d\u4ee4\u662f 0xd1\uff0c\u8fd9\u4e2a\u547d\u4ee4\u7684\u610f\u601d\u662f\u8981\u5411\u952e\u76d8\u63a7\u5236\u5668\u7684 P2 \u5199\u5165\u6570\u636e\u3002\u8fd9\u5c31\u662f seta20.1 \u4ee3\u7801\u6bb5\u6240\u505a\u7684\u5de5\u4f5c\u3002 \u7b2c\u4e8c\u6b65\u5c31\u662f\u5411\u952e\u76d8\u63a7\u5236\u5668\u7684 P2 \u7aef\u53e3\u5199\u6570\u636e\u4e86\u3002\u5199\u6570\u636e\u7684\u65b9\u6cd5\u662f\u628a\u6570\u636e\u901a\u8fc7\u952e\u76d8\u63a7\u5236\u5668\u7684 0x60 \u7aef\u53e3\u5199\u8fdb\u53bb\u3002\u5199\u5165\u7684\u6570\u636e\u662f 0xdf\uff0c\u56e0\u4e3a A20 gate \u5c31\u5305\u542b\u5728\u952e\u76d8\u63a7\u5236\u5668\u7684 P2 \u7aef\u53e3\u4e2d\uff0c\u968f\u7740 0xdf \u7684\u5199\u5165\uff0cA20 gate \u5c31\u88ab\u6253\u5f00\u4e86\u3002 \u63a5\u4e0b\u6765\u8981\u505a\u7684\u5c31\u662f\u8fdb\u5165\u201c\u4fdd\u62a4\u6a21\u5f0f\u201d\u4e86\u3002\u5728\u8fdb\u5165\u4fdd\u62a4\u6a21\u5f0f\u524d\u9700\u8981\u5c06 GDT \u51c6\u5907\u597d\u3002\u4ec0\u4e48\u662f GDT \uff1f\u5b83\u7684\u4e2d\u6587\u540d\u79f0\u53eb\u201c\u5168\u5c40\u63cf\u8ff0\u7b26\u8868\u201d\uff0c\u60f3\u8981\u5728\u201c\u4fdd\u62a4\u6a21\u5f0f\u201d\u4e0b\u5bf9\u5185\u5b58\u8fdb\u884c\u5bfb\u5740\u5c31\u5148\u8981\u6709 GDT\uff0cGDT \u8868\u91cc\u7684\u6bcf\u4e00\u9879\u53eb\u505a\u201c\u6bb5\u63cf\u8ff0\u7b26\u201d\uff0c\u7528\u6765\u8bb0\u5f55\u6bcf\u4e2a\u5185\u5b58\u5206\u6bb5\u7684\u4e00\u4e9b\u5c5e\u6027\u4fe1\u606f\uff0c\u6bcf\u4e2a\u201c\u6bb5\u63cf\u8ff0\u7b26\u201d\u5360 8 \u5b57\u8282\uff0c\u6211\u4eec\u5148\u6765\u770b\u4e00\u773c\u8fd9\u4e2a\u6bb5\u63cf\u8ff0\u7b26\u7684\u5177\u4f53\u7ed3\u6784\uff1a \u4e09\u5757\u201c\u57fa\u5730\u5740\u201d\u7ec4\u88c5\u8d77\u6765\u6b63\u597d\u5c31\u662f 32 \u4f4d\u7684\u6bb5\u8d77\u59cb\u5185\u5b58\u5730\u5740\uff0c\u4e24\u5757 Limit \u7ec4\u6210\u8be5\u5185\u5b58\u5206\u6bb5\u7684\u957f\u5ea6\uff0c\u63a5\u4e0b\u6765\u4f9d\u6b21\u89e3\u91ca\u4e00\u4e0b\u5176\u4ed6\u4f4d\u6240\u4ee3\u8868\u7684\u610f\u4e49: P: 0 \u672c\u6bb5\u4e0d\u5728\u5185\u5b58\u4e2d DPL: \u8bbf\u95ee\u8be5\u6bb5\u5185\u5b58\u6240\u9700\u6743\u9650\u7b49\u7ea7 00 \u2014 11\uff0c0\u4e3a\u6700\u5927\u6743\u9650\u7ea7\u522b S: 1 \u4ee3\u8868\u6570\u636e\u6bb5\u3001\u4ee3\u7801\u6bb5\u6216\u5806\u6808\u6bb5\uff0c0 \u4ee3\u8868\u7cfb\u7edf\u6bb5\u5982\u4e2d\u65ad\u95e8\u6216\u8c03\u7528\u95e8 E: 1 \u4ee3\u8868\u4ee3\u7801\u6bb5\uff0c\u53ef\u6267\u884c\u6807\u8bb0\uff0c0 \u4ee3\u8868\u6570\u636e\u6bb5 ED: 0 \u4ee3\u8868\u5ffd\u7565\u7279\u6743\u7ea7\uff0c1 \u4ee3\u8868\u9075\u5b88\u7279\u6743\u7ea7 RW: \u5982\u679c\u662f\u6570\u636e\u6bb5\uff08E=0\uff09\u52191 \u4ee3\u8868\u53ef\u5199\u5165\uff0c0 \u4ee3\u8868\u53ea\u8bfb\uff1b\u5982\u679c\u662f\u4ee3\u7801\u6bb5\uff08E=1\uff09\u52191 \u4ee3\u8868\u53ef\u8bfb\u53d6\uff0c0 \u4ee3\u8868\u4e0d\u53ef\u8bfb\u53d6 A: 1 \u8868\u793a\u8be5\u6bb5\u5185\u5b58\u8bbf\u95ee\u8fc7\uff0c0 \u8868\u793a\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7 G: 1 \u8868\u793a 20 \u4f4d\u6bb5\u754c\u9650\u5355\u4f4d\u662f 4KB\uff0c\u6700\u5927\u957f\u5ea6 4GB\uff1b0 \u8868\u793a 20 \u4f4d\u6bb5\u754c\u9650\u5355\u4f4d\u662f 1 \u5b57\u8282\uff0c\u6700\u5927\u957f\u5ea6 1MB DB:1 \u8868\u793a\u5730\u5740\u548c\u64cd\u4f5c\u6570\u662f 32 \u4f4d\uff0c0 \u8868\u793a\u5730\u5740\u548c\u64cd\u4f5c\u6570\u662f 16 \u4f4d XX: \u4fdd\u7559\u4f4d\u6c38\u8fdc\u662f 0 AA: \u7ed9\u7cfb\u7edf\u63d0\u4f9b\u7684\u4fdd\u7559\u4f4d \u6709\u4e86\u4e0a\u8ff0\u7684\u89e3\u91ca\uff0c\u6211\u4eec\u518d\u6765\u770b\u770b xv6 \u662f\u600e\u6837\u51c6\u5907\u81ea\u5df1\u7684 GDT \u7684\uff0c\u4ee3\u7801\u5728 bootasm.S \u6587\u4ef6\u6700\u5e95\u90e8\uff1a gdt: SEG_NULLASM # \u7a7a SEG_ASM(STA_X|STA_R, 0x0, 0xffffffff) # \u4ee3\u7801\u6bb5 SEG_ASM(STA_W, 0x0, 0xffffffff) # \u6570\u636e\uff08\u5806\u6808\uff09\u6bb5 \u8fd9\u91cc\u7528\u5230\u4e86\u51e0\u4e2a\u5b8f\uff0c\u5177\u4f53\u7684\u5b8f\u5b9a\u4e49\u5728 asm.h \u6587\u4ef6\u4e2d\uff0c\u4e3a\u4e86\u65b9\u4fbf\u5927\u5bb6\u76f4\u89c2\u7684\u611f\u53d7\u4e00\u4e0b xv6 \u7684 GDT \u6211\u628a\u5b8f\u8ba1\u7b97\u51fa\u6765\u7684\u503c\u76f4\u63a5\u7ffb\u8bd1\u8fc7\u6765\uff0c\u4ee3\u7801\u5e94\u8be5\u662f\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\uff1a gdt: .word 0, 0; .byte 0, 0, 0, 0 # \u7a7a .word 0xffff, 0x0000; .byte 0x00, 0x9a, 0xcf, 0x00 # \u4ee3\u7801\u6bb5 .word 0xffff, 0x0000; .byte 0x00, 0x92, 0xcf, 0x00 # \u6570\u636e\u6bb5 \u7136\u540e\u6211\u4eec\u518d\u628a\u4ee3\u7801\u6bb5\u548c\u6570\u636e\u6bb5\u7684\u6bb5\u63cf\u8ff0\u7b26\u5177\u4f53\u6bcf\u4e00\u4f4d\u7684\u5bf9\u5e94\u503c\u8868\u5c55\u793a\u51fa\u6765\uff0c\u9996\u5148\u662f\u4ee3\u7801\u6bb5\uff1a \u7136\u540e\u662f\u6570\u636e\u6bb5\uff1a \u6211\u4eec\u6765\u4e00\u6b65\u6b65\u89e3\u91ca\u4e00\u4e0b\u3002\u9996\u5148\u8bf4\u8bf4\u8fd9\u4e24\u4e2a\u5185\u5b58\u6bb5\u7684\u5171\u540c\u70b9\uff0cDB = 1\uff0cG = 1\uff0c\u57fa\u5730\u5740\u90fd\u662f 0x00000000\uff0c\u5185\u5b58\u5206\u6bb5\u957f\u5ea6\u90fd\u662f 0xfffff\uff0c\u8fd9\u8bf4\u660e\u4ed6\u4eec\u90fd\u662f\u7528\u4e8e 32 \u4f4d\u5bfb\u5740\uff0c\u6240\u4f7f\u7528\u7684\u5185\u5b58\u662f\u4ece 0 \u5f00\u59cb\u5230 4GB \u7ed3\u675f\uff08\u5168\u90e8\u5185\u5b58\uff09\u3002\u8fd9\u91cc\u662f\u8fd9\u4e48\u7b97\u51fa\u6765\u7684\uff0c\u6bb5\u957f\u5ea6\u662f 0xfffff = 2^20\uff0cG = 1 \u8868\u793a\u6bb5\u754c\u9650\u5355\u4f4d\u662f 4k\uff0c\u6240\u4ee5 4k * 2^20 = 4GB\u3002 \u518d\u8bf4\u8bf4\u4ed6\u4eec\u7684\u4e0d\u540c\u70b9\uff0c\u4ee3\u7801\u6bb5\u7684 E = 1 \u800c\u6570\u636e\u6bb5\u7684 E = 0 \u8fd9\u8868\u540d\u4e86\u4ed6\u4eec\u7684\u8eab\u4efd\uff0c\u8eab\u4efd\u4e0d\u540c RW \u7684\u503c\u867d\u7136\u76f8\u540c\uff0c\u4f46\u4ee3\u8868\u7684\u610f\u4e49\u4e5f\u5c31\u4e0d\u76f8\u540c\u4e86\uff0c\u4ee3\u7801\u6bb5\u7684 RW = 1 \u4ee3\u8868\u53ef\u8bfb\u53d6\uff0c\u6570\u636e\u6bb5\u7684 RW = 1 \u8868\u793a\u53ef\u8bfb\u53ef\u5199\u3002\u8fd9\u4e5f\u548c\u6211\u4eec\u4e0a\u9762\u89e3\u91ca\u7684\u4fdd\u62a4\u6a21\u5f0f\u6240\u80fd\u591f\u8fbe\u5230\u7684\u76ee\u7684\u76f8\u543b\u5408\u3002 \u5f53\u7136\u4f5c\u4e3a\u4e00\u6b3e\u6559\u5b66\u4e3a\u76ee\u7684\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0cxv6 \u8fd9\u91cc\u7684 GDT \u8bbe\u7f6e\u8fd8\u662f\u4ee5\u7b80\u5355\u5bb9\u6613\u7406\u89e3\u4e3a\u76ee\u7684\u3002\u8bf8\u5982\u201c\u6743\u9650\u4f4d\u201d\u8fd9\u6837\u7684\u5b89\u5168\u673a\u5236\u5c31\u76f4\u63a5\u88ab\u5ffd\u7565\u4e86\uff0c\u800c\u5bf9\u5185\u5b58\u7684\u89c4\u5212\u4e5f\u6ca1\u6709\u505a\u5230\u771f\u6b63\u7684\u201c\u5206\u6bb5\u201d\uff0c\u800c\u662f\u4ee3\u7801\u6bb5\u548c\u6570\u636e\u6bb5\u90fd\u542f\u7528\u4e86\u4ece 0 \u5230 4GB \u7684\u5168\u90e8\u5185\u5b58\u5bfb\u5740\u3002\u5176\u5b9e\u8fd9\u79cd\u5185\u5b58\u89c4\u5212\u65b9\u6cd5\u53eb\u505a\u201c\u5e73\u5766\u5185\u5b58\u6a21\u578b\u201d\uff0c\u5373\u4fbf\u662f Linux \u4e5f\u662f\u7528\u7684\u8fd9\u6837\u7684\u65b9\u5f0f\u89c4\u5212\u5185\u5b58\u7684\uff0c\u5e76\u6ca1\u6709\u505a\u5230\u771f\u6b63\u7684\u201c\u5206\u6bb5\u201d\u3002\u8fd9\u662f\u56e0\u4e3a x86 \u7684\u5206\u9875\u673a\u5236\u662f\u57fa\u4e8e\u5206\u6bb5\u7684\uff0cLinux \u9009\u7528\u4e86\u66f4\u5148\u8fdb\u7684\u5206\u9875\u673a\u5236\u6765\u7ba1\u7406\u5185\u5b58\uff0c\u6240\u4ee5\u5728\u5206\u6bb5\u8fd9\u91cc\u53ea\u662f\u8d70\u4e00\u4e2a\u5fc5\u8981\u7684\u5f62\u5f0f\u7f62\u4e86\u3002\u800c xv6 \u540e\u9762\u5230\u5e95\u662f\u5426\u4e5f\u542f\u7528\u4e86\u5206\u9875\u673a\u5236\uff0c\u6211\u4eec\u76ee\u524d\u8fd8\u4e0d\u5f97\u800c\u77e5\u3002 GDT \u4e5f\u641e\u5b9a\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u8981\u628a\u6211\u4eec\u521a\u521a\u5728\u5185\u5b58\u4e2d\u8bbe\u5b9a\u597d\u7684 GDT \u7684\u4f4d\u7f6e\u544a\u8bc9 CPU\uff0c\u7136\u540e\u5c31\u201c\u4e07\u4e8b\u4ff1\u5907\uff0c\u53ea\u6b20\u4e1c\u98ce\u201d\u4e86\u3002CPU \u5355\u72ec\u4e3a\u6211\u4eec\u51c6\u5907\u4e86\u4e00\u4e2a\u5bc4\u5b58\u5668\u53eb\u505a GDTR \u7528\u6765\u4fdd\u5b58\u6211\u4eec GDT \u5728\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e\u548c\u6211\u4eec GDT \u7684\u957f\u5ea6\u3002GDTR \u5bc4\u5b58\u5668\u4e00\u5171 48 \u4f4d\uff0c\u5176\u4e2d\u9ad8 32 \u4f4d\u7528\u6765\u5b58\u50a8\u6211\u4eec\u7684 GDT \u5728\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5176\u4f59\u7684\u4f4e 16 \u4f4d\u7528\u6765\u5b58\u6211\u4eec\u7684 GDT \u7684\u5360\u7528\u7a7a\u95f4\u7684\u5927\u5c0f\uff08\u6240\u5360\u5b57\u8282\u6570\uff09\u3002 16 \u4f4d\u53ef\u4ee5\u8868\u793a\u7684\u6700\u5927\u503c\u4e3a 65536 \uff0c\u800c\u4e00\u4e2a\u6bb5\u63cf\u8ff0\u7b26\u662f 8 \u5b57\u8282\uff0c\u6240\u4ee5 GDT \u6700\u591a\u53ef\u4ee5\u6709 8192 \u4e2a\u6bb5\u63cf\u8ff0\u7b26\u3002\u4e0d\u4ec5 CPU \u7528\u4e86\u4e00\u4e2a\u5355\u72ec\u7684\u5bc4\u5b58\u5668 GDTR \u6765\u5b58\u50a8\u6211\u4eec\u7684 GDT\uff0c\u800c\u4e14\u8fd8\u4e13\u95e8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6307\u4ee4\u7528\u6765\u8ba9\u6211\u4eec\u628a GDT \u7684\u5730\u5740\u548c\u957f\u5ea6\u4f20\u7ed9 GDTR \u5bc4\u5b58\u5668\uff0c\u6765\u770b xv6 \u7684\u4ee3\u7801\uff1a lgdt gdtdesc \u800c\u8fd9\u4e2a gdtdesc \u548c gdt \u4e00\u8d77\u653e\u5728\u4e86 bootasm.S \u6587\u4ef6\u7684\u6700\u5e95\u90e8\uff0c\u6211\u4eec\u770b\u4e00\u773c\uff1a gdtdesc: .word (gdtdesc - gdt - 1) # 16 \u4f4d\u7684 gdt \u5927\u5c0fsizeof(gdt) - 1 .long gdt # 32 \u4f4d\u7684 gdt \u6240\u5728\u7269\u7406\u5730\u5740 \u4e0d\u591a\u4e0d\u5c11\uff0c\u6b63\u597d 48 \u4f4d\u4f20\u7ed9\u4e86 GDTR \u5bc4\u5b58\u5668\uff0c\u5230\u6b64 GDT \u5c31\u51c6\u5907\u597d\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8fdb\u5165\u4fdd\u62a4\u6a21\u5f0f\uff01 \u524d\u9762\u8bb2\u5230\uff0c\u5c31\u5982\u540c A20 gate \u8fd9\u4e2a\u5f00\u5173\u8d1f\u8d23\u6253\u5f00 1MB \u4ee5\u4e0a\u5185\u5b58\u5bfb\u5740\u4e00\u6837\uff0c\u60f3\u8981\u8fdb\u5165\u201c\u4fdd\u62a4\u6a21\u5f0f\u201d\u6211\u4eec\u4e5f\u9700\u8981\u6253\u5f00\u4e00\u4e2a\u5f00\u5173\uff0c\u8fd9\u4e2a\u5f00\u5173\u53eb\u201c\u63a7\u5236\u5bc4\u5b58\u5668\u201d\uff0cx86 \u7684\u63a7\u5236\u5bc4\u5b58\u5668\u4e00\u5171\u6709 4 \u4e2a\u5206\u522b\u662f CR0\u3001CR1\u3001CR2\u3001CR3\uff0c\u800c\u63a7\u5236\u8fdb\u5165\u201c\u4fdd\u62a4\u6a21\u5f0f\u201d\u7684\u5f00\u5173\u5728 CR0 \u4e0a\uff0c\u8fd9\u56db\u4e2a\u5bc4\u5b58\u5668\u90fd\u662f 32 \u4f4d\u7684\uff0c\u6211\u4eec\u770b\u4e00\u4e0b CR0 \u4e0a\u548c\u4fdd\u62a4\u6a21\u5f0f\u6709\u5173\u7684\u4f4d PG \u4e3a 0 \u65f6\u4ee3\u8868\u53ea\u4f7f\u7528\u5206\u6bb5\u5f0f\uff0c\u4e0d\u4f7f\u7528\u5206\u9875\u5f0f, \u4e3a 1 \u662f\u542f\u7528\u5206\u9875\u5f0f PE\u4e3a 0 \u65f6\u4ee3\u8868\u5173\u95ed\u4fdd\u62a4\u6a21\u5f0f\uff0c\u8fd0\u884c\u5728\u5b9e\u6a21\u5f0f\u4e0b, \u4e3a 1 \u5219\u5f00\u542f\u4fdd\u62a4\u6a21\u5f0f \u7136\u540e\u6211\u4eec\u7ee7\u7eed\u770b xv6 \u6253\u5f00\u4fdd\u62a4\u6a21\u5f0f\u7684\u4ee3\u7801\uff1a movl %cr0, %eax orl $CR0_PE, %eax movl %eax, %cr0 \u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u76f4\u63a5\u64cd\u4f5c CR0\uff0c\u6240\u4ee5\u6211\u4eec\u9996\u5148\u8981\u7528\u4e00\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\u6765\u4fdd\u5b58\u5f53\u524d CR0 \u5bc4\u5b58\u5668\u7684\u503c\uff0c\u8fd9\u91cc\u7b2c\u4e00\u884c\u5c31\u662f\u7528\u901a\u7528\u5bc4\u5b58\u5668 eax \u6765\u4fdd\u5b58 cr0 \u5bc4\u5b58\u5668\u7684\u503c\uff1b\u7136\u540e CR0_PE \u8fd9\u4e2a\u5b8f\u7684\u5b9a\u4e49\u5728 mmu.h \u6587\u4ef6\u4e2d\uff0c\u662f\u4e2a\u6570\u503c 0x00000001\uff0c\u5c06\u8fd9\u4e2a\u6570\u503c\u4e0e eax \u4e2d\u7684 cr0 \u5bc4\u5b58\u5668\u7684\u503c\u505a\u201c\u6216\u201d\u8fd0\u7b97\u540e\uff0c\u5c31\u4fdd\u8bc1\u5c06 cr0 \u7684\u7b2c 0 \u4f4d\u8bbe\u7f6e\u6210\u4e86 1 \u5373 PE = 1 \u4fdd\u8bc1\u6253\u5f00\u4e86\u4fdd\u62a4\u6a21\u5f0f\u7684\u5f00\u5173\u3002\u800c cr0 \u7684\u7b2c 31 \u4f4d PG = 0 \u8868\u793a\u6211\u4eec\u53ea\u4f7f\u7528\u5206\u6bb5\u5f0f\uff0c\u4e0d\u4f7f\u7528\u5206\u9875\uff0c\u8fd9\u65f6\u518d\u5c06\u65b0\u7684\u8ba1\u7b97\u540e\u7684 eax \u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u5199\u56de\u5230 cr0 \u5bc4\u5b58\u5668\u4e2d\u5c31\u5b8c\u6210\u4e86\u5230\u4fdd\u62a4\u6a21\u5f0f\u7684\u5207\u6362\u3002 \u5230\u8fd9\u91cc\u6211\u4eec\u5173\u4e8e xv6 \u4ece\u5b9e\u6a21\u5f0f\u5230\u4fdd\u62a4\u6a21\u5f0f\u7684\u8bb2\u89e3\u5c31\u63a5\u8fd1\u5c3e\u58f0\u4e86\u3002\u6211\u4eec\u5df2\u7ecf\u8fdb\u5165\u5230\u4fdd\u62a4\u6a21\u5f0f\u4e86\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u5c06\u4ee3\u7801\u5f7b\u5e95\u4ee5 32 \u4f4d\u7684\u4fdd\u62a4\u6a21\u5f0f\u6765\u8fd0\u884c\u4e86\u3002\u6240\u4ee5\u8fd9\u65f6\u6211\u4eec\u7684 xv6 \u4e5f\u8981\u51c6\u5907\u8df3\u8f6c\u4e86\uff0c\u518d\u6765\u770b\u4e00\u884c\u4ee3\u7801\uff1a ljmp $(SEG_KCODE<<3) $start32 \u8fd9\u662f\u4e00\u4e2a\u8df3\u8f6c\u8bed\u53e5\uff0c\u901a\u77e5 CPU \u8df3\u8f6c\u5230\u6307\u5b9a\u4f4d\u7f6e\u7ee7\u7eed\u6267\u884c\u6307\u4ee4\u3002 xv6 \u5728\u8fd9\u65f6\u5c31\u51c6\u5907\u8df3\u8f6c\u5230\u7528 C \u5199\u6210\u7684\u4ee3\u7801\u5904\u53bb\u7ee7\u7eed\u8fd0\u884c\u4e86\u3002\u8fd9\u4e2a\u8df3\u8f6c\u8bed\u53e5\u7684\u4e24\u4e2a\u53c2\u6570\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u4e00\u76f4\u518d\u8bb2\u7684\u5178\u578b\u7684\u201c\u57fa\u5730\u5740\u201d + \u201c\u504f\u79fb\u91cf\u201d\u7684\u65b9\u5f0f\u544a\u8bc9 CPU \u8981\u8df3\u8f6c\u5230\u5185\u5b58\u7684\u4ec0\u4e48\u4f4d\u7f6e\u53bb\u7ee7\u7eed\u6267\u884c\u6307\u4ee4\u3002 \u800c\u8fd9\u65f6\u6211\u4eec\u5df2\u7ecf\u5728\u5206\u6bb5\u5f0f\u7684\u4fdd\u62a4\u6a21\u5f0f\u4e0b\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u8fc7\u8fd9\u53e5\u8df3\u8f6c\u8bed\u53e5\u6765\u76f4\u89c2\u7684\u611f\u53d7\u4e00\u4e0b\u5206\u6bb5\u5f0f\u4fdd\u62a4\u6a21\u5f0f\u4e0b\u7684\u5185\u5b58\u5bfb\u5740\u3002 \u524d\u9762\u9884\u5907\u77e5\u8bc6\u91cc\u8bf4\u9053\u5728\u5206\u6bb5\u5f0f\u4fdd\u62a4\u6a21\u5f0f\u4e0b\u201c\u6bb5\u57fa\u5740\u201d\uff08\u57fa\u5730\u5740\uff09\u4e0d\u518d\u662f\u5185\u5b58\u5730\u5740\uff0c\u800c\u662f GDT \u8868\u7684\u4e0b\u6807\u3002\u4e0a\u9762\u6211\u4eec\u4e5f\u8bf4\u8fc7 GDT \u8868\u6700\u5927\u53ef\u4ee5\u6709 8192 \u4e2a\u8868\u9879\uff08\u6bb5\u63cf\u8ff0\u7b26\uff09\uff0c213 = 8192\uff0c\u6240\u4ee5\u4fdd\u5b58\u7740\u201c\u6bb5\u57fa\u5740\u201d\u7684 16 \u4f4d\u6bb5\u5bc4\u5b58\u5668\u53ea\u9700\u8981\u5176\u4e2d\u7684 13 \u4f4d\u5c31\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a GDT \u8868\u7684\u4e0b\u6807\uff0c\u5176\u4f59\u7684 3 \u4f4d\u53ef\u7528\u4f5c\u4ed6\u7528\u3002 \u6309\u7167\u8fd9\u4e2a\u601d\u8def\u6211\u4eec\u770b\u770b\u8fd9\u4e2a $(SEG_KCODE<<3) \u751f\u6210\u7684\u201c\u6bb5\u57fa\u5740\u201d\u662f\u4ec0\u4e48\uff1fSEG_KCODE \u662f\u4e2a\u5b8f\u5b9a\u4e49\uff0c\u5177\u4f53\u7684\u5b9a\u4e49\u5728 mmu.h \u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u7ffb\u8bd1\u8fc7\u6765\u5c31\u662f $(1<<3)\uff0c\u518d\u5c06\u5b83\u8fd0\u7b97\u51fa\u6765\u5f97\u5230 \u8fd9\u91cc\u8fd9\u4e2a 16 \u4f4d\u7684\u201c\u6bb5\u57fa\u5740\u201d\u7684\u9ad8 13 \u4f4d\u4ee3\u8868 GDT \u8868\u7684\u4e0b\u6807\uff08\u5b66\u540d\u5e94\u8be5\u53eb\u201c\u6bb5\u9009\u62e9\u5b50\u201d\uff09\uff0c\u8fd9\u91cc\u9ad8 13 \u4f4d\u521a\u597d\u662f 1\uff0c\u800c\u6211\u4eec\u7684 GDT \u91cc\u4e0b\u6807\u4f4d 1 \u7684\u5185\u5b58\u6bb5\u6b63\u597d\u662f\u6211\u4eec\u7684\u201c\u4ee3\u7801\u6bb5\u201d\uff0c\u800c\u201c\u4ee3\u7801\u6bb5\u201d\u6211\u4eec\u5728 GDT \u7684\u201c\u6bb5\u63cf\u8ff0\u7b26\u201d\u4e2d\u8bbe\u7f6e\u4e86\u5b83\u7684\u5176\u5b9e\u5185\u5b58\u5730\u5740\u662f 0x00000000 \uff0c\u5185\u5b58\u6bb5\u957f\u5ea6\u662f 1M*4K \uff0c\u8fd9\u662f\u5b8c\u6574\u7684 4GB \u5185\u5b58\u3002 \u6240\u4ee5\u8fd9\u91cc\u7684\u8df3\u8f6c\u8bed\u53e5\u9009\u62e9\u4e86\u201c\u4ee3\u7801\u6bb5\u201d\uff0c\u7531\u4e8e\u201c\u4ee3\u7801\u6bb5\u201d\u7684\u8d77\u59cb\u5185\u5b58\u5730\u5740\u662f 0x00000000 \uff0c\u957f\u5ea6\u662f\u5b8c\u6574\u7684 4GB\uff0c\u6240\u4ee5\u540e\u9762\u7684\u201c\u504f\u79fb\u91cf\u201d\u4ecd\u7136\u76f8\u5f53\u4e8e\u662f\u5b9e\u9645\u7684\u5185\u5b58\u5730\u5740\uff0c\u6240\u4ee5\u8fd9\u91cc\u201c\u504f\u79fb\u91cf\u201d\u76f4\u63a5\u7528\u4e86 $start32\uff0c\u4e5f\u5c31\u662f start32 \u76f4\u63a5\u5bf9\u5e94\u7684\u4ee3\u7801\u4f4d\u7f6e\u3002\u901a\u8fc7\u8fd9\u4e2a\u8df3\u8f6c\u5b9e\u9645\u4e0a CPU \u5c31\u4f1a\u8df3\u8f6c\u5230 bootasm.S \u6587\u4ef6\u7684 start32 \u6807\u8bc6\u7b26\u5904\u7ee7\u7eed\u6267\u884c\u4e86\u3002 \u52a0\u8f7d\u5185\u6838 boot loader \u5b9e\u73b0\u7684\u7b2c\u4e8c\u4e2a\u529f\u80fd\u5c31\u662f\u52a0\u8f7d\u5185\u6838\u3002\u4e5f\u5c31\u662f\u6839\u636eELF\u5185\u6838\u6587\u4ef6\u6240\u6307\u5b9a\u7684load address\uff0c\u4ece\u786c\u76d8\u4e2d\u628a\u5185\u6838\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u5bf9\u5e94\u7684load address\u4e0a\uff0c\u7136\u540e\u8df3\u8f6c\u5230\u5185\u6838ELF\u6587\u4ef6\u6240\u6307\u5b9a\u7684\u5165\u53e3\u70b9\u3002 ELF\u6587\u4ef6\u683c\u5f0f \u5728 Wiki \u767e\u79d1\u4e0a\u6709 ELF \u6587\u4ef6\u683c\u5f0f\u7684\u8be6\u7ec6\u89e3\u91ca \uff0c\u7b80\u5355\u7684\u8bf4 ELF \u6587\u4ef6\u683c\u5f0f\u662f Linux \u4e0b\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6807\u51c6\u683c\u5f0f\u3002\u5c31\u597d\u50cf Windows \u64cd\u4f5c\u7cfb\u7edf\u91cc\u7684\u53ef\u6267\u884c\u6587\u4ef6 .exe \u4e00\u6837\uff08\u5f53\u7136\uff0cWindows \u91cc\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6807\u51c6\u683c\u5f0f\u53eb PE \u6587\u4ef6\u683c\u5f0f\uff09\uff0cLinux \u64cd\u4f5c\u7cfb\u7edf\u91cc\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e5f\u6709\u5b83\u81ea\u5df1\u7684\u683c\u5f0f\u3002\u53ea\u6709\u6309\u7167\u6587\u4ef6\u6807\u51c6\u683c\u5f0f\u7ec4\u7ec7\u597d\u7684\u53ef\u6267\u884c\u6587\u4ef6\u64cd\u4f5c\u7cfb\u7edf\u624d\u77e5\u9053\u5982\u4f55\u52a0\u8f7d\u8fd0\u884c\u5b83\u3002\u6211\u4eec\u5e76\u4f7f\u4f7f\u7528 C \u8bed\u8a00\u6309\u7167\u6559\u79d1\u4e66\u5199\u51fa\u7684 HelloWorld \u4ee3\u7801\u5728 Linux \u73af\u5883\u4e0b\u6700\u7ec8\u901a\u8fc7\u7f16\u8bd1\u5668\uff08gcc\u7b49\uff09\u7f16\u8bd1\u51fa\u7684\u53ef\u4ee5\u8fd0\u884c\u7684\u7a0b\u5e8f\u5c31\u662f ELF \u6587\u4ef6\u683c\u5f0f\u7684\u3002 \u90a3\u4e48 ELF \u6587\u4ef6\u683c\u5f0f\u5177\u4f53\u7684\u7ed3\u6784\u662f\u600e\u6837\u7684\u5462\uff1f \u5927\u6982\u662f\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\u7684\u3002 ELF \u5934\u90e8 ( ELF Header ) \u7a0b\u5e8f\u5934\u8868 (Program Header Table) .text .rodata \u2026\u2026 \u8282\u5934\u8868 (Section Header Table) \u6211\u4eec\u53ef\u4ee5\u7528 readelf -h kernel \u547d\u4ee4\u6765\u68c0\u67e5 ELF header \u4fe1\u606f\u3002 $ readelf -h kernel ELF Header: Magic: 7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 Class: ELF32 Data: 2's complement, little endian Version: 1 (current) OS/ABI: UNIX - System V ABI Version: 0 Type: EXEC (Executable file) Machine: Intel 80386 Version: 0x1 Entry point address: 0x10000c Start of program headers: 52 (bytes into file) Start of section headers: 212404 (bytes into file) Flags: 0x0 Size of this header: 52 (bytes) Size of program headers: 32 (bytes) Number of program headers: 3 Size of section headers: 40 (bytes) Number of section headers: 16 Section header string table index: 15 \u8fd9\u91cc\u7684 \u2018Start of program headers\u2019 \u8bb0\u5f55\u7684\u662fprogram headers table\u5728\u8fd9\u4e2aELF\u6587\u4ef6\u4e2d\u7684\u4f4d\u7f6e\uff0c\u2018Size of program headers\u2019\u662fprogram headers table\u4e2d\u4e00\u6761\u8bb0\u5f55\u7684\u5927\u5c0f\uff0c\u2018Number of program headers\u2019 \u662fprogram headers table\u7684\u8bb0\u5f55\u7684\u6761\u6570\u3002\u2018Entry point address\u2019\u662f\u7a0b\u5e8f\u7684\u5165\u53e3\uff0c\u7a0b\u5e8f\u88ab\u52a0\u8f7d\u5b8c\u6210\u540e\u4f1a\u8df3\u8f6c\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u6267\u884c\u3002 \u540c\u6837\u6211\u4eec\u518d\u901a\u8fc7 readelf -l kernel \u547d\u4ee4\u6765\u68c0\u67e5program headers \u4fe1\u606f\u3002 $ readelf -l kernel Elf file type is EXEC (Executable file) Entry point 0x10000c There are 3 program headers, starting at offset 52 Program Headers: Type Offset VirtAddr PhysAddr FileSiz MemSiz Flg Align LOAD 0x001000 0x80100000 0x00100000 0x07aab 0x07aab R E 0x1000 LOAD 0x009000 0x80108000 0x00108000 0x02516 0x0d4a8 RW 0x1000 GNU_STACK 0x000000 0x00000000 0x00000000 0x00000 0x00000 RWE 0x10 Section to Segment mapping: Segment Sections... 00 .text .rodata 01 .data .bss 02 ELF program headers \u8bb0\u5f55\u4e86\u9700\u8981\u88ab\u52a0\u8f7d\u7684\u90e8\u5206\u5728\u6587\u4ef6\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\uff08Offset\uff09\u548c\u5927\u5c0f\uff08FileSiz\uff09\uff0c\u8fd9\u4e9b\u8981\u88ab\u52a0\u8f7d\u7684segment\u901a\u5e38\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2asection, \u8fd9\u4e9bsection \u5728Section to Segment mapping\u90a3\u91cc\u53ef\u4ee5\u770b\u5230\u3002boot loader \u5c31\u662f\u6839\u636eELF program headers\u51b3\u5b9a\u5982\u4f55\u52a0\u8f7d\u5404\u4e2a\u6bb5\uff0cprogram headers\u660e\u786e\u8bf4\u660e\u4e86\u54ea\u4e00\u90e8\u5206\u9700\u8981\u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u7684\u54ea\u4e2a\u4f4d\u7f6e\u3002 \u8fd9\u91cc\u7684LOAD\u662f\u9700\u8981\u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u7684\u6bb5\u7684\u6807\u8bb0\u3002VirtAddr\uff08link address\uff09\u662f\u7f16\u8bd1\u5668\u5728link\u7684\u65f6\u5019\u6240\u751f\u6210\u7684\u5730\u5740\uff0c\u662f\u7a0b\u5e8f\u4ee3\u7801\u6267\u884c\u7684\u65f6\u5019\u6240\u671f\u671b\u7684\u5730\u5740\uff0c\u8fd9\u4e2a\u5730\u5740\u901a\u5e38\u662f\u865a\u62df\u5730\u5740\uff08virtual address\uff09\uff0c\u7a0b\u5e8f\u4ee3\u7801\u91cc\u9762\u51fd\u6570\u548c\u53d8\u91cf\u6240\u5728\u7684\u5730\u5740\u5c31\u662flink addrees\u3002PhysAddr\uff08load address \uff09\u662f\u8868\u793a\u8fd9\u4e00\u6bb5\u4ee3\u7801\u88ab\u52a0\u8f7d\u7684\u65f6\u5019\u5c31\u52a0\u8f7d\u5230\u5230\u5185\u5b58\u7684\u8fd9\u4e2a\u7269\u7406\u5730\u5740\u4e0a\u3002 \u901a\u8fc7'Section to Segment mapping:'\u90a3\u6bb5\u4fe1\u606f\u6211\u4eec\u8fd8\u53ef\u4ee5\u770b\u5230\uff0c\u7b2c\u4e00\u4e2a Segment \u5305\u542b .text .rodata \u4e24\u4e2asection,\u7b2c\u4e8c\u4e2aSegment\u4fdd\u62a4.data .bss \u4e24\u4e2a\u4e24\u4e2asection\u3002\u6211\u4eec\u901a\u8fc7 readelf -S kernel \u547d\u4ee4\u770b\u770bELF\u6587\u4ef6\u7684Section Headers\u3002 $ readelf -S kernel There are 16 section headers, starting at offset 0x33db4: Section Headers: [Nr] Name Type Addr Off Size ES Flg Lk Inf Al [ 0] NULL 00000000 000000 000000 00 0 0 0 [ 1] .text PROGBITS 80100000 001000 0070da 00 AX 0 0 16 [ 2] .rodata PROGBITS 801070e0 0080e0 0009cb 00 A 0 0 32 [ 3] .data PROGBITS 80108000 009000 002516 00 WA 0 0 4096 [ 4] .bss NOBITS 8010a520 00b516 00af88 00 WA 0 0 32 [ 5] .debug_line PROGBITS 00000000 00b516 006cb5 00 0 0 1 [ 6] .debug_info PROGBITS 00000000 0121cb 0121ce 00 0 0 1 [ 7] .debug_abbrev PROGBITS 00000000 024399 003fd7 00 0 0 1 [ 8] .debug_aranges PROGBITS 00000000 028370 0003a8 00 0 0 8 [ 9] .debug_str PROGBITS 00000000 028718 000eb6 01 MS 0 0 1 [10] .debug_loc PROGBITS 00000000 0295ce 00681e 00 0 0 1 [11] .debug_ranges PROGBITS 00000000 02fdec 000d08 00 0 0 1 [12] .comment PROGBITS 00000000 030af4 00002b 01 MS 0 0 1 [13] .symtab SYMTAB 00000000 030b20 002050 10 14 78 4 [14] .strtab STRTAB 00000000 032b70 0011ac 00 0 0 1 [15] .shstrtab STRTAB 00000000 033d1c 000096 00 0 0 1 Key to Flags: W (write), A (alloc), X (execute), M (merge), S (strings), I (info), L (link order), O (extra OS processing required), G (group), T (TLS), C (compressed), x (unknown), o (OS specific), E (exclude), p (processor specific) \u8fd9\u91cc\u53ef\u4ee5\u770b\u5230'.text section'\u5728\u6587\u4ef6\u4e2d\u7684\u4f4d\u7f6e\uff08Off\uff09\u662f001000 \u5927\u5c0f\u662f0070da\uff0c\u7d27\u8ddf\u5176\u540e\u7684\u662f\u2018.rodata\u2019\uff0c\u5b83\u7684\u4f4d\u7f6e\u5e94\u8be5\u662f 001000 + 0070da = 0080da \uff0c\u53ef\u662f.rodata \u7684Off \u5374\u663e\u793a0080e0\uff0c\u8fd9\u662f\u56e0\u4e3a.rodata\u662f\u630932\u4e2a\u5b57\u8282\u5bf9\u9f50\u7684\uff08Al\uff09, 0080da \u630932\u4e2a\u5b57\u8282\u5bf9\u9f50\u540e\u5c31\u662f0080e0\uff0c'.rodata'\u7684\u8d77\u59cb\u4f4d\u7f6e\uff08off=0080e0\uff09 + \u5b83\u7684\u5927\u5c0f\uff08size=0009cb\uff09 = 008aab \u8fd9\u5c31\u662f\u2018.rodata\u2019\u7684\u7ed3\u675f\u4f4d\u7f6e, \u2018.rodata\u2019\u7684\u7ed3\u675f\u4f4d\u7f6e 008aab - \u2018.text\u2019 \u7684\u8d77\u59cb\u4f4d\u7f6e 001000 = 007aab \u6b63\u662fProgram Headers\u4e2d\u7b2c\u4e00\u4e2asegment\u7684\u5927\u5c0f\uff08FileSiz\uff09\u3002\u8fd9\u6b63\u662f\u56e0\u4e3a\u7b2c\u4e00\u4e2asegment \u5305\u542b text .rodata \u8fd9\u4e24\u4e2asection, \u800c\u7f16\u8bd1\u5668\u4f1a\u628a\u6bcf\u4e2asegment\u4e2d\u5305\u542b\u7684sections \u653e\u5728\u4e00\u8d77\u6309\u987a\u5e8f\u6392\u5217. \u540c\u6837\u7684\u9053\u7406\u7b2c\u4e8c\u4e2asegment\u4e5f\u662f\u8fd9\u6837\u7684\u60c5\u51b5\u3002 xv6 \u7684elf.h \u6587\u4ef6\u4e2d\u6709\u5173\u4e8eELF header\u548cprogram header \u7684\u8be6\u7ec6\u5b9a\u4e49. \u4ece bootmain \u5f00\u59cb \u5728\u201c\u4ece\u5b9e\u6a21\u5f0f\u5230\u4fdd\u62a4\u6a21\u5f0f\u90a3\u4e00\u8282\u4e2d\u201d\u6211\u4eec\u5199\u5230 \u901a\u8fc7\u8fd9\u4e2a\u8df3\u8f6c\u5b9e\u9645\u4e0a CPU \u5c31\u4f1a\u8df3\u8f6c\u5230 bootasm.S \u6587\u4ef6\u7684 start32 \u6807\u8bc6\u7b26\u5904\u7ee7\u7eed\u6267\u884c\u4e86 \u6211\u4eec\u6253\u5f00 bootasm.S \u6587\u4ef6\u770b\u770b\u5bf9\u5e94\u7684 start32 \u4f4d\u7f6e\u5904\u7684\u4ee3\u7801\u505a\u4e86\u4ec0\u4e48\u4e8b\u60c5\u3002 .code32 # Tell assembler to generate 32-bit code now. start32: # Set up the protected-mode data segment registers # \u50cf\u4e0a\u9762\u8bb2 ljmp \u65f6\u6240\u8bf4\u7684\uff0c\u8fd9\u65f6\u5019\u5df2\u7ecf\u5728\u4fdd\u62a4\u6a21\u5f0f\u4e0b\u4e86 # \u6570\u636e\u6bb5\u5728 GDT \u4e2d\u7684\u4e0b\u6807\u662f 2\uff0c\u6240\u4ee5\u8fd9\u91cc\u6570\u636e\u6bb5\u7684\u6bb5\u9009\u62e9\u5b50\u662f 2 << 3 = 0000 0000 0001 0000 # \u8fd9 16 \u4f4d\u7684\u6bb5\u9009\u62e9\u5b50\u4e2d\u7684\u524d 13 \u4f4d\u662f GDT \u6bb5\u8868\u4e0b\u6807\uff0c\u8fd9\u91cc\u524d 13 \u4f4d\u7684\u503c\u662f 2 \u4ee3\u8868\u9009\u62e9\u4e86\u6570\u636e\u6bb5 # \u8fd9\u91cc\u5c06 3 \u4e2a\u6570\u636e\u6bb5\u5bc4\u5b58\u5668\u90fd\u8d4b\u503c\u6210\u6570\u636e\u6bb5\u6bb5\u9009\u62e9\u5b50\u7684\u503c movw $(SEG_KDATA<<3), %ax # Our data segment selector \u6bb5\u9009\u62e9\u5b50\u8d4b\u503c\u7ed9 ax \u5bc4\u5b58\u5668 movw %ax, %ds # -> DS: Data Segment \u521d\u59cb\u5316\u6570\u636e\u6bb5\u5bc4\u5b58\u5668 movw %ax, %es # -> ES: Extra Segment \u521d\u59cb\u5316\u6269\u5c55\u6bb5\u5bc4\u5b58\u5668 movw %ax, %ss # -> SS: Stack Segment \u521d\u59cb\u5316\u5806\u6808\u6bb5\u5bc4\u5b58\u5668 movw $0, %ax # Zero segments not ready for use ax \u5bc4\u5b58\u5668\u6e05\u96f6 movw %ax, %fs # -> FS \u8f85\u52a9\u5bc4\u5b58\u5668\u6e05\u96f6 movw %ax, %gs # -> GS \u8f85\u52a9\u5bc4\u5b58\u5668\u6e05\u96f6 # Set up the stack pointer and call into C. movl $start, %esp call bootmain \u8fd9\u91cc\u5728\u521d\u59cb\u5316\u4e86\u4e00\u4e9b\u5bc4\u5b58\u5668\u540e\u76f4\u63a5\u8c03\u7528\u4e86\u4e00\u4e2a\u53eb\u505a bootmain \u7684\u51fd\u6570\uff0c\u800c\u8fd9\u4e2a\u51fd\u6570\u662f\u5199\u5728 bootmain.c \u6587\u4ef6\u4e2d\u7684\uff0c\u7ec8\u4e8e\u6211\u4eec\u6682\u65f6\u544a\u522b\u4e86\u6c47\u7f16\u6765\u5230\u4e86 C \u7684\u4e16\u754c\u4e86\u3002\u6765\u770b\u770b bootmain \u51fd\u6570\u5728\u505a\u4ec0\u4e48\u4e8b\u60c5\u3002 bootmain.c \u8fd9\u4e2a\u6587\u4ef6\u5f88\u5c0f\uff0c\u4ee3\u7801\u5f88\u5c11\uff0c\u5b83\u5176\u5b9e\u662f\u5f15\u5bfc\u5de5\u4f5c\u7684\u6700\u540e\u90e8\u5206\uff08\u5f15\u5bfc\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u5728 bootasm.S \u4e2d\u5b9e\u73b0\uff09\uff0c\u5b83\u8d1f\u8d23\u5c06\u5185\u6838\u4ece\u786c\u76d8\u4e0a\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u5f00\u59cb\u6267\u884c\u5185\u6838\u4e2d\u7684\u7a0b\u5e8f\u3002\u6211\u4eec\u6765\u770b\u4ee3\u7801\u3002 void bootmain(void) { struct elfhdr *elf; struct proghdr *ph, *eph; void (*entry)(void); uchar* pa; // \u4ece 0xa0000 \u5230 0xfffff \u7684\u7269\u7406\u5730\u5740\u8303\u56f4\u5c5e\u4e8e\u8bbe\u5907\u7a7a\u95f4\uff0c // \u6240\u4ee5\u5185\u6838\u653e\u7f6e\u5728 0x10000 \u5904\u5f00\u59cb elf = (struct elfhdr*)0x10000; // scratch space // \u4ece\u5185\u6838\u6240\u5728\u786c\u76d8\u4f4d\u7f6e\u8bfb\u53d6\u4e00\u5185\u5b58\u9875 4kb \u6570\u636e readseg((uchar*)elf, 4096, 0); // \u5224\u65ad\u662f\u5426\u4e3a ELF \u6587\u4ef6\u683c\u5f0f if(elf->magic != ELF_MAGIC) return; // let bootasm.S handle error // \u52a0\u8f7d ELF \u6587\u4ef6\u4e2d\u7684\u7a0b\u5e8f\u6bb5 (ignores ph flags). ph = (struct proghdr*)((uchar*)elf + elf->phoff); eph = ph + elf->phnum; for(; ph < eph; ph++){ pa = (uchar*)ph->paddr; readseg(pa, ph->filesz, ph->off); if(ph->memsz > ph->filesz) stosb(pa + ph->filesz, 0, ph->memsz - ph->filesz); } // Call the entry point from the ELF header. // Does not return! entry = (void(*)(void))(elf->entry); entry(); } \u8fd9\u91cc\u7684elfhdr\u5c31\u662fELF header, proghdr\u5c31\u662fprogram header, for \u5faa\u73af\u4e2d\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u628aELF kernel \u6587\u4ef6\u4e2d\u7684segment\u6240\u8bb0\u5f55\u7684\u88ab\u52a0\u8f7d\u533a\u57df\u52a0\u8f7d\u5230\u5bf9\u5e94segment\u6307\u5b9a\u7684\u7269\u7406\u5730\u5740\u4e0a\uff08ph->paddr\uff09\uff0cph->off\u662f\u88ab\u52a0\u8f7d\u533a\u57df\u5728ELF\u6587\u4ef6\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c ph->filesz\u662f\u88ab\u52a0\u8f7d\u533a\u57df\u7684\u5b9e\u9645\u5927\u5c0f\uff0c\u5f53 ph->memsz \u5927\u4e8eph->filesz\u65f6\uff0c\u5269\u4f59\u7684\u533a\u95f4\u8981\u586b\u5145\u4e3a0\u3002\u52a0\u8f7d\u5b8c\u6210\u540e\u8df3\u8f6c\u5230\u5165\u53e3\u51fd\u6570\uff08elf->entry\uff09\u5f00\u59cb\u8fd0\u884c\u5185\u6838\u3002 \u6700\u540e\u6211\u4eec\u770b\u4e00\u4e0b\u8bfb\u53d6\u78c1\u76d8\u4fe1\u606f\u7684\u65b9\u6cd5\u5b9e\u73b0\uff0c\u770b\u770b\u662f\u600e\u6837\u901a\u8fc7\u5411\u7279\u5b9a\u7aef\u53e3\u53d1\u9001\u6570\u636e\u6765\u8fbe\u5230\u64cd\u4f5c\u78c1\u76d8\u76ee\u7684\u7684\u3002 // Read a single sector at offset into dst. // \u8fd9\u91cc\u4f7f\u7528\u7684\u662f LBA \u78c1\u76d8\u5bfb\u5740\u6a21\u5f0f // LBA\u662f\u975e\u5e38\u5355\u7eaf\u7684\u4e00\u79cd\u5bfb\u5740\u6a21\u5f0f\ufe54\u4ece0\u5f00\u59cb\u7f16\u53f7\u6765\u5b9a\u4f4d\u533a\u5757\uff0c // \u7b2c\u4e00\u533a\u5757LBA=0\uff0c\u7b2c\u4e8c\u533a\u5757LBA=1\uff0c\u4f9d\u6b64\u7c7b\u63a8 void readsect(void *dst, uint offset) // 0x10000, 1 { // Issue command. waitdisk(); outb(0x1F2, 1); // \u8981\u8bfb\u53d6\u7684\u6247\u533a\u6570\u91cf count = 1 outb(0x1F3, offset); // \u6247\u533a LBA \u5730\u5740\u7684 0-7 \u4f4d outb(0x1F4, offset >> 8); // \u6247\u533a LBA \u5730\u5740\u7684 8-15 \u4f4d outb(0x1F5, offset >> 16); // \u6247\u533a LBA \u5730\u5740\u7684 16-23 \u4f4d outb(0x1F6, (offset >> 24) | 0xE0); // offset | 11100000 \u4fdd\u8bc1\u9ad8\u4e09\u4f4d\u6052\u4e3a 1 // \u7b2c7\u4f4d \u6052\u4e3a1 // \u7b2c6\u4f4d LBA\u6a21\u5f0f\u7684\u5f00\u5173\uff0c\u7f6e1\u4e3aLBA\u6a21\u5f0f // \u7b2c5\u4f4d \u6052\u4e3a1 // \u7b2c4\u4f4d \u4e3a0\u4ee3\u8868\u4e3b\u786c\u76d8\u3001\u4e3a1\u4ee3\u8868\u4ece\u786c\u76d8 // \u7b2c3~0\u4f4d \u6247\u533a LBA \u5730\u5740\u7684 24-27 \u4f4d outb(0x1F7, 0x20); // 20h\u4e3a\u8bfb\uff0c30h\u4e3a\u5199 // Read data. waitdisk(); insl(0x1F0, dst, SECTSIZE/4); } \u6211\u4eec\u5df2\u7ecf\u8bb2\u5230\u4e86\u5982\u4f55\u901a\u8fc7\u5411 804x \u952e\u76d8\u63a7\u5236\u5668\u7aef\u53e3\u53d1\u9001\u4fe1\u53f7\u6765\u6253\u5f00 A20 gate \u4e86\uff0c\u540c\u6837\u9053\u7406\uff0c\u6211\u4eec\u5411\u786c\u76d8\u63a7\u5236\u5668\u7684\u6307\u5b9a\u7aef\u53e3\u53d1\u9001\u4fe1\u53f7\u5c31\u53ef\u4ee5\u64cd\u4f5c\u786c\u76d8\uff0c\u4ece\u786c\u76d8\u8bfb\u53d6\u6216\u5411\u786c\u76d8\u5199\u5165\u6570\u636e\u3002IDE \u6807\u51c6\u5b9a\u4e49\u4e86 8 \u4e2a\u5bc4\u5b58\u5668\u6765\u64cd\u4f5c\u786c\u76d8\u3002PC \u4f53\u7cfb\u7ed3\u6784\u5c06\u7b2c\u4e00\u4e2a\u786c\u76d8\u63a7\u5236\u5668\u6620\u5c04\u5230\u7aef\u53e3 1F0-1F7 \u5904\uff0c\u800c\u7b2c\u4e8c\u4e2a\u786c\u76d8\u63a7\u5236\u5668\u5219\u88ab\u6620\u5c04\u5230\u7aef\u53e3 170-177 \u5904\u3002\u8fd9\u51e0\u4e2a\u5bc4\u5b58\u5668\u7684\u63cf\u8ff0\u5982\u4e0b\uff08\u4ee5\u7b2c\u4e00\u4e2a\u63a7\u5236\u5668\u4e3a\u4f8b\uff09\uff1a 1F0 - \u6570\u636e\u5bc4\u5b58\u5668\u3002\u8bfb\u5199\u6570\u636e\u90fd\u5fc5\u987b\u901a\u8fc7\u8fd9\u4e2a\u5bc4\u5b58\u5668 1F1 - \u9519\u8bef\u5bc4\u5b58\u5668\uff0c\u6bcf\u4e00\u4f4d\u4ee3\u8868\u4e00\u7c7b\u9519\u8bef\u3002\u5168\u96f6\u8868\u793a\u64cd\u4f5c\u6210\u529f\u3002 1F2 - \u6247\u533a\u8ba1\u6570\u3002\u8fd9\u91cc\u9762\u5b58\u653e\u4f60\u8981\u64cd\u4f5c\u7684\u6247\u533a\u6570\u91cf 1F3 - \u6247\u533aLBA\u5730\u5740\u76840-7\u4f4d 1F4 - \u6247\u533aLBA\u5730\u5740\u76848-15\u4f4d 1F5 - \u6247\u533aLBA\u5730\u5740\u768416-23\u4f4d 1F6 (\u4f4e4\u4f4d) - \u6247\u533aLBA\u5730\u5740\u768424-27\u4f4d 1F6 (\u7b2c4\u4f4d) - 0\u8868\u793a\u9009\u62e9\u4e3b\u76d8\uff0c1\u8868\u793a\u9009\u62e9\u4ece\u76d8 1F6 (5-7\u4f4d) - \u5fc5\u987b\u4e3a1 1F7 (\u5199) - \u547d\u4ee4\u5bc4\u5b58\u5668 1F7 (\u8bfb) - \u72b6\u6001\u5bc4\u5b58\u5668 bit 7 = 1 \u63a7\u5236\u5668\u5fd9 bit 6 = 1 \u9a71\u52a8\u5668\u5c31\u7eea bit 5 = 1 \u8bbe\u5907\u9519\u8bef bit 4 N/A bit 3 = 1 \u6247\u533a\u7f13\u51b2\u533a\u9519\u8bef bit 2 = 1 \u78c1\u76d8\u5df2\u88ab\u8bfb\u6821\u9a8c bit 1 N/A bit 0 = 1 \u4e0a\u4e00\u6b21\u547d\u4ee4\u6267\u884c\u5931\u8d25 \u5185\u6838\u52a0\u8f7d\u540e\u7684\u7cfb\u7edf\u5185\u5b58\u5e03\u5c40 \u81f3\u6b64\u5185\u6838\u5df2\u7ecf\u88ab\u8f7d\u5165\u5185\u5b58\u5e76\u51c6\u5907\u6295\u5165\u8fd0\u884c\u4e86\u3002\u5728\u7ed3\u675f\u8fd9\u4e00\u7bc7\u524d\u6211\u4eec\u518d\u770b\u4e00\u773c\u76ee\u524d\u72b6\u6001\u4e0b\u7cfb\u7edf\u6574\u4f53\u7684\u5185\u5b58\u5e03\u5c40\uff0c\u5bf9\u5373\u5c06\u8fd0\u884c\u7684\u5185\u6838\u73af\u5883\u6709\u4e00\u4e2a\u5927\u81f4\u7684\u4e86\u89e3\u3002 \u4ece bootasm.S \u6587\u4ef6\u7684\u4ee3\u7801 movl $start, %esp # \u6808\u9876\u88ab\u653e\u7f6e\u5728 0x7C00 \u5904\uff0c\u5373 $start \u53ef\u77e5\uff0c\u6267\u884c bootmain.c \u4e4b\u524d bootasm.S \u6c47\u7f16\u4ee3\u7801\u5df2\u7ecf\u5c06\u6808\u7684\u6808\u9876\u8bbe\u7f6e\u5728\u4e86 0x7C00 \u5904\u3002\u4e4b\u524d\u6211\u4eec\u4e86\u89e3\u8fc7 x86 \u67b6\u6784\u8ba1\u7b97\u673a\u7684\u542f\u52a8\u8fc7\u7a0b\uff0cBIOS \u4f1a\u5c06\u5f15\u5bfc\u6247\u533a\u7684\u5f15\u5bfc\u7a0b\u5e8f\u52a0\u8f7d\u5230 0x7C00 \u5904\u5e76\u5f15\u5bfc CPU \u4ece\u6b64\u5904\u5f00\u59cb\u8fd0\u884c\uff0c\u6545\u6808\u9876\u5373\u88ab\u8bbe\u7f6e\u5728\u4e86\u548c\u5f15\u5bfc\u7a0b\u5e8f\u4e00\u81f4\u7684\u5185\u5b58\u4f4d\u7f6e\u4e0a\u3002\u6211\u4eec\u77e5\u9053\u6808\u662f\u81ea\u6808\u9876\u5f00\u59cb\u5411\u4e0b\u589e\u957f\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u6808\u4f1a\u9010\u6e10\u8fdc\u79bb\u5f15\u5bfc\u7a0b\u5e8f\uff0c\u6240\u4ee5\u8fd9\u91cc\u8fd9\u6837\u5b89\u7f6e\u6808\u9876\u7684\u4f4d\u7f6e\u5e76\u65e0\u4ec0\u4e48\u95ee\u9898\u3002 \u5728 bootmain.c \u6587\u4ef6\u7684\u4ee3\u7801 elf = (struct elfhdr*)0x10000; // \u4ece\u5185\u6838\u6240\u5728\u786c\u76d8\u4f4d\u7f6e\u8bfb\u53d6\u4e00\u5185\u5b58\u9875 4kb \u6570\u636e readseg((uchar*)elf, 4096, 0); \u53ef\u4ee5\u770b\u51faboot loader \u5148\u628a\u5185\u6838ELF\uff08Executable and Linkable Format\uff09\u52a0\u8f7d\u5230 0x10000 (64K)\u4f4d\u7f6e(\u5b9e\u9645\u4e0a\u8fd9\u662f\u4e00\u4e2a\u4efb\u610f\u9009\u53d6\u7684\u4e34\u65f6\u5b58\u653e\u7684\u4f4d\u7f6e)\uff0c\u7136\u540e\u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u8bfb\u53d6 ELF header \u548c program header , \u6839\u636eprograme header\u91cc\u7684\u6bb5\u8bb0\u5f55\u7684\u52a0\u8f7d\u5bf9\u5e94\u7684\u4ee3\u7801\u6bb5\u548c\u6570\u636e\u6bb5\u5230paddr\u6307\u5b9a\u7684\u4f4d\u7f6e\uff0c\u5176\u4e2d\u4ee3\u7801\u6bb5\u7684paddr\u662f0x100000(1M) ,\u6570\u636e\u6bb5\u7684paddr\u662f0x00108000. \u6240\u4ee5\u52a0\u8f7d\u5b8c\u5185\u6838\u540e\u7684\u5185\u5b58\u5e03\u5c40\u793a\u610f\u56fe\u5982\u4e0b: +------------------------------+ | | | kernel data | +------------------------------+ 0x00108000 | | | kernel code | +------------------------------+ 0x00100000 | | | | | | +------------------------------+ 0x00007d00 | | | boot loader | STACK --------> +------------------------------+ 0x00007c00 grow down | | | stack | +------------------------------+ 0x00000000 \u53c2\u8003\uff1a http://leenjewel.github.io/blog/2014/07/29/%5B%28xue-xi-xv6%29%5D-cong-shi-mo-shi-dao-bao-hu-mo-shi/","title":"Boot loader"},{"location":"boot_loader/#the-boot-loader","text":"","title":"The Boot Loader"},{"location":"boot_loader/#x86","text":"\u770b\u5177\u4f53\u7684\u4ee3\u7801\u524d\u5148\u8bf4\u8bf4 x86 \u67b6\u6784\u5f00\u673a\u5f15\u5bfc\u7684\u76f8\u5173\u77e5\u8bc6\u3002\u4ece\u7ed9 x86 \u901a\u7535\u7684\u4e00\u523b\u5f00\u59cb\uff0cCPU \u6267\u884c\u7684\u7b2c\u4e00\u6bb5\u6307\u4ee4\u662f BIOS \u56fa\u5316\u5728 ROM \u4e0a\u7684\u4ee3\u7801\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u786c\u4ef6\u5b9a\u6b7b\u7684\u89c4\u77e9\uff0c\u5c31\u662f\u8fd9\u6837\u3002 \u800c BIOS \u5728\u786c\u4ef6\u81ea\u68c0\u5b8c\u6210\u540e\u4f1a\u6839\u636e\u4f60\u5728 BIOS \u91cc\u8bbe\u7f6e\u7684\u542f\u52a8\u987a\u5e8f\uff08\u786c\u76d8\u3001\u5149\u9a71\u3001USB\uff09\u8bfb\u53d6\u6bcf\u4e2a\u5f15\u5bfc\u8bbe\u5907\u7684\u7b2c\u4e00\u4e2a\u6247\u533a 512\u5b57\u8282\u7684\u5185\u5bb9\uff0c\u5e76\u5224\u65ad\u8fd9\u6bb5\u5185\u5bb9\u7684\u6700\u540e 2 \u5b57\u8282\u662f\u5426\u4e3a 0xAA55\uff0c\u5982\u679c\u662f\u8bf4\u660e\u8fd9\u4e2a\u8bbe\u5907\u662f\u53ef\u5f15\u5bfc\u7684\uff0c\u4e8e\u662f\u5c31\u5c06\u8fd9 512 \u5b57\u8282\u7684\u5185\u5bb9\u653e\u5230\u5185\u5b58\u7684 0x7c00\uff0c\u7136\u540e\u544a\u8bc9 CPU \u53bb\u6267\u884c\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u6307\u4ee4\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u540c\u6837\u662f\u786c\u4ef6\u5b9a\u6b7b\u7684\u89c4\u77e9\uff0c\u5c31\u662f\u8fd9\u6837\u3002 \u6709\u4e86\u4e0a\u9762\u7684\u4ecb\u7ecd\u6211\u4eec\u518d\u56de\u5230 xv6 \u5982\u679c\u4f60\u770b\u4e00\u4e0b\u7f16\u8bd1\u751f\u6210\u7684 bootblock \u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f60\u4f1a\u60ca\u559c\u7684\u53d1\u73b0\u5b83\u7684\u6587\u4ef6\u5927\u5c0f\u521a\u597d\u662f 512 \u5b57\u8282\u3002\u7528\u5341\u516d\u8fdb\u5236\u7f16\u8f91\u5668\uff08\u6211\u5728 Mac OSX \u4e0b\u7528\u7684\u662f 0xED \u8fd9\u4e2a\u8f6f\u4ef6\uff09\u6253\u5f00 bootblock \u8fd9\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u4f60\u53c8\u4f1a\u53d1\u73b0\u8fd9\u4e2a 512 \u5b57\u8282\u7684\u6587\u4ef6\u7684\u6700\u540e\u4e24\u5b57\u8282\u6b63\u597d\u662f 0xAA55\u3002 \u770b\u4e00\u4e0bMakefile \u4e2d bootblock\u7684\u7684\u751f\u6210\u4ee3\u7801 bootblock: bootasm.S bootmain.c $(CC) $(CFLAGS) -fno-pic -O -nostdinc -I. -c bootmain.c $(CC) $(CFLAGS) -fno-pic -nostdinc -I. -c bootasm.S $(LD) $(LDFLAGS) -N -e start -Ttext 0x7C00 -o bootblock.o bootasm.o bootmain.o $(OBJDUMP) -S bootblock.o > bootblock.asm $(OBJCOPY) -S -O binary -j .text bootblock.o bootblock ./sign.pl bootblock $(LD)\u94fe\u63a5\u547d\u4ee4\u8d1f\u8d23\u628a'.o'\u6587\u4ef6\u94fe\u63a5\u4e3a\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u4e0a\u9762\u8bf4\u8fc7BIOS\u4f1a\u628a\u5f15\u5bfc\u6247\u533a\uff08boot sector\uff09\u91cc\u7684boot loader \u52a0\u8f7d\u52300x7C00\u7684\u5185\u5b58\u5730\u5740\u4e0a\uff0c\u8fd9\u4e5f\u662fboot loader\u5f00\u59cb\u6267\u884c\u7684\u5730\u65b9,\u8fd9\u91cc\u7684 -Ttext 0x7C00 \u5c31\u662f\u544a\u8bc9\u94fe\u63a5\u5668\u4ee3\u7801\u6bb5\u7684\u8d77\u59cb\u4f4d\u7f6e\u662f0x7C00\uff0c \u8fd9\u6837\u94fe\u63a5\u5668\u5c31\u53ef\u4ee5\u5728\u4ea7\u751f\u7684\u4ee3\u7801\u4e2d\u751f\u6210\u6b63\u786e\u7684\u5185\u5b58\u5730\u5740\u3002\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5165\u53e3\u662f start(\u901a\u8fc7 -e start \u8bbe\u5b9a)\u3002\u8fd9\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\u662fELF\u683c\u5f0f\u7684\uff0c\u4f46\u662f\u6b64\u65f6\u64cd\u4f5c\u7cfb\u7edf\u8fd8\u672a\u88ab\u52a0\u8f7d\u8fd0\u884c\u65e0\u6cd5\u8bc6\u522bELF\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u6240\u4ee5$(OBJCOPY)\u547d\u4ee4\u628abootblock.o\u8fd9\u4e2aELF\u6587\u4ef6\u4e2d\u7684\u4ee3\u7801\u6bb5\uff08 -j .text \uff09\u6309\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\uff08 -O binary \uff09\u62f7\u8d1d\u5230bootblock\u6587\u4ef6\u4e2d\u3002./sign.pl\u8fd9\u4e2a\u547d\u4ee4\u8d1f\u8d23\u628a boot loader \u6587\u4ef6bootblock\u586b\u5145\u4e3a512\u4e2a\u5b57\u8282\u5927\u5c0f\uff0c\u7136\u540e\u628a\u672b\u5c3e\u4e24\u4e2a\u5b57\u8282\u8bbe\u7f6e\u4e3a 0xAA55 \u4f5c\u4e3a\u5f15\u5bfc\u6247\u533a\u7684\u6807\u793a\u3002 \u5728 xv6.img \u7684\u751f\u6210\u4ee3\u7801\u4e2d xv6.img: bootblock kernel fs.img dd if=/dev/zero of=xv6.img count=10000 dd if=bootblock of=xv6.img conv=notrunc dd if=kernel of=xv6.img seek=1 conv=notrunc \u53ef\u4ee5\u53d1\u73b0xv6.img \u5c31\u662f\u628abootblock\u548ckernel\u62fc\u63a5\u6210\u4e00\u4e2a\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u7684\u5927\u5c0f\u662f10000\u4e2a\u6247\u533a \uff08count=10000\uff09\uff0cbootbloack\u5728\u7b2c\u4e00\u4e2a\u6247\u533a\uff0ckernel\u88ab\u62fc\u63a5\u5230\u7b2c\u4e00\u4e2a\u6247\u533a\u540e\u8fb9\uff08seek=1\uff09\u3002","title":"x86 \u7684\u542f\u52a8"},{"location":"boot_loader/#boot-loader","text":"\u5728\"x86 \u7684\u542f\u52a8\"\u4e00\u8282\u4e2d\u8bb2\u5230BIOS\u4f1a\u628aboot loader\u52a0\u8f7d\u5230\u5185\u5b58\u76840x7c00\u7684\u4f4d\u7f6e\uff0c\u7136\u540e\u8df3\u8f6c\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u53bb\u6267\u884cboot loader\u4ee3\u7801\u3002\u6b64\u65f6\u63a7\u5236\u6743\u5df2\u7ecf\u4ea4\u7ed9boot loader\u4e86. boot loader\u4e3b\u8981\u5b8c\u6210\u4e86\u4e24\u4e2a\u529f\u80fd\uff1a \u5b9e\u6a21\u5f0f\u5207\u6362\u5230\u4fdd\u62a4\u6a21\u5f0f\uff1a\u4ece20\u4f4d\uff081M\uff09\u5bfb\u5740\u5b9e\u6a21\u5f0f\u5207\u6362\u523032\u4f4d(4G)\u5bfb\u5740\u7684\u4fdd\u62a4\u6a21\u5f0f \u52a0\u8f7d\u5185\u6838\uff1a\u6839\u636eELF\u5185\u6838\u6587\u4ef6\u6240\u6307\u5b9a\u7684\u7269\u7406\u5730\u5740\uff0c\u4ece\u786c\u76d8\u4e2d\u628a\u5185\u6838\u5230\u5185\u5b58\u4e2d\u7684\u8be5\u5730\u5740\u4e0a\uff0c\u7136\u540e\u8df3\u8f6c\u5230\u5185\u6838ELF\u6587\u4ef6\u6240\u5730\u5740\u7684\u5165\u53e3\u70b9\u3002","title":"\u8fdb\u5165Boot Loader"},{"location":"boot_loader/#_1","text":"\u9996\u5148\u7406\u89e3\u4e00\u4e0b\u5b9e\u6a21\u5f0f\u4e0e\u4fdd\u62a4\u6a21\u5f0f\u3002\u5982\u679c\u8bf4\u8fdb\u7a0b\u662f\u5bf9CPU\u7684\u62bd\u8c61\uff0c\u6587\u4ef6\u662f\u5bf9\u786c\u76d8\u7684\u62bd\u8c61\uff0c\u90a3\u4e48\u865a\u62df\u5185\u5b58\u5c31\u662f\u5bf9\u7269\u7406\u5185\u5b58\u7684\u62bd\u8c61\u3002\u5b9e\u9645\u4e0a\u8ba1\u7b97\u673a\u7f16\u7a0b\u9762\u5bf9\u7684\u90fd\u662f\u865a\u62df\u5185\u5b58\uff0c\u4e5f\u5c31\u662f\u8bf4\u7f16\u7a0b\u65f6\u5b58\u53d6\u6570\u636e\u7684\u5730\u5740\u90fd\u662f\u865a\u62df\u5730\u5740\uff08\u4e5f\u5373\u903b\u8f91\u5730\u5740\uff09\uff0cCPU\u628a\u865a\u62df\u5730\u5740\u4ea4\u7ed9MMU\uff08Memery management unit\uff09\u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740\uff0c\u518d\u53bb\u8bbf\u95ee\u7269\u7406\u5185\u5b58\u3002\u5176\u5b9e\u8fd9\u91cc\u8bf4\u7684\u5185\u5b58\u662f\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\uff08Adress Space\uff09\u5e76\u4e0d\u5355\u6307\u5b58\u53d6\u6570\u636e\u7684\u5185\u5b58\uff0c\u4e5f\u5305\u62ec\u4e00\u4e9b\u5916\u90e8\u8bbe\u5907\u6bd4\u5982\u663e\u793a\u5668/\u952e\u76d8\u7b49\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u8fd9\u4e9b\u5916\u90e8\u8bbe\u5907\u8bfb\u5199\u4e5f\u662f\u88ab\u5f71\u5c04\u5230\u7279\u5b9a\u7684\u5185\u5b58\u5730\u5740\u7a7a\u95f4\u4e0a\u3002 \u5b9e\u6a21\u5f0f\u4e0bMMU\u4e0d\u4f1a\u8fdb\u884c\u5730\u5740\u8f6c\u6362\u4e5f\u5c31\u662f\u8bf4\u865a\u62df\u5730\u5740\u7b49\u4e8e\u7269\u7406\u5730\u5740\u3002\u5b9e\u6a21\u5f0f\u5bfb\u5740\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b 16 \u2217 selector + offset \u7b2c\u4e00\u4e2a16\u4f4d\u7684\u503c\u53eb\u505aselector\u662f\u5b58\u50a8\u5728\u6bb5\u5bc4\u5b58\u5668\u91cc\u7684\uff0c\u7b2c\u4e8c\u4e2a16\u4f4d\u7684\u503c\u53eb\u505aoffset.\u4e3a\u4ec0\u4e48\u8981\u7528\u8fd9\u6837\u7684\u65b9\u5f0f\u8868\u793a\u5462\uff1f\u539f\u6765\u65e9\u671f\u82f1\u7279\u5c14\u7684 8086 CPU \u662f 16 \u4f4d\u7684\uff0c\u5982\u679c\u76f4\u63a5\u7528\u6765\u8868\u793a\u5185\u5b58\u5730\u5740\u7684\u8bdd\uff0c16 \u4f4d\u6700\u5927\u53ef\u4ee5\u8868\u793a\u7684\u5185\u5b58\u5730\u5740\u662f 2^16 = 65536 \u4e2a\u5730\u5740\uff0c\u6bcf\u4e2a\u5730\u5740\u4ee3\u8868\u4e00\u5b57\u8282\u7684\u5185\u5b58\u6570\u636e\u7684\u8bdd\uff0c16 \u4f4d\u6700\u591a\u53ea\u80fd\u652f\u6301 64KB \u5185\u5b58\uff0c\u8fd9\u663e\u7136\u662f\u4e0d\u591f\u7528\u7684\u3002\u4e8e\u662f\u82f1\u7279\u5c14\u5728\u4fdd\u6301\u6570\u636e\u7ebf\u5bbd\u4e3a 16 \u4f4d\u7684\u540c\u65f6\u5c06\u5730\u5740\u7ebf\u7684\u5bbd\u5ea6\u589e\u5927\u5230 20 \u4f4d\uff0c\u4e5f\u5c31\u662f\u8bf4\u5185\u5b58\u5730\u5740\u662f 20 \u4f4d\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u652f\u6301 2^20 = 1MB \u7684\u5185\u5b58\uff0c\u5f53\u65f6\u7684\u4eba\u4eec\u8ba4\u4e3a\u8fd9\u6837\u5c31\u8db3\u591f\u4e86\u3002\u73b0\u5728\u95ee\u9898\u6765\u4e86\uff0c16 \u4f4d\u7684\u6570\u636e\u7ebf\u5bbd\uff08\u5bc4\u5b58\u5668\u81ea\u7136\u4e5f\u662f 16 \u4f4d\u7684\uff09\u5982\u4f55\u80fd\u8868\u793a 20 \u4f4d\u7684\u5730\u5740\u5462\uff1f\u7b54\u6848\u662f\u7528\u4e24\u4e2a 16 \u4f4d\u7684\u5bc4\u5b58\u5668\u6765\u8868\u793a\u3002\u8fd9\u5c31\u662f\u201c\u6bb5\u57fa\u5740\u201d + \u201c\u504f\u79fb\u91cf\u201d\u5bfb\u5740\u65b9\u5f0f\u7684\u7531\u6765\u3002\u4e00\u4e2a 16 \u4f4d\u7684\u5bc4\u5b58\u5668\u6765\u8868\u793a\u201c\u6bb5\u57fa\u5740\u201d\uff08CS\u3001DS\u3001SS\u3001ES\u56db\u4e2a\u5bc4\u5b58\u5668\uff09\uff0c\u5177\u4f53\u7684\u505a\u6cd5\u662f\u5148\u5c06 16 \u4f4d\u7684\u201c\u6bb5\u57fa\u5740\u201d\u5de6\u79fb 4 \u4f4d\uff0c\u7136\u540e\u52a0\u4e0a 16 \u4f4d\u7684\u201c\u504f\u79fb\u91cf\u201d\u6700\u7ec8\u5f97\u5230 20 \u4f4d\u7684\u5185\u5b58\u5730\u5740\u9001\u5165\u5730\u5740\u7ebf\u3002 \u4fdd\u62a4\u6a21\u5f0f\u4e0b\u9762\u5bf9\u7684\u662f\u865a\u62df\u5730\u5740\uff0cCPU\u8fdb\u884c\u5b58\u53d6\u6570\u636e\u65f6\u865a\u62df\u5730\u5740\u4f1a\u88ab\u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740\uff0c\u7136\u540e\u518d\u53bb\u8bbf\u95ee\u5185\u5b58\u3002\u4fdd\u62a4\u6a21\u5f0f\u5206\u4e3a\u4e24\u79cd\uff0c\u6bb5\u4fdd\u5b58\u6a21\u5f0f\u548c\u9875\u4fdd\u62a4\u6a21\u5f0f\u3002 \u6bb5\u4fdd\u62a4\u6a21\u5f0f\u9700\u8981\u7ef4\u62a4\u4e00\u5f20\u5168\u5c40\u63cf\u8ff0\u7b26\u8868(GDT)\uff0cGDT\u8bb0\u5f55\u4e86\u6bcf\u4e2a\u6bb5\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\u548c\u957f\u5ea6\u4ee5\u53ca\u5176\u4ed6\u7684\u4e00\u4e9b\u4fdd\u62a4\u4f4d\u3002\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u544a\u8bc9CPU GDT\u6240\u5728\u7684\u5730\u5740\uff0cCPU\uff08MMU\uff09\u901a\u8fc7CS\u6bb5\u5bc4\u5b58\u5668\u7684\u6bb5\u5730\u5740\u7d22\u5f15\u5230\u67d0\u4e00\u6761\u6bb5\u8868\u8bb0\u5f55\uff0c\u627e\u5230\u5bf9\u5e94\u6bb5\u7684\u6bb5\u7269\u7406\u5730\u5740\uff0c\u518d\u52a0\u4e0aIP\u5bc4\u5b58\u5668\u7684\u504f\u79fb\u91cf\u5c31\u5f97\u5230\u4e86\u7269\u7406\u5730\u5740\u3002\u66f4\u591a\u5173\u4e8eMemory segmentation\u7684\u8bf4\u660e\u53ef\u4ee5\u53c2\u8003(wikipedia)[https://en.wikipedia.org/wiki/Memory_segmentation] \u9875\u4fdd\u62a4\u6a21\u5f0f\u9700\u8981\u7ef4\u62a4\u4e00\u5f20\u9875\u8868\uff0c\u9875\u8868\u540c\u6837\u8bb0\u5f55\u4e86\u6bcf\u4e2a\u9875\u5bf9\u5e94\u7684\u7269\u7406\u5730\u5740\uff0c\u901a\u5e38\u4e00\u4e2a\u9875\u7684\u5927\u5c0f\u662f4Kb,\u90a3\u4e48\u4e00\u4e2a32\u4f4d\u7684\u5730\u5740\u7684\u524d20\u4f4d\u662f\u9875\u8868\u7684\u7d22\u5f15\uff0c\u540e12\u4f4d\u662f\u504f\u79fb\u91cf\uff0c\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u544a\u8bc9CPU\u9875\u8868\u7684\u5730\u5740\uff0cCPU\uff08MMU\uff09\u901a\u8fc7\u865a\u62df\u5730\u5740\u7684\u524d20\u4f4d\u7d22\u5f15\u5230\u5bf9\u5e94\u7684\u9875\u8bb0\u5f55\uff0c\u627e\u5230\u5bf9\u5e94\u9875\u7684\u7269\u7406\u5730\u5740\uff0c\u518d\u52a0\u4e0a\u865a\u62df\u5730\u5740\u540e12\u4f4d\u7684\u504f\u79fb\u91cf\u5f97\u5230\u7269\u7406\u5730\u5740\u3002","title":"\u5b9e\u6a21\u5f0f\u5230\u4fdd\u62a4\u6a21\u5f0f"},{"location":"boot_loader/#bootasms","text":"\u4e0b\u9762\u770b\u4e00\u4e0b\u5177\u4f53\u7684\u4ee3\u7801\uff0cboot loader\u6709\u4e24\u4e2a\u6587\u4ef6bootasm.S\u548cbootmain.c. boot loader\u7684\u5165\u53e3\u5c31\u5728bootasm.S\u6587\u4ef6\u4e2d .code16 # Assemble for 16-bit mode .globl start start: cli # BIOS enabled interrupts; disable # Zero data segment registers DS, ES, and SS. xorw %ax,%ax # Set %ax to zero movw %ax,%ds # -> Data Segment movw %ax,%es # -> Extra Segment movw %ax,%ss # -> Stack Segment .code16 \u8fd9\u53e5\u662f\u8bc9 CPU \u6211\u4eec\u76ee\u524d\u662f\u5728 16 \u4f4d\u6a21\u5f0f\u4e0b\u6267\u884c\u4ee3\u7801\uff0c\u6b64\u65f6\u5185\u5b58\u5bfb\u5740\u80fd\u529b\u53ea\u6709 1MB\uff0c\u5e76\u4e14\u662f\u201c\u5b9e\u6a21\u5f0f\u201d\u4e0b\u3002 cli \u6307\u4ee4\u5173\u95ed\u4e86\u4e2d\u65ad\u54cd\u5e94\uff0c\u610f\u5473\u7740\u4ece\u8fd9\u4e00\u523b\u5f00\u59cb\u4f60\u7684\u8ba1\u7b97\u673a\u5c06\u4e0d\u518d\u54cd\u5e94\u4efb\u4f55\u4e2d\u65ad\u4e8b\u4ef6\uff08\u6bd4\u5982\u8fd9\u65f6\u5019\u4f60\u6572\u4e2a\u952e\u76d8\u70b9\u4e2a\u9f20\u6807\u5565\u7684\uff0cCPU \u5c31\u4e0d\u518d\u7406\u4f60\u4e86\uff09\u3002\u4e4b\u6240\u4ee5\u8981\u5173\u95ed\u4e2d\u65ad\u54cd\u5e94\u662f\u56e0\u4e3a\u8981\u4fdd\u8bc1\u5f15\u5bfc\u4ee3\u7801\u7684\u987a\u5229\u6267\u884c\uff08\u603b\u4e0d\u80fd\u6267\u884c\u5230\u4e00\u534a\u88ab CPU \u7ed9\u4e2d\u65ad\u4e86\u5427\uff0c\u90a3\u76f4\u63a5\u5c31\u6302\u4e86\uff09\u3002 \u63a5\u4e0b\u6765\u7684 4 \u884c\u4ee3\u7801\u663e\u793a\u7528\u5f02\u6216\u5c06 %ax \u5bc4\u5b58\u5668\u7684\u503c\u7f6e\u6210 0\uff0c\u7136\u540e\u5728\u7528 %ax \u5bc4\u5b58\u5668\u7684\u503c\u5c06 %ds\u3001%es\u3001%ss \u4e09\u4e2a\u5bc4\u5b58\u5668\u7684\u503c\u5168\u90e8\u7f6e 0\uff0c\u76f8\u5f53\u4e8e\u521d\u59cb\u5316\u4e86\u3002 \u6211\u4eec\u63a5\u7740\u5f80\u4e0b\u770b bootasm.S \u7684\u4ee3\u7801\u3002\u5728\u521d\u59cb\u5316\u597d\u5bc4\u5b58\u5668\u540e\uff0cbootasm.S \u63a5\u4e0b\u6765\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u6253\u5f00 A20 gate \u7a81\u7834 1MB \u5185\u5b58\u5bfb\u5740\u7684\u9650\u5236\u3002X86\u8ba1\u7b97\u673a\u8981\u7a81\u7834 1MB \u5185\u5b58\u5bfb\u5740\u7684\u9650\u5236\u5c31\u8981\u628a A20 gate \u6253\u5f00\uff0c\u63a7\u5236 A20 gate \u7684\u65b9\u6cd5\u6709 3 \u79cd\uff1a * 804x \u952e\u76d8\u63a7\u5236\u5668\u6cd5 * Fast A20 \u6cd5 * BIOS \u4e2d\u65ad\u6cd5 xv6 \u7528\u4e86\u7b2c\u4e00\u79cd 804x \u952e\u76d8\u63a7\u5236\u5668\u6cd5\uff0c\u8fd9\u4e5f\u662f\u6700\u53e4\u8001\u4e14\u6548\u7387\u6700\u6162\u7684\u4e00\u79cd\u3002\u5f53\u7136\u56e0\u4e3a\u786c\u4ef6\u7684\u4e0d\u540c\uff0c\u8fd9\u4e09\u79cd\u65b9\u6cd5\u53ef\u80fd\u4e0d\u4f1a\u88ab\u786c\u4ef6\u90fd\u652f\u6301\uff0c\u6b63\u786e\u7684\u505a\u6cd5\u5e94\u8be5\u662f\u8fd9\u4e09\u79cd\u90fd\u5c1d\u8bd5\u4e00\u4e0b\uff0c\u6bcf\u5c1d\u8bd5\u4e00\u4e2a\u5c31\u9a8c\u8bc1\u4e00\u4e0b A20 gate \u662f\u5426\u88ab\u6b63\u786e\u6253\u5f00\u4ee5\u4fdd\u8bc1\u517c\u5bb9\u5404\u79cd\u786c\u4ef6\u3002\u4f46\u662f xv6 \u4f5c\u4e3a\u4e00\u6b3e\u6559\u5b66\u7528\u7684\u64cd\u4f5c\u7cfb\u7edf\u5c31\u6ca1\u5fc5\u8981\u505a\u7684\u8fd9\u4e48\u590d\u6742\u91cc\u3002\u53ea\u7528\u4e86\u4e00\u79cd\u6700\u53e4\u8001\u7684\u65b9\u6cd5\uff08\u4fdd\u8bc1\u517c\u5bb9\u5927\u591a\u6570\u786c\u4ef6\uff09\u800c\u4e14\u6ca1\u6709\u5bf9\u6253\u5f00\u6210\u529f\u4e0e\u5426\u505a\u9a8c\u8bc1\u3002\u50cf\u8bf8\u5982 Linux \u8fd9\u6837\u7684\u64cd\u4f5c\u7cfb\u7edf\u5c31\u628a\u4e09\u79cd\u65b9\u6cd5\u7684\u5b9e\u73b0\u90fd\u505a\u597d\uff0c\u5e76\u4e14\u52a0\u4e0a\u4e86\u9a8c\u8bc1\u673a\u5236\u3002 \u6211\u4eec\u5177\u4f53\u6765\u770b xv6 \u7684\u5b9e\u73b0\u4ee3\u7801 # Physical address line A20 is tied to zero so that the first PCs # with 2 MB would run software that assumed 1 MB. Undo that. # /////////////////////////////////////////////////////////////// # \u8fd9\u91cc\u7528\u4e86\u901a\u8fc7\u952e\u76d8\u63a7\u5236\u5668\u7aef\u53e3\u7684\u65b9\u6cd5\u6253\u5f00 A20 \u5730\u5740 # \u6253\u5f00 A20 \u5730\u5740\u7ebf\u7684\u65b9\u6cd5\u6709\u4e09\u79cd\uff0c\u5177\u4f53\u53ef\u53c2\u8003\uff1a # http://kernelx.weebly.com/a20-address-line.html # # \u4e0b\u9762\u90fd\u662f\u9488\u5bf9 804x \u952e\u76d8\u63a7\u5236\u5668\u7aef\u53e3\u7684\u64cd\u4f5c\uff0c\u8fd9\u91cc\u53ea\u4ecb\u7ecd\u7528\u5230\u7684\u4e24\u4e2a\u7aef\u53e3 # 0x64 \u4ece\u8be5\u7aef\u53e3\u6267\u884c in \u8bfb\u53d6\u64cd\u4f5c\u65f6\uff0c\u8bfb\u53d6\u72b6\u6001\u5bc4\u5b58\u5668\uff0c8 \u4f4d\uff0c\u7b2c\u4e8c # \u4f4d\u6807\u8bc6\u8f93\u5165\u7f13\u51b2\u662f\u5426\u6709\u6570\u636e\u6240\u4ee5\u4e0b\u9762\u7528 0x2 \u6765 test \u8f93\u5165\u7f13\u51b2\u662f\u5426\u6709\u6570\u636e # \u5411\u8be5\u7aef\u53e3\u6267\u884c out \u5199\u64cd\u4f5c\u65f6\uff0c\u4ee3\u8868\u5411\u952e\u76d8\u63a7\u5236\u5668\u53d1\u9001\u547d\u4ee4\uff0c\u53d1\u9001 0xd1 \u4ee3 # \u8868\u8981\u5411\u952e\u76d8\u63a7\u5236\u5668\u7684 P2 \u7aef\u53e3\u5199\u5165\u6570\u636e\uff0c\u8981\u5199\u5165\u7684\u6570\u636e\u901a\u8fc7 0x60 \u7aef\u53e3\u4f20\u5165 # # P2 \u7aef\u53e3\uff0c8\u4f4d\uff0c\u7b2c\u4e8c\u4f4d\u5c31\u662f A20 \u5f00\u5173\uff0c\u6240\u4ee5\u5728 seta20.2 \u4ee3\u7801\u6bb5\u5c06 0xdf \u901a\u8fc7 # 0x60 \u7aef\u53e3\u5199\u5165\u5230 P2 \u65f6\u5c31\u4f1a\u628a A20 \u7f6e\u4f4d\uff0cA20 \u6253\u5f00\u540e\uff0c\u8fdb\u5165\u4fdd\u62a4\u6a21\u5f0f seta20.1: inb $0x64,%al # Wait for not busy testb $0x2,%al jnz seta20.1 # \u901a\u8fc7 0x64 \u72b6\u6001\u5bc4\u5b58\u5668\u7684\u7b2c\u4e8c\u4f4d\u5224\u65ad\u952e\u76d8\u7f13\u51b2\u533a\u91cc\u662f\u5426\u6709\u6570\u636e\uff0c\u5982\u679c\u8fd8\u6709\u6570\u636e\uff0c\u5219\u7b49\u5f85 movb $0xd1,%al # 0xd1 -> port 0x64 outb %al,$0x64 # 0xd1 \u4ee3\u8868\u5411 804x \u63a7\u5236\u5668\u7684 P2 \u5199\u6570\u636e seta20.2: inb $0x64,%al # Wait for not busy testb $0x2,%al jnz seta20.2 # \u540c\u4e0a\uff0c\u7ee7\u7eed\u5224\u65ad\u952e\u76d8\u7f13\u51b2\u533a\u662f\u5426\u6709\u6570\u636e\uff0c\u5982\u679c\u6709\u6570\u636e\uff0c\u5219\u7b49\u5f85 movb $0xdf,%al # 0xdf -> port 0x60 outb %al,$0x60 # \u5c06 0xdf 11011111 \u5199\u5165\u952e\u76d8\u63a7\u5236\u5668\u7684 P2 \u53e3\uff0c\u610f\u5473\u7740 A20 \u6253\u5f00\uff0c\u8fdb\u5165\u4fdd\u62a4\u6a21\u5f0f \u8fd9\u91cc bootasm.S \u7528\u4e86\u4e24\u4e2a\u65b9\u6cd5 seta20.1 \u548c seta20.2 \u6765\u5b9e\u73b0\u901a\u8fc7 804x \u952e\u76d8\u63a7\u5236\u5668\u6253\u5f00 A20 gate\u3002 \u8fd9\u4e2a\u529e\u6cd5\u786e\u5b9e\u662f\u5206\u4e24\u6b65\u6765\u641e\u7684\uff1a \u7b2c\u4e00\u6b65\u662f\u5411 804x \u952e\u76d8\u63a7\u5236\u5668\u7684 0x64 \u7aef\u53e3\u53d1\u9001\u547d\u4ee4\u3002\u8fd9\u91cc\u4f20\u9001\u7684\u547d\u4ee4\u662f 0xd1\uff0c\u8fd9\u4e2a\u547d\u4ee4\u7684\u610f\u601d\u662f\u8981\u5411\u952e\u76d8\u63a7\u5236\u5668\u7684 P2 \u5199\u5165\u6570\u636e\u3002\u8fd9\u5c31\u662f seta20.1 \u4ee3\u7801\u6bb5\u6240\u505a\u7684\u5de5\u4f5c\u3002 \u7b2c\u4e8c\u6b65\u5c31\u662f\u5411\u952e\u76d8\u63a7\u5236\u5668\u7684 P2 \u7aef\u53e3\u5199\u6570\u636e\u4e86\u3002\u5199\u6570\u636e\u7684\u65b9\u6cd5\u662f\u628a\u6570\u636e\u901a\u8fc7\u952e\u76d8\u63a7\u5236\u5668\u7684 0x60 \u7aef\u53e3\u5199\u8fdb\u53bb\u3002\u5199\u5165\u7684\u6570\u636e\u662f 0xdf\uff0c\u56e0\u4e3a A20 gate \u5c31\u5305\u542b\u5728\u952e\u76d8\u63a7\u5236\u5668\u7684 P2 \u7aef\u53e3\u4e2d\uff0c\u968f\u7740 0xdf \u7684\u5199\u5165\uff0cA20 gate \u5c31\u88ab\u6253\u5f00\u4e86\u3002 \u63a5\u4e0b\u6765\u8981\u505a\u7684\u5c31\u662f\u8fdb\u5165\u201c\u4fdd\u62a4\u6a21\u5f0f\u201d\u4e86\u3002\u5728\u8fdb\u5165\u4fdd\u62a4\u6a21\u5f0f\u524d\u9700\u8981\u5c06 GDT \u51c6\u5907\u597d\u3002\u4ec0\u4e48\u662f GDT \uff1f\u5b83\u7684\u4e2d\u6587\u540d\u79f0\u53eb\u201c\u5168\u5c40\u63cf\u8ff0\u7b26\u8868\u201d\uff0c\u60f3\u8981\u5728\u201c\u4fdd\u62a4\u6a21\u5f0f\u201d\u4e0b\u5bf9\u5185\u5b58\u8fdb\u884c\u5bfb\u5740\u5c31\u5148\u8981\u6709 GDT\uff0cGDT \u8868\u91cc\u7684\u6bcf\u4e00\u9879\u53eb\u505a\u201c\u6bb5\u63cf\u8ff0\u7b26\u201d\uff0c\u7528\u6765\u8bb0\u5f55\u6bcf\u4e2a\u5185\u5b58\u5206\u6bb5\u7684\u4e00\u4e9b\u5c5e\u6027\u4fe1\u606f\uff0c\u6bcf\u4e2a\u201c\u6bb5\u63cf\u8ff0\u7b26\u201d\u5360 8 \u5b57\u8282\uff0c\u6211\u4eec\u5148\u6765\u770b\u4e00\u773c\u8fd9\u4e2a\u6bb5\u63cf\u8ff0\u7b26\u7684\u5177\u4f53\u7ed3\u6784\uff1a \u4e09\u5757\u201c\u57fa\u5730\u5740\u201d\u7ec4\u88c5\u8d77\u6765\u6b63\u597d\u5c31\u662f 32 \u4f4d\u7684\u6bb5\u8d77\u59cb\u5185\u5b58\u5730\u5740\uff0c\u4e24\u5757 Limit \u7ec4\u6210\u8be5\u5185\u5b58\u5206\u6bb5\u7684\u957f\u5ea6\uff0c\u63a5\u4e0b\u6765\u4f9d\u6b21\u89e3\u91ca\u4e00\u4e0b\u5176\u4ed6\u4f4d\u6240\u4ee3\u8868\u7684\u610f\u4e49: P: 0 \u672c\u6bb5\u4e0d\u5728\u5185\u5b58\u4e2d DPL: \u8bbf\u95ee\u8be5\u6bb5\u5185\u5b58\u6240\u9700\u6743\u9650\u7b49\u7ea7 00 \u2014 11\uff0c0\u4e3a\u6700\u5927\u6743\u9650\u7ea7\u522b S: 1 \u4ee3\u8868\u6570\u636e\u6bb5\u3001\u4ee3\u7801\u6bb5\u6216\u5806\u6808\u6bb5\uff0c0 \u4ee3\u8868\u7cfb\u7edf\u6bb5\u5982\u4e2d\u65ad\u95e8\u6216\u8c03\u7528\u95e8 E: 1 \u4ee3\u8868\u4ee3\u7801\u6bb5\uff0c\u53ef\u6267\u884c\u6807\u8bb0\uff0c0 \u4ee3\u8868\u6570\u636e\u6bb5 ED: 0 \u4ee3\u8868\u5ffd\u7565\u7279\u6743\u7ea7\uff0c1 \u4ee3\u8868\u9075\u5b88\u7279\u6743\u7ea7 RW: \u5982\u679c\u662f\u6570\u636e\u6bb5\uff08E=0\uff09\u52191 \u4ee3\u8868\u53ef\u5199\u5165\uff0c0 \u4ee3\u8868\u53ea\u8bfb\uff1b\u5982\u679c\u662f\u4ee3\u7801\u6bb5\uff08E=1\uff09\u52191 \u4ee3\u8868\u53ef\u8bfb\u53d6\uff0c0 \u4ee3\u8868\u4e0d\u53ef\u8bfb\u53d6 A: 1 \u8868\u793a\u8be5\u6bb5\u5185\u5b58\u8bbf\u95ee\u8fc7\uff0c0 \u8868\u793a\u6ca1\u6709\u88ab\u8bbf\u95ee\u8fc7 G: 1 \u8868\u793a 20 \u4f4d\u6bb5\u754c\u9650\u5355\u4f4d\u662f 4KB\uff0c\u6700\u5927\u957f\u5ea6 4GB\uff1b0 \u8868\u793a 20 \u4f4d\u6bb5\u754c\u9650\u5355\u4f4d\u662f 1 \u5b57\u8282\uff0c\u6700\u5927\u957f\u5ea6 1MB DB:1 \u8868\u793a\u5730\u5740\u548c\u64cd\u4f5c\u6570\u662f 32 \u4f4d\uff0c0 \u8868\u793a\u5730\u5740\u548c\u64cd\u4f5c\u6570\u662f 16 \u4f4d XX: \u4fdd\u7559\u4f4d\u6c38\u8fdc\u662f 0 AA: \u7ed9\u7cfb\u7edf\u63d0\u4f9b\u7684\u4fdd\u7559\u4f4d \u6709\u4e86\u4e0a\u8ff0\u7684\u89e3\u91ca\uff0c\u6211\u4eec\u518d\u6765\u770b\u770b xv6 \u662f\u600e\u6837\u51c6\u5907\u81ea\u5df1\u7684 GDT \u7684\uff0c\u4ee3\u7801\u5728 bootasm.S \u6587\u4ef6\u6700\u5e95\u90e8\uff1a gdt: SEG_NULLASM # \u7a7a SEG_ASM(STA_X|STA_R, 0x0, 0xffffffff) # \u4ee3\u7801\u6bb5 SEG_ASM(STA_W, 0x0, 0xffffffff) # \u6570\u636e\uff08\u5806\u6808\uff09\u6bb5 \u8fd9\u91cc\u7528\u5230\u4e86\u51e0\u4e2a\u5b8f\uff0c\u5177\u4f53\u7684\u5b8f\u5b9a\u4e49\u5728 asm.h \u6587\u4ef6\u4e2d\uff0c\u4e3a\u4e86\u65b9\u4fbf\u5927\u5bb6\u76f4\u89c2\u7684\u611f\u53d7\u4e00\u4e0b xv6 \u7684 GDT \u6211\u628a\u5b8f\u8ba1\u7b97\u51fa\u6765\u7684\u503c\u76f4\u63a5\u7ffb\u8bd1\u8fc7\u6765\uff0c\u4ee3\u7801\u5e94\u8be5\u662f\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\uff1a gdt: .word 0, 0; .byte 0, 0, 0, 0 # \u7a7a .word 0xffff, 0x0000; .byte 0x00, 0x9a, 0xcf, 0x00 # \u4ee3\u7801\u6bb5 .word 0xffff, 0x0000; .byte 0x00, 0x92, 0xcf, 0x00 # \u6570\u636e\u6bb5 \u7136\u540e\u6211\u4eec\u518d\u628a\u4ee3\u7801\u6bb5\u548c\u6570\u636e\u6bb5\u7684\u6bb5\u63cf\u8ff0\u7b26\u5177\u4f53\u6bcf\u4e00\u4f4d\u7684\u5bf9\u5e94\u503c\u8868\u5c55\u793a\u51fa\u6765\uff0c\u9996\u5148\u662f\u4ee3\u7801\u6bb5\uff1a \u7136\u540e\u662f\u6570\u636e\u6bb5\uff1a \u6211\u4eec\u6765\u4e00\u6b65\u6b65\u89e3\u91ca\u4e00\u4e0b\u3002\u9996\u5148\u8bf4\u8bf4\u8fd9\u4e24\u4e2a\u5185\u5b58\u6bb5\u7684\u5171\u540c\u70b9\uff0cDB = 1\uff0cG = 1\uff0c\u57fa\u5730\u5740\u90fd\u662f 0x00000000\uff0c\u5185\u5b58\u5206\u6bb5\u957f\u5ea6\u90fd\u662f 0xfffff\uff0c\u8fd9\u8bf4\u660e\u4ed6\u4eec\u90fd\u662f\u7528\u4e8e 32 \u4f4d\u5bfb\u5740\uff0c\u6240\u4f7f\u7528\u7684\u5185\u5b58\u662f\u4ece 0 \u5f00\u59cb\u5230 4GB \u7ed3\u675f\uff08\u5168\u90e8\u5185\u5b58\uff09\u3002\u8fd9\u91cc\u662f\u8fd9\u4e48\u7b97\u51fa\u6765\u7684\uff0c\u6bb5\u957f\u5ea6\u662f 0xfffff = 2^20\uff0cG = 1 \u8868\u793a\u6bb5\u754c\u9650\u5355\u4f4d\u662f 4k\uff0c\u6240\u4ee5 4k * 2^20 = 4GB\u3002 \u518d\u8bf4\u8bf4\u4ed6\u4eec\u7684\u4e0d\u540c\u70b9\uff0c\u4ee3\u7801\u6bb5\u7684 E = 1 \u800c\u6570\u636e\u6bb5\u7684 E = 0 \u8fd9\u8868\u540d\u4e86\u4ed6\u4eec\u7684\u8eab\u4efd\uff0c\u8eab\u4efd\u4e0d\u540c RW \u7684\u503c\u867d\u7136\u76f8\u540c\uff0c\u4f46\u4ee3\u8868\u7684\u610f\u4e49\u4e5f\u5c31\u4e0d\u76f8\u540c\u4e86\uff0c\u4ee3\u7801\u6bb5\u7684 RW = 1 \u4ee3\u8868\u53ef\u8bfb\u53d6\uff0c\u6570\u636e\u6bb5\u7684 RW = 1 \u8868\u793a\u53ef\u8bfb\u53ef\u5199\u3002\u8fd9\u4e5f\u548c\u6211\u4eec\u4e0a\u9762\u89e3\u91ca\u7684\u4fdd\u62a4\u6a21\u5f0f\u6240\u80fd\u591f\u8fbe\u5230\u7684\u76ee\u7684\u76f8\u543b\u5408\u3002 \u5f53\u7136\u4f5c\u4e3a\u4e00\u6b3e\u6559\u5b66\u4e3a\u76ee\u7684\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0cxv6 \u8fd9\u91cc\u7684 GDT \u8bbe\u7f6e\u8fd8\u662f\u4ee5\u7b80\u5355\u5bb9\u6613\u7406\u89e3\u4e3a\u76ee\u7684\u3002\u8bf8\u5982\u201c\u6743\u9650\u4f4d\u201d\u8fd9\u6837\u7684\u5b89\u5168\u673a\u5236\u5c31\u76f4\u63a5\u88ab\u5ffd\u7565\u4e86\uff0c\u800c\u5bf9\u5185\u5b58\u7684\u89c4\u5212\u4e5f\u6ca1\u6709\u505a\u5230\u771f\u6b63\u7684\u201c\u5206\u6bb5\u201d\uff0c\u800c\u662f\u4ee3\u7801\u6bb5\u548c\u6570\u636e\u6bb5\u90fd\u542f\u7528\u4e86\u4ece 0 \u5230 4GB \u7684\u5168\u90e8\u5185\u5b58\u5bfb\u5740\u3002\u5176\u5b9e\u8fd9\u79cd\u5185\u5b58\u89c4\u5212\u65b9\u6cd5\u53eb\u505a\u201c\u5e73\u5766\u5185\u5b58\u6a21\u578b\u201d\uff0c\u5373\u4fbf\u662f Linux \u4e5f\u662f\u7528\u7684\u8fd9\u6837\u7684\u65b9\u5f0f\u89c4\u5212\u5185\u5b58\u7684\uff0c\u5e76\u6ca1\u6709\u505a\u5230\u771f\u6b63\u7684\u201c\u5206\u6bb5\u201d\u3002\u8fd9\u662f\u56e0\u4e3a x86 \u7684\u5206\u9875\u673a\u5236\u662f\u57fa\u4e8e\u5206\u6bb5\u7684\uff0cLinux \u9009\u7528\u4e86\u66f4\u5148\u8fdb\u7684\u5206\u9875\u673a\u5236\u6765\u7ba1\u7406\u5185\u5b58\uff0c\u6240\u4ee5\u5728\u5206\u6bb5\u8fd9\u91cc\u53ea\u662f\u8d70\u4e00\u4e2a\u5fc5\u8981\u7684\u5f62\u5f0f\u7f62\u4e86\u3002\u800c xv6 \u540e\u9762\u5230\u5e95\u662f\u5426\u4e5f\u542f\u7528\u4e86\u5206\u9875\u673a\u5236\uff0c\u6211\u4eec\u76ee\u524d\u8fd8\u4e0d\u5f97\u800c\u77e5\u3002 GDT \u4e5f\u641e\u5b9a\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u8981\u628a\u6211\u4eec\u521a\u521a\u5728\u5185\u5b58\u4e2d\u8bbe\u5b9a\u597d\u7684 GDT \u7684\u4f4d\u7f6e\u544a\u8bc9 CPU\uff0c\u7136\u540e\u5c31\u201c\u4e07\u4e8b\u4ff1\u5907\uff0c\u53ea\u6b20\u4e1c\u98ce\u201d\u4e86\u3002CPU \u5355\u72ec\u4e3a\u6211\u4eec\u51c6\u5907\u4e86\u4e00\u4e2a\u5bc4\u5b58\u5668\u53eb\u505a GDTR \u7528\u6765\u4fdd\u5b58\u6211\u4eec GDT \u5728\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e\u548c\u6211\u4eec GDT \u7684\u957f\u5ea6\u3002GDTR \u5bc4\u5b58\u5668\u4e00\u5171 48 \u4f4d\uff0c\u5176\u4e2d\u9ad8 32 \u4f4d\u7528\u6765\u5b58\u50a8\u6211\u4eec\u7684 GDT \u5728\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5176\u4f59\u7684\u4f4e 16 \u4f4d\u7528\u6765\u5b58\u6211\u4eec\u7684 GDT \u7684\u5360\u7528\u7a7a\u95f4\u7684\u5927\u5c0f\uff08\u6240\u5360\u5b57\u8282\u6570\uff09\u3002 16 \u4f4d\u53ef\u4ee5\u8868\u793a\u7684\u6700\u5927\u503c\u4e3a 65536 \uff0c\u800c\u4e00\u4e2a\u6bb5\u63cf\u8ff0\u7b26\u662f 8 \u5b57\u8282\uff0c\u6240\u4ee5 GDT \u6700\u591a\u53ef\u4ee5\u6709 8192 \u4e2a\u6bb5\u63cf\u8ff0\u7b26\u3002\u4e0d\u4ec5 CPU \u7528\u4e86\u4e00\u4e2a\u5355\u72ec\u7684\u5bc4\u5b58\u5668 GDTR \u6765\u5b58\u50a8\u6211\u4eec\u7684 GDT\uff0c\u800c\u4e14\u8fd8\u4e13\u95e8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6307\u4ee4\u7528\u6765\u8ba9\u6211\u4eec\u628a GDT \u7684\u5730\u5740\u548c\u957f\u5ea6\u4f20\u7ed9 GDTR \u5bc4\u5b58\u5668\uff0c\u6765\u770b xv6 \u7684\u4ee3\u7801\uff1a lgdt gdtdesc \u800c\u8fd9\u4e2a gdtdesc \u548c gdt \u4e00\u8d77\u653e\u5728\u4e86 bootasm.S \u6587\u4ef6\u7684\u6700\u5e95\u90e8\uff0c\u6211\u4eec\u770b\u4e00\u773c\uff1a gdtdesc: .word (gdtdesc - gdt - 1) # 16 \u4f4d\u7684 gdt \u5927\u5c0fsizeof(gdt) - 1 .long gdt # 32 \u4f4d\u7684 gdt \u6240\u5728\u7269\u7406\u5730\u5740 \u4e0d\u591a\u4e0d\u5c11\uff0c\u6b63\u597d 48 \u4f4d\u4f20\u7ed9\u4e86 GDTR \u5bc4\u5b58\u5668\uff0c\u5230\u6b64 GDT \u5c31\u51c6\u5907\u597d\u4e86\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u8fdb\u5165\u4fdd\u62a4\u6a21\u5f0f\uff01 \u524d\u9762\u8bb2\u5230\uff0c\u5c31\u5982\u540c A20 gate \u8fd9\u4e2a\u5f00\u5173\u8d1f\u8d23\u6253\u5f00 1MB \u4ee5\u4e0a\u5185\u5b58\u5bfb\u5740\u4e00\u6837\uff0c\u60f3\u8981\u8fdb\u5165\u201c\u4fdd\u62a4\u6a21\u5f0f\u201d\u6211\u4eec\u4e5f\u9700\u8981\u6253\u5f00\u4e00\u4e2a\u5f00\u5173\uff0c\u8fd9\u4e2a\u5f00\u5173\u53eb\u201c\u63a7\u5236\u5bc4\u5b58\u5668\u201d\uff0cx86 \u7684\u63a7\u5236\u5bc4\u5b58\u5668\u4e00\u5171\u6709 4 \u4e2a\u5206\u522b\u662f CR0\u3001CR1\u3001CR2\u3001CR3\uff0c\u800c\u63a7\u5236\u8fdb\u5165\u201c\u4fdd\u62a4\u6a21\u5f0f\u201d\u7684\u5f00\u5173\u5728 CR0 \u4e0a\uff0c\u8fd9\u56db\u4e2a\u5bc4\u5b58\u5668\u90fd\u662f 32 \u4f4d\u7684\uff0c\u6211\u4eec\u770b\u4e00\u4e0b CR0 \u4e0a\u548c\u4fdd\u62a4\u6a21\u5f0f\u6709\u5173\u7684\u4f4d PG \u4e3a 0 \u65f6\u4ee3\u8868\u53ea\u4f7f\u7528\u5206\u6bb5\u5f0f\uff0c\u4e0d\u4f7f\u7528\u5206\u9875\u5f0f, \u4e3a 1 \u662f\u542f\u7528\u5206\u9875\u5f0f PE\u4e3a 0 \u65f6\u4ee3\u8868\u5173\u95ed\u4fdd\u62a4\u6a21\u5f0f\uff0c\u8fd0\u884c\u5728\u5b9e\u6a21\u5f0f\u4e0b, \u4e3a 1 \u5219\u5f00\u542f\u4fdd\u62a4\u6a21\u5f0f \u7136\u540e\u6211\u4eec\u7ee7\u7eed\u770b xv6 \u6253\u5f00\u4fdd\u62a4\u6a21\u5f0f\u7684\u4ee3\u7801\uff1a movl %cr0, %eax orl $CR0_PE, %eax movl %eax, %cr0 \u56e0\u4e3a\u6211\u4eec\u65e0\u6cd5\u76f4\u63a5\u64cd\u4f5c CR0\uff0c\u6240\u4ee5\u6211\u4eec\u9996\u5148\u8981\u7528\u4e00\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\u6765\u4fdd\u5b58\u5f53\u524d CR0 \u5bc4\u5b58\u5668\u7684\u503c\uff0c\u8fd9\u91cc\u7b2c\u4e00\u884c\u5c31\u662f\u7528\u901a\u7528\u5bc4\u5b58\u5668 eax \u6765\u4fdd\u5b58 cr0 \u5bc4\u5b58\u5668\u7684\u503c\uff1b\u7136\u540e CR0_PE \u8fd9\u4e2a\u5b8f\u7684\u5b9a\u4e49\u5728 mmu.h \u6587\u4ef6\u4e2d\uff0c\u662f\u4e2a\u6570\u503c 0x00000001\uff0c\u5c06\u8fd9\u4e2a\u6570\u503c\u4e0e eax \u4e2d\u7684 cr0 \u5bc4\u5b58\u5668\u7684\u503c\u505a\u201c\u6216\u201d\u8fd0\u7b97\u540e\uff0c\u5c31\u4fdd\u8bc1\u5c06 cr0 \u7684\u7b2c 0 \u4f4d\u8bbe\u7f6e\u6210\u4e86 1 \u5373 PE = 1 \u4fdd\u8bc1\u6253\u5f00\u4e86\u4fdd\u62a4\u6a21\u5f0f\u7684\u5f00\u5173\u3002\u800c cr0 \u7684\u7b2c 31 \u4f4d PG = 0 \u8868\u793a\u6211\u4eec\u53ea\u4f7f\u7528\u5206\u6bb5\u5f0f\uff0c\u4e0d\u4f7f\u7528\u5206\u9875\uff0c\u8fd9\u65f6\u518d\u5c06\u65b0\u7684\u8ba1\u7b97\u540e\u7684 eax \u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u5199\u56de\u5230 cr0 \u5bc4\u5b58\u5668\u4e2d\u5c31\u5b8c\u6210\u4e86\u5230\u4fdd\u62a4\u6a21\u5f0f\u7684\u5207\u6362\u3002 \u5230\u8fd9\u91cc\u6211\u4eec\u5173\u4e8e xv6 \u4ece\u5b9e\u6a21\u5f0f\u5230\u4fdd\u62a4\u6a21\u5f0f\u7684\u8bb2\u89e3\u5c31\u63a5\u8fd1\u5c3e\u58f0\u4e86\u3002\u6211\u4eec\u5df2\u7ecf\u8fdb\u5165\u5230\u4fdd\u62a4\u6a21\u5f0f\u4e86\uff0c\u63a5\u4e0b\u6765\u53ef\u4ee5\u5c06\u4ee3\u7801\u5f7b\u5e95\u4ee5 32 \u4f4d\u7684\u4fdd\u62a4\u6a21\u5f0f\u6765\u8fd0\u884c\u4e86\u3002\u6240\u4ee5\u8fd9\u65f6\u6211\u4eec\u7684 xv6 \u4e5f\u8981\u51c6\u5907\u8df3\u8f6c\u4e86\uff0c\u518d\u6765\u770b\u4e00\u884c\u4ee3\u7801\uff1a ljmp $(SEG_KCODE<<3) $start32 \u8fd9\u662f\u4e00\u4e2a\u8df3\u8f6c\u8bed\u53e5\uff0c\u901a\u77e5 CPU \u8df3\u8f6c\u5230\u6307\u5b9a\u4f4d\u7f6e\u7ee7\u7eed\u6267\u884c\u6307\u4ee4\u3002 xv6 \u5728\u8fd9\u65f6\u5c31\u51c6\u5907\u8df3\u8f6c\u5230\u7528 C \u5199\u6210\u7684\u4ee3\u7801\u5904\u53bb\u7ee7\u7eed\u8fd0\u884c\u4e86\u3002\u8fd9\u4e2a\u8df3\u8f6c\u8bed\u53e5\u7684\u4e24\u4e2a\u53c2\u6570\u5c31\u662f\u6211\u4eec\u4e4b\u524d\u4e00\u76f4\u518d\u8bb2\u7684\u5178\u578b\u7684\u201c\u57fa\u5730\u5740\u201d + \u201c\u504f\u79fb\u91cf\u201d\u7684\u65b9\u5f0f\u544a\u8bc9 CPU \u8981\u8df3\u8f6c\u5230\u5185\u5b58\u7684\u4ec0\u4e48\u4f4d\u7f6e\u53bb\u7ee7\u7eed\u6267\u884c\u6307\u4ee4\u3002 \u800c\u8fd9\u65f6\u6211\u4eec\u5df2\u7ecf\u5728\u5206\u6bb5\u5f0f\u7684\u4fdd\u62a4\u6a21\u5f0f\u4e0b\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u901a\u8fc7\u8fd9\u53e5\u8df3\u8f6c\u8bed\u53e5\u6765\u76f4\u89c2\u7684\u611f\u53d7\u4e00\u4e0b\u5206\u6bb5\u5f0f\u4fdd\u62a4\u6a21\u5f0f\u4e0b\u7684\u5185\u5b58\u5bfb\u5740\u3002 \u524d\u9762\u9884\u5907\u77e5\u8bc6\u91cc\u8bf4\u9053\u5728\u5206\u6bb5\u5f0f\u4fdd\u62a4\u6a21\u5f0f\u4e0b\u201c\u6bb5\u57fa\u5740\u201d\uff08\u57fa\u5730\u5740\uff09\u4e0d\u518d\u662f\u5185\u5b58\u5730\u5740\uff0c\u800c\u662f GDT \u8868\u7684\u4e0b\u6807\u3002\u4e0a\u9762\u6211\u4eec\u4e5f\u8bf4\u8fc7 GDT \u8868\u6700\u5927\u53ef\u4ee5\u6709 8192 \u4e2a\u8868\u9879\uff08\u6bb5\u63cf\u8ff0\u7b26\uff09\uff0c213 = 8192\uff0c\u6240\u4ee5\u4fdd\u5b58\u7740\u201c\u6bb5\u57fa\u5740\u201d\u7684 16 \u4f4d\u6bb5\u5bc4\u5b58\u5668\u53ea\u9700\u8981\u5176\u4e2d\u7684 13 \u4f4d\u5c31\u53ef\u4ee5\u8868\u793a\u4e00\u4e2a GDT \u8868\u7684\u4e0b\u6807\uff0c\u5176\u4f59\u7684 3 \u4f4d\u53ef\u7528\u4f5c\u4ed6\u7528\u3002 \u6309\u7167\u8fd9\u4e2a\u601d\u8def\u6211\u4eec\u770b\u770b\u8fd9\u4e2a $(SEG_KCODE<<3) \u751f\u6210\u7684\u201c\u6bb5\u57fa\u5740\u201d\u662f\u4ec0\u4e48\uff1fSEG_KCODE \u662f\u4e2a\u5b8f\u5b9a\u4e49\uff0c\u5177\u4f53\u7684\u5b9a\u4e49\u5728 mmu.h \u6587\u4ef6\u4e2d\uff0c\u6211\u4eec\u7ffb\u8bd1\u8fc7\u6765\u5c31\u662f $(1<<3)\uff0c\u518d\u5c06\u5b83\u8fd0\u7b97\u51fa\u6765\u5f97\u5230 \u8fd9\u91cc\u8fd9\u4e2a 16 \u4f4d\u7684\u201c\u6bb5\u57fa\u5740\u201d\u7684\u9ad8 13 \u4f4d\u4ee3\u8868 GDT \u8868\u7684\u4e0b\u6807\uff08\u5b66\u540d\u5e94\u8be5\u53eb\u201c\u6bb5\u9009\u62e9\u5b50\u201d\uff09\uff0c\u8fd9\u91cc\u9ad8 13 \u4f4d\u521a\u597d\u662f 1\uff0c\u800c\u6211\u4eec\u7684 GDT \u91cc\u4e0b\u6807\u4f4d 1 \u7684\u5185\u5b58\u6bb5\u6b63\u597d\u662f\u6211\u4eec\u7684\u201c\u4ee3\u7801\u6bb5\u201d\uff0c\u800c\u201c\u4ee3\u7801\u6bb5\u201d\u6211\u4eec\u5728 GDT \u7684\u201c\u6bb5\u63cf\u8ff0\u7b26\u201d\u4e2d\u8bbe\u7f6e\u4e86\u5b83\u7684\u5176\u5b9e\u5185\u5b58\u5730\u5740\u662f 0x00000000 \uff0c\u5185\u5b58\u6bb5\u957f\u5ea6\u662f 1M*4K \uff0c\u8fd9\u662f\u5b8c\u6574\u7684 4GB \u5185\u5b58\u3002 \u6240\u4ee5\u8fd9\u91cc\u7684\u8df3\u8f6c\u8bed\u53e5\u9009\u62e9\u4e86\u201c\u4ee3\u7801\u6bb5\u201d\uff0c\u7531\u4e8e\u201c\u4ee3\u7801\u6bb5\u201d\u7684\u8d77\u59cb\u5185\u5b58\u5730\u5740\u662f 0x00000000 \uff0c\u957f\u5ea6\u662f\u5b8c\u6574\u7684 4GB\uff0c\u6240\u4ee5\u540e\u9762\u7684\u201c\u504f\u79fb\u91cf\u201d\u4ecd\u7136\u76f8\u5f53\u4e8e\u662f\u5b9e\u9645\u7684\u5185\u5b58\u5730\u5740\uff0c\u6240\u4ee5\u8fd9\u91cc\u201c\u504f\u79fb\u91cf\u201d\u76f4\u63a5\u7528\u4e86 $start32\uff0c\u4e5f\u5c31\u662f start32 \u76f4\u63a5\u5bf9\u5e94\u7684\u4ee3\u7801\u4f4d\u7f6e\u3002\u901a\u8fc7\u8fd9\u4e2a\u8df3\u8f6c\u5b9e\u9645\u4e0a CPU \u5c31\u4f1a\u8df3\u8f6c\u5230 bootasm.S \u6587\u4ef6\u7684 start32 \u6807\u8bc6\u7b26\u5904\u7ee7\u7eed\u6267\u884c\u4e86\u3002","title":"bootasm.S"},{"location":"boot_loader/#_2","text":"boot loader \u5b9e\u73b0\u7684\u7b2c\u4e8c\u4e2a\u529f\u80fd\u5c31\u662f\u52a0\u8f7d\u5185\u6838\u3002\u4e5f\u5c31\u662f\u6839\u636eELF\u5185\u6838\u6587\u4ef6\u6240\u6307\u5b9a\u7684load address\uff0c\u4ece\u786c\u76d8\u4e2d\u628a\u5185\u6838\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u5bf9\u5e94\u7684load address\u4e0a\uff0c\u7136\u540e\u8df3\u8f6c\u5230\u5185\u6838ELF\u6587\u4ef6\u6240\u6307\u5b9a\u7684\u5165\u53e3\u70b9\u3002","title":"\u52a0\u8f7d\u5185\u6838"},{"location":"boot_loader/#elf","text":"\u5728 Wiki \u767e\u79d1\u4e0a\u6709 ELF \u6587\u4ef6\u683c\u5f0f\u7684\u8be6\u7ec6\u89e3\u91ca \uff0c\u7b80\u5355\u7684\u8bf4 ELF \u6587\u4ef6\u683c\u5f0f\u662f Linux \u4e0b\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6807\u51c6\u683c\u5f0f\u3002\u5c31\u597d\u50cf Windows \u64cd\u4f5c\u7cfb\u7edf\u91cc\u7684\u53ef\u6267\u884c\u6587\u4ef6 .exe \u4e00\u6837\uff08\u5f53\u7136\uff0cWindows \u91cc\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u6807\u51c6\u683c\u5f0f\u53eb PE \u6587\u4ef6\u683c\u5f0f\uff09\uff0cLinux \u64cd\u4f5c\u7cfb\u7edf\u91cc\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e5f\u6709\u5b83\u81ea\u5df1\u7684\u683c\u5f0f\u3002\u53ea\u6709\u6309\u7167\u6587\u4ef6\u6807\u51c6\u683c\u5f0f\u7ec4\u7ec7\u597d\u7684\u53ef\u6267\u884c\u6587\u4ef6\u64cd\u4f5c\u7cfb\u7edf\u624d\u77e5\u9053\u5982\u4f55\u52a0\u8f7d\u8fd0\u884c\u5b83\u3002\u6211\u4eec\u5e76\u4f7f\u4f7f\u7528 C \u8bed\u8a00\u6309\u7167\u6559\u79d1\u4e66\u5199\u51fa\u7684 HelloWorld \u4ee3\u7801\u5728 Linux \u73af\u5883\u4e0b\u6700\u7ec8\u901a\u8fc7\u7f16\u8bd1\u5668\uff08gcc\u7b49\uff09\u7f16\u8bd1\u51fa\u7684\u53ef\u4ee5\u8fd0\u884c\u7684\u7a0b\u5e8f\u5c31\u662f ELF \u6587\u4ef6\u683c\u5f0f\u7684\u3002 \u90a3\u4e48 ELF \u6587\u4ef6\u683c\u5f0f\u5177\u4f53\u7684\u7ed3\u6784\u662f\u600e\u6837\u7684\u5462\uff1f \u5927\u6982\u662f\u4e0b\u9762\u8fd9\u4e2a\u6837\u5b50\u7684\u3002 ELF \u5934\u90e8 ( ELF Header ) \u7a0b\u5e8f\u5934\u8868 (Program Header Table) .text .rodata \u2026\u2026 \u8282\u5934\u8868 (Section Header Table) \u6211\u4eec\u53ef\u4ee5\u7528 readelf -h kernel \u547d\u4ee4\u6765\u68c0\u67e5 ELF header \u4fe1\u606f\u3002 $ readelf -h kernel ELF Header: Magic: 7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 Class: ELF32 Data: 2's complement, little endian Version: 1 (current) OS/ABI: UNIX - System V ABI Version: 0 Type: EXEC (Executable file) Machine: Intel 80386 Version: 0x1 Entry point address: 0x10000c Start of program headers: 52 (bytes into file) Start of section headers: 212404 (bytes into file) Flags: 0x0 Size of this header: 52 (bytes) Size of program headers: 32 (bytes) Number of program headers: 3 Size of section headers: 40 (bytes) Number of section headers: 16 Section header string table index: 15 \u8fd9\u91cc\u7684 \u2018Start of program headers\u2019 \u8bb0\u5f55\u7684\u662fprogram headers table\u5728\u8fd9\u4e2aELF\u6587\u4ef6\u4e2d\u7684\u4f4d\u7f6e\uff0c\u2018Size of program headers\u2019\u662fprogram headers table\u4e2d\u4e00\u6761\u8bb0\u5f55\u7684\u5927\u5c0f\uff0c\u2018Number of program headers\u2019 \u662fprogram headers table\u7684\u8bb0\u5f55\u7684\u6761\u6570\u3002\u2018Entry point address\u2019\u662f\u7a0b\u5e8f\u7684\u5165\u53e3\uff0c\u7a0b\u5e8f\u88ab\u52a0\u8f7d\u5b8c\u6210\u540e\u4f1a\u8df3\u8f6c\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u6267\u884c\u3002 \u540c\u6837\u6211\u4eec\u518d\u901a\u8fc7 readelf -l kernel \u547d\u4ee4\u6765\u68c0\u67e5program headers \u4fe1\u606f\u3002 $ readelf -l kernel Elf file type is EXEC (Executable file) Entry point 0x10000c There are 3 program headers, starting at offset 52 Program Headers: Type Offset VirtAddr PhysAddr FileSiz MemSiz Flg Align LOAD 0x001000 0x80100000 0x00100000 0x07aab 0x07aab R E 0x1000 LOAD 0x009000 0x80108000 0x00108000 0x02516 0x0d4a8 RW 0x1000 GNU_STACK 0x000000 0x00000000 0x00000000 0x00000 0x00000 RWE 0x10 Section to Segment mapping: Segment Sections... 00 .text .rodata 01 .data .bss 02 ELF program headers \u8bb0\u5f55\u4e86\u9700\u8981\u88ab\u52a0\u8f7d\u7684\u90e8\u5206\u5728\u6587\u4ef6\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\uff08Offset\uff09\u548c\u5927\u5c0f\uff08FileSiz\uff09\uff0c\u8fd9\u4e9b\u8981\u88ab\u52a0\u8f7d\u7684segment\u901a\u5e38\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2asection, \u8fd9\u4e9bsection \u5728Section to Segment mapping\u90a3\u91cc\u53ef\u4ee5\u770b\u5230\u3002boot loader \u5c31\u662f\u6839\u636eELF program headers\u51b3\u5b9a\u5982\u4f55\u52a0\u8f7d\u5404\u4e2a\u6bb5\uff0cprogram headers\u660e\u786e\u8bf4\u660e\u4e86\u54ea\u4e00\u90e8\u5206\u9700\u8981\u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u7684\u54ea\u4e2a\u4f4d\u7f6e\u3002 \u8fd9\u91cc\u7684LOAD\u662f\u9700\u8981\u88ab\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u7684\u6bb5\u7684\u6807\u8bb0\u3002VirtAddr\uff08link address\uff09\u662f\u7f16\u8bd1\u5668\u5728link\u7684\u65f6\u5019\u6240\u751f\u6210\u7684\u5730\u5740\uff0c\u662f\u7a0b\u5e8f\u4ee3\u7801\u6267\u884c\u7684\u65f6\u5019\u6240\u671f\u671b\u7684\u5730\u5740\uff0c\u8fd9\u4e2a\u5730\u5740\u901a\u5e38\u662f\u865a\u62df\u5730\u5740\uff08virtual address\uff09\uff0c\u7a0b\u5e8f\u4ee3\u7801\u91cc\u9762\u51fd\u6570\u548c\u53d8\u91cf\u6240\u5728\u7684\u5730\u5740\u5c31\u662flink addrees\u3002PhysAddr\uff08load address \uff09\u662f\u8868\u793a\u8fd9\u4e00\u6bb5\u4ee3\u7801\u88ab\u52a0\u8f7d\u7684\u65f6\u5019\u5c31\u52a0\u8f7d\u5230\u5230\u5185\u5b58\u7684\u8fd9\u4e2a\u7269\u7406\u5730\u5740\u4e0a\u3002 \u901a\u8fc7'Section to Segment mapping:'\u90a3\u6bb5\u4fe1\u606f\u6211\u4eec\u8fd8\u53ef\u4ee5\u770b\u5230\uff0c\u7b2c\u4e00\u4e2a Segment \u5305\u542b .text .rodata \u4e24\u4e2asection,\u7b2c\u4e8c\u4e2aSegment\u4fdd\u62a4.data .bss \u4e24\u4e2a\u4e24\u4e2asection\u3002\u6211\u4eec\u901a\u8fc7 readelf -S kernel \u547d\u4ee4\u770b\u770bELF\u6587\u4ef6\u7684Section Headers\u3002 $ readelf -S kernel There are 16 section headers, starting at offset 0x33db4: Section Headers: [Nr] Name Type Addr Off Size ES Flg Lk Inf Al [ 0] NULL 00000000 000000 000000 00 0 0 0 [ 1] .text PROGBITS 80100000 001000 0070da 00 AX 0 0 16 [ 2] .rodata PROGBITS 801070e0 0080e0 0009cb 00 A 0 0 32 [ 3] .data PROGBITS 80108000 009000 002516 00 WA 0 0 4096 [ 4] .bss NOBITS 8010a520 00b516 00af88 00 WA 0 0 32 [ 5] .debug_line PROGBITS 00000000 00b516 006cb5 00 0 0 1 [ 6] .debug_info PROGBITS 00000000 0121cb 0121ce 00 0 0 1 [ 7] .debug_abbrev PROGBITS 00000000 024399 003fd7 00 0 0 1 [ 8] .debug_aranges PROGBITS 00000000 028370 0003a8 00 0 0 8 [ 9] .debug_str PROGBITS 00000000 028718 000eb6 01 MS 0 0 1 [10] .debug_loc PROGBITS 00000000 0295ce 00681e 00 0 0 1 [11] .debug_ranges PROGBITS 00000000 02fdec 000d08 00 0 0 1 [12] .comment PROGBITS 00000000 030af4 00002b 01 MS 0 0 1 [13] .symtab SYMTAB 00000000 030b20 002050 10 14 78 4 [14] .strtab STRTAB 00000000 032b70 0011ac 00 0 0 1 [15] .shstrtab STRTAB 00000000 033d1c 000096 00 0 0 1 Key to Flags: W (write), A (alloc), X (execute), M (merge), S (strings), I (info), L (link order), O (extra OS processing required), G (group), T (TLS), C (compressed), x (unknown), o (OS specific), E (exclude), p (processor specific) \u8fd9\u91cc\u53ef\u4ee5\u770b\u5230'.text section'\u5728\u6587\u4ef6\u4e2d\u7684\u4f4d\u7f6e\uff08Off\uff09\u662f001000 \u5927\u5c0f\u662f0070da\uff0c\u7d27\u8ddf\u5176\u540e\u7684\u662f\u2018.rodata\u2019\uff0c\u5b83\u7684\u4f4d\u7f6e\u5e94\u8be5\u662f 001000 + 0070da = 0080da \uff0c\u53ef\u662f.rodata \u7684Off \u5374\u663e\u793a0080e0\uff0c\u8fd9\u662f\u56e0\u4e3a.rodata\u662f\u630932\u4e2a\u5b57\u8282\u5bf9\u9f50\u7684\uff08Al\uff09, 0080da \u630932\u4e2a\u5b57\u8282\u5bf9\u9f50\u540e\u5c31\u662f0080e0\uff0c'.rodata'\u7684\u8d77\u59cb\u4f4d\u7f6e\uff08off=0080e0\uff09 + \u5b83\u7684\u5927\u5c0f\uff08size=0009cb\uff09 = 008aab \u8fd9\u5c31\u662f\u2018.rodata\u2019\u7684\u7ed3\u675f\u4f4d\u7f6e, \u2018.rodata\u2019\u7684\u7ed3\u675f\u4f4d\u7f6e 008aab - \u2018.text\u2019 \u7684\u8d77\u59cb\u4f4d\u7f6e 001000 = 007aab \u6b63\u662fProgram Headers\u4e2d\u7b2c\u4e00\u4e2asegment\u7684\u5927\u5c0f\uff08FileSiz\uff09\u3002\u8fd9\u6b63\u662f\u56e0\u4e3a\u7b2c\u4e00\u4e2asegment \u5305\u542b text .rodata \u8fd9\u4e24\u4e2asection, \u800c\u7f16\u8bd1\u5668\u4f1a\u628a\u6bcf\u4e2asegment\u4e2d\u5305\u542b\u7684sections \u653e\u5728\u4e00\u8d77\u6309\u987a\u5e8f\u6392\u5217. \u540c\u6837\u7684\u9053\u7406\u7b2c\u4e8c\u4e2asegment\u4e5f\u662f\u8fd9\u6837\u7684\u60c5\u51b5\u3002 xv6 \u7684elf.h \u6587\u4ef6\u4e2d\u6709\u5173\u4e8eELF header\u548cprogram header \u7684\u8be6\u7ec6\u5b9a\u4e49.","title":"ELF\u6587\u4ef6\u683c\u5f0f"},{"location":"boot_loader/#bootmain","text":"\u5728\u201c\u4ece\u5b9e\u6a21\u5f0f\u5230\u4fdd\u62a4\u6a21\u5f0f\u90a3\u4e00\u8282\u4e2d\u201d\u6211\u4eec\u5199\u5230 \u901a\u8fc7\u8fd9\u4e2a\u8df3\u8f6c\u5b9e\u9645\u4e0a CPU \u5c31\u4f1a\u8df3\u8f6c\u5230 bootasm.S \u6587\u4ef6\u7684 start32 \u6807\u8bc6\u7b26\u5904\u7ee7\u7eed\u6267\u884c\u4e86 \u6211\u4eec\u6253\u5f00 bootasm.S \u6587\u4ef6\u770b\u770b\u5bf9\u5e94\u7684 start32 \u4f4d\u7f6e\u5904\u7684\u4ee3\u7801\u505a\u4e86\u4ec0\u4e48\u4e8b\u60c5\u3002 .code32 # Tell assembler to generate 32-bit code now. start32: # Set up the protected-mode data segment registers # \u50cf\u4e0a\u9762\u8bb2 ljmp \u65f6\u6240\u8bf4\u7684\uff0c\u8fd9\u65f6\u5019\u5df2\u7ecf\u5728\u4fdd\u62a4\u6a21\u5f0f\u4e0b\u4e86 # \u6570\u636e\u6bb5\u5728 GDT \u4e2d\u7684\u4e0b\u6807\u662f 2\uff0c\u6240\u4ee5\u8fd9\u91cc\u6570\u636e\u6bb5\u7684\u6bb5\u9009\u62e9\u5b50\u662f 2 << 3 = 0000 0000 0001 0000 # \u8fd9 16 \u4f4d\u7684\u6bb5\u9009\u62e9\u5b50\u4e2d\u7684\u524d 13 \u4f4d\u662f GDT \u6bb5\u8868\u4e0b\u6807\uff0c\u8fd9\u91cc\u524d 13 \u4f4d\u7684\u503c\u662f 2 \u4ee3\u8868\u9009\u62e9\u4e86\u6570\u636e\u6bb5 # \u8fd9\u91cc\u5c06 3 \u4e2a\u6570\u636e\u6bb5\u5bc4\u5b58\u5668\u90fd\u8d4b\u503c\u6210\u6570\u636e\u6bb5\u6bb5\u9009\u62e9\u5b50\u7684\u503c movw $(SEG_KDATA<<3), %ax # Our data segment selector \u6bb5\u9009\u62e9\u5b50\u8d4b\u503c\u7ed9 ax \u5bc4\u5b58\u5668 movw %ax, %ds # -> DS: Data Segment \u521d\u59cb\u5316\u6570\u636e\u6bb5\u5bc4\u5b58\u5668 movw %ax, %es # -> ES: Extra Segment \u521d\u59cb\u5316\u6269\u5c55\u6bb5\u5bc4\u5b58\u5668 movw %ax, %ss # -> SS: Stack Segment \u521d\u59cb\u5316\u5806\u6808\u6bb5\u5bc4\u5b58\u5668 movw $0, %ax # Zero segments not ready for use ax \u5bc4\u5b58\u5668\u6e05\u96f6 movw %ax, %fs # -> FS \u8f85\u52a9\u5bc4\u5b58\u5668\u6e05\u96f6 movw %ax, %gs # -> GS \u8f85\u52a9\u5bc4\u5b58\u5668\u6e05\u96f6 # Set up the stack pointer and call into C. movl $start, %esp call bootmain \u8fd9\u91cc\u5728\u521d\u59cb\u5316\u4e86\u4e00\u4e9b\u5bc4\u5b58\u5668\u540e\u76f4\u63a5\u8c03\u7528\u4e86\u4e00\u4e2a\u53eb\u505a bootmain \u7684\u51fd\u6570\uff0c\u800c\u8fd9\u4e2a\u51fd\u6570\u662f\u5199\u5728 bootmain.c \u6587\u4ef6\u4e2d\u7684\uff0c\u7ec8\u4e8e\u6211\u4eec\u6682\u65f6\u544a\u522b\u4e86\u6c47\u7f16\u6765\u5230\u4e86 C \u7684\u4e16\u754c\u4e86\u3002\u6765\u770b\u770b bootmain \u51fd\u6570\u5728\u505a\u4ec0\u4e48\u4e8b\u60c5\u3002 bootmain.c \u8fd9\u4e2a\u6587\u4ef6\u5f88\u5c0f\uff0c\u4ee3\u7801\u5f88\u5c11\uff0c\u5b83\u5176\u5b9e\u662f\u5f15\u5bfc\u5de5\u4f5c\u7684\u6700\u540e\u90e8\u5206\uff08\u5f15\u5bfc\u7684\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u5728 bootasm.S \u4e2d\u5b9e\u73b0\uff09\uff0c\u5b83\u8d1f\u8d23\u5c06\u5185\u6838\u4ece\u786c\u76d8\u4e0a\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u7136\u540e\u5f00\u59cb\u6267\u884c\u5185\u6838\u4e2d\u7684\u7a0b\u5e8f\u3002\u6211\u4eec\u6765\u770b\u4ee3\u7801\u3002 void bootmain(void) { struct elfhdr *elf; struct proghdr *ph, *eph; void (*entry)(void); uchar* pa; // \u4ece 0xa0000 \u5230 0xfffff \u7684\u7269\u7406\u5730\u5740\u8303\u56f4\u5c5e\u4e8e\u8bbe\u5907\u7a7a\u95f4\uff0c // \u6240\u4ee5\u5185\u6838\u653e\u7f6e\u5728 0x10000 \u5904\u5f00\u59cb elf = (struct elfhdr*)0x10000; // scratch space // \u4ece\u5185\u6838\u6240\u5728\u786c\u76d8\u4f4d\u7f6e\u8bfb\u53d6\u4e00\u5185\u5b58\u9875 4kb \u6570\u636e readseg((uchar*)elf, 4096, 0); // \u5224\u65ad\u662f\u5426\u4e3a ELF \u6587\u4ef6\u683c\u5f0f if(elf->magic != ELF_MAGIC) return; // let bootasm.S handle error // \u52a0\u8f7d ELF \u6587\u4ef6\u4e2d\u7684\u7a0b\u5e8f\u6bb5 (ignores ph flags). ph = (struct proghdr*)((uchar*)elf + elf->phoff); eph = ph + elf->phnum; for(; ph < eph; ph++){ pa = (uchar*)ph->paddr; readseg(pa, ph->filesz, ph->off); if(ph->memsz > ph->filesz) stosb(pa + ph->filesz, 0, ph->memsz - ph->filesz); } // Call the entry point from the ELF header. // Does not return! entry = (void(*)(void))(elf->entry); entry(); } \u8fd9\u91cc\u7684elfhdr\u5c31\u662fELF header, proghdr\u5c31\u662fprogram header, for \u5faa\u73af\u4e2d\u7684\u4ee3\u7801\u5b9e\u73b0\u4e86\u628aELF kernel \u6587\u4ef6\u4e2d\u7684segment\u6240\u8bb0\u5f55\u7684\u88ab\u52a0\u8f7d\u533a\u57df\u52a0\u8f7d\u5230\u5bf9\u5e94segment\u6307\u5b9a\u7684\u7269\u7406\u5730\u5740\u4e0a\uff08ph->paddr\uff09\uff0cph->off\u662f\u88ab\u52a0\u8f7d\u533a\u57df\u5728ELF\u6587\u4ef6\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c ph->filesz\u662f\u88ab\u52a0\u8f7d\u533a\u57df\u7684\u5b9e\u9645\u5927\u5c0f\uff0c\u5f53 ph->memsz \u5927\u4e8eph->filesz\u65f6\uff0c\u5269\u4f59\u7684\u533a\u95f4\u8981\u586b\u5145\u4e3a0\u3002\u52a0\u8f7d\u5b8c\u6210\u540e\u8df3\u8f6c\u5230\u5165\u53e3\u51fd\u6570\uff08elf->entry\uff09\u5f00\u59cb\u8fd0\u884c\u5185\u6838\u3002 \u6700\u540e\u6211\u4eec\u770b\u4e00\u4e0b\u8bfb\u53d6\u78c1\u76d8\u4fe1\u606f\u7684\u65b9\u6cd5\u5b9e\u73b0\uff0c\u770b\u770b\u662f\u600e\u6837\u901a\u8fc7\u5411\u7279\u5b9a\u7aef\u53e3\u53d1\u9001\u6570\u636e\u6765\u8fbe\u5230\u64cd\u4f5c\u78c1\u76d8\u76ee\u7684\u7684\u3002 // Read a single sector at offset into dst. // \u8fd9\u91cc\u4f7f\u7528\u7684\u662f LBA \u78c1\u76d8\u5bfb\u5740\u6a21\u5f0f // LBA\u662f\u975e\u5e38\u5355\u7eaf\u7684\u4e00\u79cd\u5bfb\u5740\u6a21\u5f0f\ufe54\u4ece0\u5f00\u59cb\u7f16\u53f7\u6765\u5b9a\u4f4d\u533a\u5757\uff0c // \u7b2c\u4e00\u533a\u5757LBA=0\uff0c\u7b2c\u4e8c\u533a\u5757LBA=1\uff0c\u4f9d\u6b64\u7c7b\u63a8 void readsect(void *dst, uint offset) // 0x10000, 1 { // Issue command. waitdisk(); outb(0x1F2, 1); // \u8981\u8bfb\u53d6\u7684\u6247\u533a\u6570\u91cf count = 1 outb(0x1F3, offset); // \u6247\u533a LBA \u5730\u5740\u7684 0-7 \u4f4d outb(0x1F4, offset >> 8); // \u6247\u533a LBA \u5730\u5740\u7684 8-15 \u4f4d outb(0x1F5, offset >> 16); // \u6247\u533a LBA \u5730\u5740\u7684 16-23 \u4f4d outb(0x1F6, (offset >> 24) | 0xE0); // offset | 11100000 \u4fdd\u8bc1\u9ad8\u4e09\u4f4d\u6052\u4e3a 1 // \u7b2c7\u4f4d \u6052\u4e3a1 // \u7b2c6\u4f4d LBA\u6a21\u5f0f\u7684\u5f00\u5173\uff0c\u7f6e1\u4e3aLBA\u6a21\u5f0f // \u7b2c5\u4f4d \u6052\u4e3a1 // \u7b2c4\u4f4d \u4e3a0\u4ee3\u8868\u4e3b\u786c\u76d8\u3001\u4e3a1\u4ee3\u8868\u4ece\u786c\u76d8 // \u7b2c3~0\u4f4d \u6247\u533a LBA \u5730\u5740\u7684 24-27 \u4f4d outb(0x1F7, 0x20); // 20h\u4e3a\u8bfb\uff0c30h\u4e3a\u5199 // Read data. waitdisk(); insl(0x1F0, dst, SECTSIZE/4); } \u6211\u4eec\u5df2\u7ecf\u8bb2\u5230\u4e86\u5982\u4f55\u901a\u8fc7\u5411 804x \u952e\u76d8\u63a7\u5236\u5668\u7aef\u53e3\u53d1\u9001\u4fe1\u53f7\u6765\u6253\u5f00 A20 gate \u4e86\uff0c\u540c\u6837\u9053\u7406\uff0c\u6211\u4eec\u5411\u786c\u76d8\u63a7\u5236\u5668\u7684\u6307\u5b9a\u7aef\u53e3\u53d1\u9001\u4fe1\u53f7\u5c31\u53ef\u4ee5\u64cd\u4f5c\u786c\u76d8\uff0c\u4ece\u786c\u76d8\u8bfb\u53d6\u6216\u5411\u786c\u76d8\u5199\u5165\u6570\u636e\u3002IDE \u6807\u51c6\u5b9a\u4e49\u4e86 8 \u4e2a\u5bc4\u5b58\u5668\u6765\u64cd\u4f5c\u786c\u76d8\u3002PC \u4f53\u7cfb\u7ed3\u6784\u5c06\u7b2c\u4e00\u4e2a\u786c\u76d8\u63a7\u5236\u5668\u6620\u5c04\u5230\u7aef\u53e3 1F0-1F7 \u5904\uff0c\u800c\u7b2c\u4e8c\u4e2a\u786c\u76d8\u63a7\u5236\u5668\u5219\u88ab\u6620\u5c04\u5230\u7aef\u53e3 170-177 \u5904\u3002\u8fd9\u51e0\u4e2a\u5bc4\u5b58\u5668\u7684\u63cf\u8ff0\u5982\u4e0b\uff08\u4ee5\u7b2c\u4e00\u4e2a\u63a7\u5236\u5668\u4e3a\u4f8b\uff09\uff1a 1F0 - \u6570\u636e\u5bc4\u5b58\u5668\u3002\u8bfb\u5199\u6570\u636e\u90fd\u5fc5\u987b\u901a\u8fc7\u8fd9\u4e2a\u5bc4\u5b58\u5668 1F1 - \u9519\u8bef\u5bc4\u5b58\u5668\uff0c\u6bcf\u4e00\u4f4d\u4ee3\u8868\u4e00\u7c7b\u9519\u8bef\u3002\u5168\u96f6\u8868\u793a\u64cd\u4f5c\u6210\u529f\u3002 1F2 - \u6247\u533a\u8ba1\u6570\u3002\u8fd9\u91cc\u9762\u5b58\u653e\u4f60\u8981\u64cd\u4f5c\u7684\u6247\u533a\u6570\u91cf 1F3 - \u6247\u533aLBA\u5730\u5740\u76840-7\u4f4d 1F4 - \u6247\u533aLBA\u5730\u5740\u76848-15\u4f4d 1F5 - \u6247\u533aLBA\u5730\u5740\u768416-23\u4f4d 1F6 (\u4f4e4\u4f4d) - \u6247\u533aLBA\u5730\u5740\u768424-27\u4f4d 1F6 (\u7b2c4\u4f4d) - 0\u8868\u793a\u9009\u62e9\u4e3b\u76d8\uff0c1\u8868\u793a\u9009\u62e9\u4ece\u76d8 1F6 (5-7\u4f4d) - \u5fc5\u987b\u4e3a1 1F7 (\u5199) - \u547d\u4ee4\u5bc4\u5b58\u5668 1F7 (\u8bfb) - \u72b6\u6001\u5bc4\u5b58\u5668 bit 7 = 1 \u63a7\u5236\u5668\u5fd9 bit 6 = 1 \u9a71\u52a8\u5668\u5c31\u7eea bit 5 = 1 \u8bbe\u5907\u9519\u8bef bit 4 N/A bit 3 = 1 \u6247\u533a\u7f13\u51b2\u533a\u9519\u8bef bit 2 = 1 \u78c1\u76d8\u5df2\u88ab\u8bfb\u6821\u9a8c bit 1 N/A bit 0 = 1 \u4e0a\u4e00\u6b21\u547d\u4ee4\u6267\u884c\u5931\u8d25","title":"\u4ece bootmain \u5f00\u59cb"},{"location":"boot_loader/#_3","text":"\u81f3\u6b64\u5185\u6838\u5df2\u7ecf\u88ab\u8f7d\u5165\u5185\u5b58\u5e76\u51c6\u5907\u6295\u5165\u8fd0\u884c\u4e86\u3002\u5728\u7ed3\u675f\u8fd9\u4e00\u7bc7\u524d\u6211\u4eec\u518d\u770b\u4e00\u773c\u76ee\u524d\u72b6\u6001\u4e0b\u7cfb\u7edf\u6574\u4f53\u7684\u5185\u5b58\u5e03\u5c40\uff0c\u5bf9\u5373\u5c06\u8fd0\u884c\u7684\u5185\u6838\u73af\u5883\u6709\u4e00\u4e2a\u5927\u81f4\u7684\u4e86\u89e3\u3002 \u4ece bootasm.S \u6587\u4ef6\u7684\u4ee3\u7801 movl $start, %esp # \u6808\u9876\u88ab\u653e\u7f6e\u5728 0x7C00 \u5904\uff0c\u5373 $start \u53ef\u77e5\uff0c\u6267\u884c bootmain.c \u4e4b\u524d bootasm.S \u6c47\u7f16\u4ee3\u7801\u5df2\u7ecf\u5c06\u6808\u7684\u6808\u9876\u8bbe\u7f6e\u5728\u4e86 0x7C00 \u5904\u3002\u4e4b\u524d\u6211\u4eec\u4e86\u89e3\u8fc7 x86 \u67b6\u6784\u8ba1\u7b97\u673a\u7684\u542f\u52a8\u8fc7\u7a0b\uff0cBIOS \u4f1a\u5c06\u5f15\u5bfc\u6247\u533a\u7684\u5f15\u5bfc\u7a0b\u5e8f\u52a0\u8f7d\u5230 0x7C00 \u5904\u5e76\u5f15\u5bfc CPU \u4ece\u6b64\u5904\u5f00\u59cb\u8fd0\u884c\uff0c\u6545\u6808\u9876\u5373\u88ab\u8bbe\u7f6e\u5728\u4e86\u548c\u5f15\u5bfc\u7a0b\u5e8f\u4e00\u81f4\u7684\u5185\u5b58\u4f4d\u7f6e\u4e0a\u3002\u6211\u4eec\u77e5\u9053\u6808\u662f\u81ea\u6808\u9876\u5f00\u59cb\u5411\u4e0b\u589e\u957f\u7684\uff0c\u6240\u4ee5\u8fd9\u91cc\u6808\u4f1a\u9010\u6e10\u8fdc\u79bb\u5f15\u5bfc\u7a0b\u5e8f\uff0c\u6240\u4ee5\u8fd9\u91cc\u8fd9\u6837\u5b89\u7f6e\u6808\u9876\u7684\u4f4d\u7f6e\u5e76\u65e0\u4ec0\u4e48\u95ee\u9898\u3002 \u5728 bootmain.c \u6587\u4ef6\u7684\u4ee3\u7801 elf = (struct elfhdr*)0x10000; // \u4ece\u5185\u6838\u6240\u5728\u786c\u76d8\u4f4d\u7f6e\u8bfb\u53d6\u4e00\u5185\u5b58\u9875 4kb \u6570\u636e readseg((uchar*)elf, 4096, 0); \u53ef\u4ee5\u770b\u51faboot loader \u5148\u628a\u5185\u6838ELF\uff08Executable and Linkable Format\uff09\u52a0\u8f7d\u5230 0x10000 (64K)\u4f4d\u7f6e(\u5b9e\u9645\u4e0a\u8fd9\u662f\u4e00\u4e2a\u4efb\u610f\u9009\u53d6\u7684\u4e34\u65f6\u5b58\u653e\u7684\u4f4d\u7f6e)\uff0c\u7136\u540e\u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u8bfb\u53d6 ELF header \u548c program header , \u6839\u636eprograme header\u91cc\u7684\u6bb5\u8bb0\u5f55\u7684\u52a0\u8f7d\u5bf9\u5e94\u7684\u4ee3\u7801\u6bb5\u548c\u6570\u636e\u6bb5\u5230paddr\u6307\u5b9a\u7684\u4f4d\u7f6e\uff0c\u5176\u4e2d\u4ee3\u7801\u6bb5\u7684paddr\u662f0x100000(1M) ,\u6570\u636e\u6bb5\u7684paddr\u662f0x00108000. \u6240\u4ee5\u52a0\u8f7d\u5b8c\u5185\u6838\u540e\u7684\u5185\u5b58\u5e03\u5c40\u793a\u610f\u56fe\u5982\u4e0b: +------------------------------+ | | | kernel data | +------------------------------+ 0x00108000 | | | kernel code | +------------------------------+ 0x00100000 | | | | | | +------------------------------+ 0x00007d00 | | | boot loader | STACK --------> +------------------------------+ 0x00007c00 grow down | | | stack | +------------------------------+ 0x00000000 \u53c2\u8003\uff1a http://leenjewel.github.io/blog/2014/07/29/%5B%28xue-xi-xv6%29%5D-cong-shi-mo-shi-dao-bao-hu-mo-shi/","title":"\u5185\u6838\u52a0\u8f7d\u540e\u7684\u7cfb\u7edf\u5185\u5b58\u5e03\u5c40"},{"location":"device/","text":"\u8bbe\u5907\u7ba1\u7406 xv6\u6839linux\u4e00\u6837\u628a\u6240\u6709\u7684\u8bbe\u5907\u90fd\u5f53\u6587\u4ef6\u7ba1\u7406\u3002\u8fd9\u91cc\u4ee5\u952e\u76d8\u548c\u663e\u793a\u5668\u4e3a\u4f8b\uff0c\u952e\u76d8\u548c\u663e\u793a\u5668\u7edf\u79f0\u4e3a\u63a7\u5236\u53f0\u8bbe\u5907\uff08console\uff09,\u5176\u4e2d\u952e\u76d8\u662f\u8f93\u5165\u8bbe\u5907\uff0c\u663e\u793a\u5668\u662f\u8f93\u51fa\u8bbe\u5907\u3002 \u63a7\u5236\u53f0\u7684\u521b\u5efa xv6\u7684\u63a7\u5236\u53f0\u7684\u521b\u5efa\u4ee3\u7801\u5728init.c\u4e2d\uff0c\u6709\u5982\u4e0b\u4e24\u53e5\uff1a mknod(\"console\", 1, 1); open(\"console\", O_RDWR); mknod\u662f\u5728\u6587\u4ef6\u7cfb\u7edf\u91cc\u521b\u5efa\u4e00\u4e2a\u540d\u5b57\u4e3aconsole\u7684\u8bbe\u5907\u6587\u4ef6\uff0c\u8be5\u8bbe\u5907\u7684 major=1, minor=1 \u63a7\u5236\u53f0\u8bfb\u5199\u65b9\u6cd5\u7684\u6ce8\u518c \u5728console.c\u7684consoleinit\u65b9\u6cd5\u4e2d\u6709\u4e0b\u9762\u4e24\u53e5\u5bf9\u63a7\u5236\u53f0\u8bfb\u5199\u65b9\u6cd5\u8fdb\u884c\u6ce8\u518c devsw[CONSOLE].write = consolewrite; devsw[CONSOLE].read = consoleread; \u5176\u4e2dCONSOLE\u7684\u503c\u662f1,\u4e0e\u521b\u5efa\u65b9\u6cd5\u4e2d\u7684major\u5bf9\u5e94 \u63a7\u5236\u53f0\u8bfb\u5199\u65b9\u6cd5\u7684\u7cfb\u7edf\u8c03\u7528 \u4e0e\u6587\u4ef6\u7684\u8bfb\u5199\u4e00\u6837\u5bf9\u8bbe\u5907\u7684\u8bfb\u5199\u90fd\u662f\u901a\u8fc7open\u8fd4\u56de\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u8c03\u7528\u7cfb\u7edf\u8c03\u7528\u65b9\u6cd5read \u548c write\u3002 \u4f8b\u5982\u8c03\u7528read\u65b9\u6cd5\u540e\uff0cread\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u7684\u4e2d\u65ad\u6d41\u7a0b\u53c8\u8c03\u7528sys_file.c\u7684sys_read\uff0csys_read\u53c8\u8c03\u7528file.c\u7684fileread\uff0cfileread\u5224\u65ad\u5f53\u524d\u6587\u4ef6\u7c7b\u578b\u662fFD_INODE\u8c03\u7528fs.c\u7684readi, readi\u5224\u65adinode\u7684\u7c7b\u578b\u662fT_DEV\u8c03\u7528 devsw[ip->major].read(ip, dst, n) \u4e5f\u5c31\u662f\u524d\u9762\u6ce8\u518c\u7684\u8bfb\u65b9\u6cd5consoleread\u3002 \u952e\u76d8\u8f93\u5165 consoleread\u662f\u4ece\u7cfb\u7edf\u7f13\u5b58\u961f\u5217\u91cc\u8bfb\u53d6\u7684\uff0c\u800c\u7cfb\u7edf\u7f13\u5b58\u961f\u5217\u7684\u5185\u5bb9\u662f\u7531\u952e\u76d8\u8f93\u5165\u7684\u3002\u952e\u76d8\u6309\u952e\u88ab\u6309\u4e0b\u65f6\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad,\u5982\u679c\u662f\u4e3b\u677f\u4e0a\u7684\u952e\u76d8\u5219\u4e2d\u65ad\u7f16\u53f7\u662fT_IRQ0 + IRQ_KBD\uff0c\u5982\u679c\u662f\u952e\u76d8\u662f\u901a\u8fc7\u4e32\u53e3\u8fde\u63a5\u5230\u4e3b\u677f\u4e0a\u7684\u5219\u4e2d\u65ad\u7f16\u53f7\u4e3aT_IRQ0 + IRQ_COM1\uff0c\u6839\u636e\u8fd9\u4e0d\u540c\u7684\u4e2d\u65ad\u7f16\u53f7\u8c03\u7528\u7684\u65b9\u6cd5\u4e5f\u4e0d\u540c\uff0c\u5206\u522b\u662fkbdintr\u548cuartintr\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u90fd\u8c03\u7528consoleintr\uff0c\u53ea\u662f\u53c2\u6570\u5206\u522b\u662fkbdgetc\u548cuartgetc\u4e24\u4e2a\u4e0d\u540c\u83b7\u53d6\u6309\u952eASCII\u7801\u7684\u65b9\u6cd5\u3002consoleintr\u65b9\u6cd5\u4f1a\u628a\u83b7\u53d6\u5230\u7684\u952e\u76d8\u8f93\u5165\u5b57\u7b26\u8ffd\u52a0\u5230\u7f13\u5b58\u961f\u5217\u91cc\u3002","title":"\u8bbe\u5907\u7ba1\u7406"},{"location":"device/#_1","text":"xv6\u6839linux\u4e00\u6837\u628a\u6240\u6709\u7684\u8bbe\u5907\u90fd\u5f53\u6587\u4ef6\u7ba1\u7406\u3002\u8fd9\u91cc\u4ee5\u952e\u76d8\u548c\u663e\u793a\u5668\u4e3a\u4f8b\uff0c\u952e\u76d8\u548c\u663e\u793a\u5668\u7edf\u79f0\u4e3a\u63a7\u5236\u53f0\u8bbe\u5907\uff08console\uff09,\u5176\u4e2d\u952e\u76d8\u662f\u8f93\u5165\u8bbe\u5907\uff0c\u663e\u793a\u5668\u662f\u8f93\u51fa\u8bbe\u5907\u3002","title":"\u8bbe\u5907\u7ba1\u7406"},{"location":"device/#_2","text":"xv6\u7684\u63a7\u5236\u53f0\u7684\u521b\u5efa\u4ee3\u7801\u5728init.c\u4e2d\uff0c\u6709\u5982\u4e0b\u4e24\u53e5\uff1a mknod(\"console\", 1, 1); open(\"console\", O_RDWR); mknod\u662f\u5728\u6587\u4ef6\u7cfb\u7edf\u91cc\u521b\u5efa\u4e00\u4e2a\u540d\u5b57\u4e3aconsole\u7684\u8bbe\u5907\u6587\u4ef6\uff0c\u8be5\u8bbe\u5907\u7684 major=1, minor=1","title":"\u63a7\u5236\u53f0\u7684\u521b\u5efa"},{"location":"device/#_3","text":"\u5728console.c\u7684consoleinit\u65b9\u6cd5\u4e2d\u6709\u4e0b\u9762\u4e24\u53e5\u5bf9\u63a7\u5236\u53f0\u8bfb\u5199\u65b9\u6cd5\u8fdb\u884c\u6ce8\u518c devsw[CONSOLE].write = consolewrite; devsw[CONSOLE].read = consoleread; \u5176\u4e2dCONSOLE\u7684\u503c\u662f1,\u4e0e\u521b\u5efa\u65b9\u6cd5\u4e2d\u7684major\u5bf9\u5e94","title":"\u63a7\u5236\u53f0\u8bfb\u5199\u65b9\u6cd5\u7684\u6ce8\u518c"},{"location":"device/#_4","text":"\u4e0e\u6587\u4ef6\u7684\u8bfb\u5199\u4e00\u6837\u5bf9\u8bbe\u5907\u7684\u8bfb\u5199\u90fd\u662f\u901a\u8fc7open\u8fd4\u56de\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u8c03\u7528\u7cfb\u7edf\u8c03\u7528\u65b9\u6cd5read \u548c write\u3002 \u4f8b\u5982\u8c03\u7528read\u65b9\u6cd5\u540e\uff0cread\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u7684\u4e2d\u65ad\u6d41\u7a0b\u53c8\u8c03\u7528sys_file.c\u7684sys_read\uff0csys_read\u53c8\u8c03\u7528file.c\u7684fileread\uff0cfileread\u5224\u65ad\u5f53\u524d\u6587\u4ef6\u7c7b\u578b\u662fFD_INODE\u8c03\u7528fs.c\u7684readi, readi\u5224\u65adinode\u7684\u7c7b\u578b\u662fT_DEV\u8c03\u7528 devsw[ip->major].read(ip, dst, n) \u4e5f\u5c31\u662f\u524d\u9762\u6ce8\u518c\u7684\u8bfb\u65b9\u6cd5consoleread\u3002","title":"\u63a7\u5236\u53f0\u8bfb\u5199\u65b9\u6cd5\u7684\u7cfb\u7edf\u8c03\u7528"},{"location":"device/#_5","text":"consoleread\u662f\u4ece\u7cfb\u7edf\u7f13\u5b58\u961f\u5217\u91cc\u8bfb\u53d6\u7684\uff0c\u800c\u7cfb\u7edf\u7f13\u5b58\u961f\u5217\u7684\u5185\u5bb9\u662f\u7531\u952e\u76d8\u8f93\u5165\u7684\u3002\u952e\u76d8\u6309\u952e\u88ab\u6309\u4e0b\u65f6\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad,\u5982\u679c\u662f\u4e3b\u677f\u4e0a\u7684\u952e\u76d8\u5219\u4e2d\u65ad\u7f16\u53f7\u662fT_IRQ0 + IRQ_KBD\uff0c\u5982\u679c\u662f\u952e\u76d8\u662f\u901a\u8fc7\u4e32\u53e3\u8fde\u63a5\u5230\u4e3b\u677f\u4e0a\u7684\u5219\u4e2d\u65ad\u7f16\u53f7\u4e3aT_IRQ0 + IRQ_COM1\uff0c\u6839\u636e\u8fd9\u4e0d\u540c\u7684\u4e2d\u65ad\u7f16\u53f7\u8c03\u7528\u7684\u65b9\u6cd5\u4e5f\u4e0d\u540c\uff0c\u5206\u522b\u662fkbdintr\u548cuartintr\uff0c\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u90fd\u8c03\u7528consoleintr\uff0c\u53ea\u662f\u53c2\u6570\u5206\u522b\u662fkbdgetc\u548cuartgetc\u4e24\u4e2a\u4e0d\u540c\u83b7\u53d6\u6309\u952eASCII\u7801\u7684\u65b9\u6cd5\u3002consoleintr\u65b9\u6cd5\u4f1a\u628a\u83b7\u53d6\u5230\u7684\u952e\u76d8\u8f93\u5165\u5b57\u7b26\u8ffd\u52a0\u5230\u7f13\u5b58\u961f\u5217\u91cc\u3002","title":"\u952e\u76d8\u8f93\u5165"},{"location":"disk_interrupt/","text":"\u786c\u76d8\u4e2d\u65ad ide.c\u662f\u7cfb\u7edf\u7684\u786c\u76d8\u9a71\u52a8\u5668\uff0c\u4e0a\u5c42\u4f1a\u8c03\u7528iderw\u5bf9\u786c\u76d8\u8fdb\u884c\u8bfb\u5199\u3002iderw\u628a\u8bfb\u5199\u8bf7\u6c42\uff08buf\uff09\u8ffd\u52a0\u5230\u8bf7\u6c42\u961f\u5217\uff08idequeue\uff09\u91cc\u9762\u3002 for(pp=&idequeue; *pp; pp=&(*pp)->qnext) ; *pp = b; \u5982\u679cidequeue\u91cc\u9762\u6ca1\u6709\u5176\u4ed6\u7684\u8bf7\u6c42\uff0c\u5c31\u5f00\u8d77idestart\u5904\u7406\u5f53\u524d\u8bf7\u6c42\u3002\u6700\u540e\u8c03\u7528sleep\u7b49\u5f85\u8bf7\u6c42\u5904\u7406\u5b8c\u6210\u3002 \u5728idestart\u91cc\u6839\u636ebuf\u8bb0\u5f55\u7684blockno\u8ba1\u7b97\u51fa\u6247\u533a\u7f16\u53f7\uff0c\u6839\u636e\u6bcf\u4e2a\u5757\u7684\u5927\u5c0f\uff08BSIZE\uff09\u8ba1\u7b97\u8bfb\u5199\u6247\u533a\u7684\u6570\u76ee\uff0c\u6839\u636eflags\u91cc\u7684B_DIRTY\u6807\u8bb0\u5224\u65ad\u662f\u8bfb\u8fd8\u662f\u5199\u64cd\u4f5c\u3002\u5e76\u628a\u8fd9\u4e9b\u4fe1\u606f\u901a\u8fc7outb\u544a\u8bc9\u786c\u76d8\u63a7\u5236\u5668\uff0c\u5982\u679c\u662f\u5199\u64cd\u4f5c\u8fd8\u8981\u628abuf\u91cc\u7684data\u901a\u8fc7outsl\u5199\u5165\u5230\u786c\u76d8\u63a7\u5236\u5668\u7684\u7f13\u5b58\u3002 \u5f53\u786c\u76d8\u5b8c\u6210\u4e86\u6570\u636e\u5199\u6216\u6570\u636e\u8bfb\u7684\u51c6\u5907\u540e\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u786c\u76d8\u8bfb\u5199\u4e2d\u65ad\uff0c\u7ecf\u8fc7\u7cfb\u7edf\u4e2d\u65ad\u5904\u7406\u6d41\u7a0b\u540e\u8fdb\u5165ideintr\u65b9\u6cd5\u3002ideintr\u628a\u5904\u7406\u5b8c\u7684\u8bf7\u6c42\u4ece\u8bf7\u6c42\u961f\u5217\u91cc\u79fb\u9664\u3002 idequeue = b->qnext; \u7136\u540e\u5224\u65ad\u5982\u679c\u9700\u8981\u8bfb\u53d6\u786c\u76d8\u6570\u636e\u5c31\u8c03\u7528insl\u8fdb\u884c\u6570\u636e\u8bfb\u53d6\u3002\u7136\u540e\u8c03\u7528wakeup\u5524\u9192\u7b49\u5f85\u786c\u76d8\u8bfb\u5199\u8be5\u6570\u636e\u7684\u8fdb\u7a0b\u3002\u6700\u540e\u8c03\u7528idestart\u7ee7\u7eed\u5904\u7406\u8bf7\u6c42\u961f\u5217\u91cc\u7684\u4e0b\u4e00\u4e2a\u8bf7\u6c42\u3002","title":"\u786c\u76d8\u4e2d\u65ad"},{"location":"disk_interrupt/#_1","text":"ide.c\u662f\u7cfb\u7edf\u7684\u786c\u76d8\u9a71\u52a8\u5668\uff0c\u4e0a\u5c42\u4f1a\u8c03\u7528iderw\u5bf9\u786c\u76d8\u8fdb\u884c\u8bfb\u5199\u3002iderw\u628a\u8bfb\u5199\u8bf7\u6c42\uff08buf\uff09\u8ffd\u52a0\u5230\u8bf7\u6c42\u961f\u5217\uff08idequeue\uff09\u91cc\u9762\u3002 for(pp=&idequeue; *pp; pp=&(*pp)->qnext) ; *pp = b; \u5982\u679cidequeue\u91cc\u9762\u6ca1\u6709\u5176\u4ed6\u7684\u8bf7\u6c42\uff0c\u5c31\u5f00\u8d77idestart\u5904\u7406\u5f53\u524d\u8bf7\u6c42\u3002\u6700\u540e\u8c03\u7528sleep\u7b49\u5f85\u8bf7\u6c42\u5904\u7406\u5b8c\u6210\u3002 \u5728idestart\u91cc\u6839\u636ebuf\u8bb0\u5f55\u7684blockno\u8ba1\u7b97\u51fa\u6247\u533a\u7f16\u53f7\uff0c\u6839\u636e\u6bcf\u4e2a\u5757\u7684\u5927\u5c0f\uff08BSIZE\uff09\u8ba1\u7b97\u8bfb\u5199\u6247\u533a\u7684\u6570\u76ee\uff0c\u6839\u636eflags\u91cc\u7684B_DIRTY\u6807\u8bb0\u5224\u65ad\u662f\u8bfb\u8fd8\u662f\u5199\u64cd\u4f5c\u3002\u5e76\u628a\u8fd9\u4e9b\u4fe1\u606f\u901a\u8fc7outb\u544a\u8bc9\u786c\u76d8\u63a7\u5236\u5668\uff0c\u5982\u679c\u662f\u5199\u64cd\u4f5c\u8fd8\u8981\u628abuf\u91cc\u7684data\u901a\u8fc7outsl\u5199\u5165\u5230\u786c\u76d8\u63a7\u5236\u5668\u7684\u7f13\u5b58\u3002 \u5f53\u786c\u76d8\u5b8c\u6210\u4e86\u6570\u636e\u5199\u6216\u6570\u636e\u8bfb\u7684\u51c6\u5907\u540e\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u786c\u76d8\u8bfb\u5199\u4e2d\u65ad\uff0c\u7ecf\u8fc7\u7cfb\u7edf\u4e2d\u65ad\u5904\u7406\u6d41\u7a0b\u540e\u8fdb\u5165ideintr\u65b9\u6cd5\u3002ideintr\u628a\u5904\u7406\u5b8c\u7684\u8bf7\u6c42\u4ece\u8bf7\u6c42\u961f\u5217\u91cc\u79fb\u9664\u3002 idequeue = b->qnext; \u7136\u540e\u5224\u65ad\u5982\u679c\u9700\u8981\u8bfb\u53d6\u786c\u76d8\u6570\u636e\u5c31\u8c03\u7528insl\u8fdb\u884c\u6570\u636e\u8bfb\u53d6\u3002\u7136\u540e\u8c03\u7528wakeup\u5524\u9192\u7b49\u5f85\u786c\u76d8\u8bfb\u5199\u8be5\u6570\u636e\u7684\u8fdb\u7a0b\u3002\u6700\u540e\u8c03\u7528idestart\u7ee7\u7eed\u5904\u7406\u8bf7\u6c42\u961f\u5217\u91cc\u7684\u4e0b\u4e00\u4e2a\u8bf7\u6c42\u3002","title":"\u786c\u76d8\u4e2d\u65ad"},{"location":"entry_%20kernel/","text":"\u8fd0\u884c\u5185\u6838 \u5728boot loader \u52a0\u8f7d\u5b8c\u5185\u6838\u540e\uff0c\u901a\u8fc7elf header\u7684e_entry\u8fdb\u5165\u5185\u6838\u7684\u5165\u53e3 ((void (*)(void)) (ELFHDR->e_entry))(); \u8fd9\u4e2a\u5165\u53e3\u5728'entry.S'\u6587\u4ef6\u4e2d\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5b8c\u6210\u7684\u529f\u80fd\u662f\u5f00\u542f\u5206\u9875\u6a21\u5f0f\uff0c\u5e76\u544a\u8bc9CPU\u9875\u8868\u7684\u5730\u5740\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u56e0\u4e3a\u6211\u4eec\u7684\u8fd0\u884c\u7684\u4ee3\u7801\u662f\u9762\u5411\u865a\u62df\u5730\u5740\u7684\uff0c\u4f46\u662f\u5728\u5f00\u542f\u5206\u9875\u6a21\u5f0f\u4e4b\u524d\uff0c\u8fd9\u4e9b\u865a\u62df\u5730\u5740\u90fd\u8fd8\u662f\u65e0\u6548\u7684\uff0c\u6240\u4ee5\u8981\u628a\u865a\u62df\u5730\u5740\u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740\uff0c\u8fd9\u91cc\u7684\u7269\u7406\u5b9e\u9645\u662f\u7ebf\u6027\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u524d\u9762\u5728 boot loader \u4e2d\u8bb2\u5230\u768432\u4f4d\u5bfb\u5740\u7684\u6bb5\u4fdd\u62a4\u6a21\u5f0f\uff0c\u8fd9\u91cc\u7684\u7ebf\u6027\u5730\u5740\u7b49\u4e8e\u7269\u7406\u5730\u5740\u3002V2P_WO \u5c31\u662f\u5b9e\u73b0\u865a\u62df\u5730\u5740\u5411\u7269\u7406\u5730\u5740\u8f6c\u6362\u7684\u4e00\u4e2a\u5b8f\u3002\u770b\u4e00\u4e0bV2P_WO \u7684\u5b9e\u73b0\u4ee3\u7801 #define V2P_WO(x) ((x) - KERNBASE) \u5373\uff0c\u7269\u7406\u5730\u5740=\u865a\u62df\u5730\u5740-KERNBASE\u3002\u4e3a\u4ec0\u4e48\u4f1a\u662f\u8fd9\u6837\u54ea\uff0c\u5b9e\u9645\u4e0a\u5728boot loader\u7684\u8bb2\u89e3\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u901a\u8fc7\u547d\u4ee4\u2018readelf -l kernel\u2019\u5206\u6790\u8fc7kernel elf\u6587\u4ef6\u7684Program Headers $ readelf -l kernel Elf file type is EXEC (Executable file) Entry point 0x10000c There are 3 program headers, starting at offset 52 Program Headers: Type Offset VirtAddr PhysAddr FileSiz MemSiz Flg Align LOAD 0x001000 0x80100000 0x00100000 0x07aab 0x07aab R E 0x1000 LOAD 0x009000 0x80108000 0x00108000 0x02516 0x0d4a8 RW 0x1000 GNU_STACK 0x000000 0x00000000 0x00000000 0x00000 0x00000 RWE 0x10 Section to Segment mapping: Segment Sections... 00 .text .rodata 01 .data .bss 02 \u5728\u8fd9\u91cc\u53ef\u4ee5\u53d1\u73b0\u4e24\u4e2a\u53ef\u4ee5load\u7684\u6bb5\u7684\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u5dee\u4e860x80000000\uff0c\u6b63\u662fKERNBASE\u7684\u503c\u3002\u5b9e\u9645\u4e0a\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u7684\u4f4d\u7f6e\u90fd\u662f\u5728kernel.ld\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u7684 SECTIONS { /* Link the kernel at this address: \".\" means the current address */ /* Must be equal to KERNLINK */ . = 0x80100000; .text : AT(0x100000) { *(.text .stub .text.* .gnu.linkonce.t.*) } ...... } \u5f00\u542f 4MB \u5185\u5b58\u5206\u9875\u652f\u6301 \u8fd9\u662f\u901a\u8fc7\u8bbe\u7f6e\u5bc4\u5b58\u5668 cr4 \u7684 PSE \u4f4d\u6765\u5b8c\u6210\u7684\u3002cr4 \u5bc4\u5b58\u5668\u662f\u4e2a 32 \u4f4d\u7684\u5bc4\u5b58\u5668\u76ee\u524d\u53ea\u7528\u5230\u4f4e 21 \u4f4d\uff0c\u6bcf\u4e00\u4f4d\u7684\u81f3\u4f4d\u90fd\u63a7\u5236\u7740\u4e00\u4e9b\u529f\u80fd\u7684\u72b6\u6001\uff0c\u6240\u4ee5 cr4 \u5bc4\u5b58\u5668\u53c8\u53eb\u505a\u63a7\u5236\u5bc4\u5b58\u5668\u3002 PSE \u4f4d\u662f cr4 \u63a7\u5236\u5bc4\u5b58\u5668\u7684\u7b2c 5 \u4f4d\uff0c\u5f53\u8be5\u4f4d\u7f6e\u4e3a 1 \u65f6\u8868\u793a\u5185\u5b58\u9875\u5927\u5c0f\u4e3a 4MB\uff0c\u5f53\u7f6e\u4e3a 0 \u65f6\u8868\u793a\u5185\u5b58\u9875\u5927\u5c0f\u4e3a 4KB\u3002 # Turn on page size extension for 4Mbyte pages movl %cr4, %eax orl $(CR4_PSE), %eax movl %eax, %cr4 cr3 \u5bc4\u5b58\u5668\u4e2d\u4fdd\u5b58\u7740\u9875\u8868\u6240\u5728\u7684\u5185\u5b58\u7269\u7406\u5730\u5740 # Set page directory movl $(V2P_WO(entrypgdir)), %eax movl %eax, %cr3 cr0\u63a7\u5236\u5206\u9875\u6a21\u5f0f\u7684\u5f00\u542f\uff0c\uff08\u5728boot loader\u4e2d\u8bb2\u8fc7\uff09\u3002 # Turn on paging. movl %cr0, %eax orl $(CR0_PG|CR0_WP), %eax movl %eax, %cr0 \u9875\u8868entrypgdir\u7684\u4ee3\u7801\u5982\u4e0b\uff1a // The boot page table used in entry.S and entryother.S. // Page directories (and page tables) must start on page boundaries, // hence the __aligned__ attribute. // PTE_PS in a page directory entry enables 4Mbyte pages. __attribute__((__aligned__(PGSIZE))) pde_t entrypgdir[NPDENTRIES] = { // Map VA's [0, 4MB) to PA's [0, 4MB) [0] = (0) | PTE_P | PTE_W | PTE_PS, // Map VA's [KERNBASE, KERNBASE+4MB) to PA's [0, 4MB) [KERNBASE>>PDXSHIFT] = (0) | PTE_P | PTE_W | PTE_PS, }; \u6bcf\u6761\u9875\u8868\u7684\u8bb0\u5f55\u662f32\u4f4d\u5927\u5c0f\uff0c\u8fd9\u662f\u4e2a\u53ea\u6709\u4e00\u7ea7\u7684\u9875\u9762\uff0c\u6240\u4ee5\u5b83\u7684\u524d20\u4f4d\u662f\u9875\u8868\u7d22\u5f15\uff0c\u540e12\u4f4d\u4ee3\u8868\u7684\u610f\u4e49\u5982\u4e0b\uff1a + 11 + 10 + 9 + 8 + 7 + 6 + 5 + 4 + 3 + 2 + 1 + 0 + | Avail | G | PS | D | A | PCD | PWT | US | RW | P | +--------------------------------------------------------+ | 000 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | +--------------------------------------------------------+ P : 0 \u8868\u793a\u6b64\u9875\u4e0d\u5728\u7269\u7406\u5185\u5b58\u4e2d\uff0c1 \u8868\u793a\u6b64\u9875\u5728\u7269\u7406\u5185\u5b58\u4e2d RW : 0 \u8868\u793a\u53ea\u8bfb\uff0c1 \u8868\u793a\u53ef\u8bfb\u53ef\u5199\uff08\u8981\u914d\u5408 US \u4f4d\uff09 US : 0 \u8868\u793a\u7279\u6743\u7ea7\u9875\u9762\uff0c1 \u8868\u793a\u666e\u901a\u6743\u9650\u9875\u9762 PWT : 1 \u8868\u793a\u5199\u8fd9\u4e2a\u9875\u9762\u65f6\u76f4\u63a5\u5199\u5165\u5185\u5b58\uff0c0 \u8868\u793a\u5148\u5199\u5230\u7f13\u5b58\u4e2d PCD : 1 \u8868\u793a\u8be5\u9875\u7981\u7528\u7f13\u5b58\u673a\u5236\uff0c0 \u8868\u793a\u542f\u7528\u7f13\u5b58 A : \u5f53\u8be5\u9875\u88ab\u521d\u59cb\u5316\u65f6\u4e3a 0\uff0c\u4e00\u4f46\u8fdb\u884c\u8fc7\u8bfb/\u5199\u5219\u7f6e\u4e3a 1 D : \u810f\u9875\u6807\u8bb0\uff08\u8fd9\u91cc\u5c31\u4e0d\u505a\u5177\u4f53\u4ecb\u7ecd\u4e86\uff09 PS : 0 \u8868\u793a\u9875\u9762\u5927\u5c0f\u4e3a 4KB\uff0c1 \u8868\u793a\u9875\u9762\u5927\u5c0f\u4e3a 4MB G : 1 \u8868\u793a\u9875\u9762\u4e3a\u5171\u4eab\u9875\u9762\uff08\u8fd9\u91cc\u5c31\u4e0d\u505a\u5177\u4f53\u4ecb\u7ecd\u4e86\uff09 Avail : 3 \u4f4d\u4fdd\u7559\u4f4d \u901a\u8fc7\u4e0a\u9762\u7684\u9875\u8868\u53ef\u4ee5\u770b\u51fa\uff0c\u5728KERNBASE\u5230KERNBASE+4M\u4e4b\u95f4\u7684\u865a\u62df\u5730\u5740\u5bf9\u5e94\u7684\u9875\u8868\u8bb0\u5f55\u7684\u57fa\u5730\u5740\u662f0,\u90a3\u4e48\u8fd9\u4e00\u6bb5\u7684\u201c\u7269\u7406\u5730\u5740=\u865a\u62df\u5730\u5740-KERNBASE\u201d\u4e0e\u524d\u9762V2P_WO\u7684\u8ba1\u7b97\u76f8\u540c\u3002\u800c\u57280\u52304M\u4e4b\u95f4\u7684\u865a\u62df\u5730\u5740\u5bf9\u5e94\u7684\u9875\u8868\u8bb0\u5f55\u7684\u57fa\u5730\u5740\u4e5f\u662f0\uff0c\u6240\u4ee5\u8fd9\u4e00\u6bb5\u7684\u865a\u62df\u5730\u5740\u4e0e\u7269\u7406\u5730\u5740\u76f8\u540c\u3002 \u8fd9\u6837\u4fdd\u8bc1\u4e86\u5728\u5206\u9875\u673a\u5236\u5f00\u542f\u7684\u60c5\u51b5\u4e0b\u5185\u6838\u4e5f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u4f46\u4e5f\u9650\u5236\u4e86\u5185\u6838\u6700\u591a\u53ea\u80fd\u4f7f\u7528 4MB \u7684\u5185\u5b58\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u73b0\u5728\u7684\u5185\u6838\u6765\u8bf4 4MB \u8db3\u591f\u4e86\u3002 \u8bbe\u7f6e\u5185\u6838\u6808\u9876\u4f4d\u7f6e # Set up the stack pointer. movl $(stack + KSTACKSIZE), %esp .... .comm stack, KSTACKSIZE \u8fd9\u91cc\u901a\u8fc7 .comm \u5728\u5185\u6838 bbs \u6bb5\u5f00\u8f9f\u4e86\u4e00\u6bb5 KSTACKSIZE = 4096 = 4KB \u6b64\u65f6\u5185\u6838\u7684\u5185\u5b58\u5e03\u5c40\u5982\u4e0b\uff1a \u5185\u6838\u521d\u59cb\u5316 \u5230\u8fd9\u91cc\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u6b63\u5e38\u8bbf\u95ee\u865a\u62df\u5185\u5b58\u800c\u4e0d\u9700\u8981\u624b\u5de5\u8f6c\u6362\u4e86\uff0c\u6700\u540e\u5c31\u662f\u8fdb\u5165main\u51fd\u6570\uff0c\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u5185\u6838\u521d\u59cb\u5316\u7684\u5de5\u4f5c\u3002 # Jump to main(), and switch to executing at # high addresses. The indirect call is needed because # the assembler produces a PC-relative instruction # for a direct jump. mov $main, %eax jmp *%eax","title":"Entry kernel"},{"location":"entry_%20kernel/#_1","text":"\u5728boot loader \u52a0\u8f7d\u5b8c\u5185\u6838\u540e\uff0c\u901a\u8fc7elf header\u7684e_entry\u8fdb\u5165\u5185\u6838\u7684\u5165\u53e3 ((void (*)(void)) (ELFHDR->e_entry))(); \u8fd9\u4e2a\u5165\u53e3\u5728'entry.S'\u6587\u4ef6\u4e2d\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5b8c\u6210\u7684\u529f\u80fd\u662f\u5f00\u542f\u5206\u9875\u6a21\u5f0f\uff0c\u5e76\u544a\u8bc9CPU\u9875\u8868\u7684\u5730\u5740\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\u56e0\u4e3a\u6211\u4eec\u7684\u8fd0\u884c\u7684\u4ee3\u7801\u662f\u9762\u5411\u865a\u62df\u5730\u5740\u7684\uff0c\u4f46\u662f\u5728\u5f00\u542f\u5206\u9875\u6a21\u5f0f\u4e4b\u524d\uff0c\u8fd9\u4e9b\u865a\u62df\u5730\u5740\u90fd\u8fd8\u662f\u65e0\u6548\u7684\uff0c\u6240\u4ee5\u8981\u628a\u865a\u62df\u5730\u5740\u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740\uff0c\u8fd9\u91cc\u7684\u7269\u7406\u5b9e\u9645\u662f\u7ebf\u6027\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u524d\u9762\u5728 boot loader \u4e2d\u8bb2\u5230\u768432\u4f4d\u5bfb\u5740\u7684\u6bb5\u4fdd\u62a4\u6a21\u5f0f\uff0c\u8fd9\u91cc\u7684\u7ebf\u6027\u5730\u5740\u7b49\u4e8e\u7269\u7406\u5730\u5740\u3002V2P_WO \u5c31\u662f\u5b9e\u73b0\u865a\u62df\u5730\u5740\u5411\u7269\u7406\u5730\u5740\u8f6c\u6362\u7684\u4e00\u4e2a\u5b8f\u3002\u770b\u4e00\u4e0bV2P_WO \u7684\u5b9e\u73b0\u4ee3\u7801 #define V2P_WO(x) ((x) - KERNBASE) \u5373\uff0c\u7269\u7406\u5730\u5740=\u865a\u62df\u5730\u5740-KERNBASE\u3002\u4e3a\u4ec0\u4e48\u4f1a\u662f\u8fd9\u6837\u54ea\uff0c\u5b9e\u9645\u4e0a\u5728boot loader\u7684\u8bb2\u89e3\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u901a\u8fc7\u547d\u4ee4\u2018readelf -l kernel\u2019\u5206\u6790\u8fc7kernel elf\u6587\u4ef6\u7684Program Headers $ readelf -l kernel Elf file type is EXEC (Executable file) Entry point 0x10000c There are 3 program headers, starting at offset 52 Program Headers: Type Offset VirtAddr PhysAddr FileSiz MemSiz Flg Align LOAD 0x001000 0x80100000 0x00100000 0x07aab 0x07aab R E 0x1000 LOAD 0x009000 0x80108000 0x00108000 0x02516 0x0d4a8 RW 0x1000 GNU_STACK 0x000000 0x00000000 0x00000000 0x00000 0x00000 RWE 0x10 Section to Segment mapping: Segment Sections... 00 .text .rodata 01 .data .bss 02 \u5728\u8fd9\u91cc\u53ef\u4ee5\u53d1\u73b0\u4e24\u4e2a\u53ef\u4ee5load\u7684\u6bb5\u7684\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u5dee\u4e860x80000000\uff0c\u6b63\u662fKERNBASE\u7684\u503c\u3002\u5b9e\u9645\u4e0a\u865a\u62df\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u7684\u4f4d\u7f6e\u90fd\u662f\u5728kernel.ld\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u7684 SECTIONS { /* Link the kernel at this address: \".\" means the current address */ /* Must be equal to KERNLINK */ . = 0x80100000; .text : AT(0x100000) { *(.text .stub .text.* .gnu.linkonce.t.*) } ...... }","title":"\u8fd0\u884c\u5185\u6838"},{"location":"entry_%20kernel/#4mb","text":"\u8fd9\u662f\u901a\u8fc7\u8bbe\u7f6e\u5bc4\u5b58\u5668 cr4 \u7684 PSE \u4f4d\u6765\u5b8c\u6210\u7684\u3002cr4 \u5bc4\u5b58\u5668\u662f\u4e2a 32 \u4f4d\u7684\u5bc4\u5b58\u5668\u76ee\u524d\u53ea\u7528\u5230\u4f4e 21 \u4f4d\uff0c\u6bcf\u4e00\u4f4d\u7684\u81f3\u4f4d\u90fd\u63a7\u5236\u7740\u4e00\u4e9b\u529f\u80fd\u7684\u72b6\u6001\uff0c\u6240\u4ee5 cr4 \u5bc4\u5b58\u5668\u53c8\u53eb\u505a\u63a7\u5236\u5bc4\u5b58\u5668\u3002 PSE \u4f4d\u662f cr4 \u63a7\u5236\u5bc4\u5b58\u5668\u7684\u7b2c 5 \u4f4d\uff0c\u5f53\u8be5\u4f4d\u7f6e\u4e3a 1 \u65f6\u8868\u793a\u5185\u5b58\u9875\u5927\u5c0f\u4e3a 4MB\uff0c\u5f53\u7f6e\u4e3a 0 \u65f6\u8868\u793a\u5185\u5b58\u9875\u5927\u5c0f\u4e3a 4KB\u3002 # Turn on page size extension for 4Mbyte pages movl %cr4, %eax orl $(CR4_PSE), %eax movl %eax, %cr4 cr3 \u5bc4\u5b58\u5668\u4e2d\u4fdd\u5b58\u7740\u9875\u8868\u6240\u5728\u7684\u5185\u5b58\u7269\u7406\u5730\u5740 # Set page directory movl $(V2P_WO(entrypgdir)), %eax movl %eax, %cr3 cr0\u63a7\u5236\u5206\u9875\u6a21\u5f0f\u7684\u5f00\u542f\uff0c\uff08\u5728boot loader\u4e2d\u8bb2\u8fc7\uff09\u3002 # Turn on paging. movl %cr0, %eax orl $(CR0_PG|CR0_WP), %eax movl %eax, %cr0 \u9875\u8868entrypgdir\u7684\u4ee3\u7801\u5982\u4e0b\uff1a // The boot page table used in entry.S and entryother.S. // Page directories (and page tables) must start on page boundaries, // hence the __aligned__ attribute. // PTE_PS in a page directory entry enables 4Mbyte pages. __attribute__((__aligned__(PGSIZE))) pde_t entrypgdir[NPDENTRIES] = { // Map VA's [0, 4MB) to PA's [0, 4MB) [0] = (0) | PTE_P | PTE_W | PTE_PS, // Map VA's [KERNBASE, KERNBASE+4MB) to PA's [0, 4MB) [KERNBASE>>PDXSHIFT] = (0) | PTE_P | PTE_W | PTE_PS, }; \u6bcf\u6761\u9875\u8868\u7684\u8bb0\u5f55\u662f32\u4f4d\u5927\u5c0f\uff0c\u8fd9\u662f\u4e2a\u53ea\u6709\u4e00\u7ea7\u7684\u9875\u9762\uff0c\u6240\u4ee5\u5b83\u7684\u524d20\u4f4d\u662f\u9875\u8868\u7d22\u5f15\uff0c\u540e12\u4f4d\u4ee3\u8868\u7684\u610f\u4e49\u5982\u4e0b\uff1a + 11 + 10 + 9 + 8 + 7 + 6 + 5 + 4 + 3 + 2 + 1 + 0 + | Avail | G | PS | D | A | PCD | PWT | US | RW | P | +--------------------------------------------------------+ | 000 | 0 | 1 | 0 | 0 | 0 | 0 | 0 | 1 | 1 | +--------------------------------------------------------+ P : 0 \u8868\u793a\u6b64\u9875\u4e0d\u5728\u7269\u7406\u5185\u5b58\u4e2d\uff0c1 \u8868\u793a\u6b64\u9875\u5728\u7269\u7406\u5185\u5b58\u4e2d RW : 0 \u8868\u793a\u53ea\u8bfb\uff0c1 \u8868\u793a\u53ef\u8bfb\u53ef\u5199\uff08\u8981\u914d\u5408 US \u4f4d\uff09 US : 0 \u8868\u793a\u7279\u6743\u7ea7\u9875\u9762\uff0c1 \u8868\u793a\u666e\u901a\u6743\u9650\u9875\u9762 PWT : 1 \u8868\u793a\u5199\u8fd9\u4e2a\u9875\u9762\u65f6\u76f4\u63a5\u5199\u5165\u5185\u5b58\uff0c0 \u8868\u793a\u5148\u5199\u5230\u7f13\u5b58\u4e2d PCD : 1 \u8868\u793a\u8be5\u9875\u7981\u7528\u7f13\u5b58\u673a\u5236\uff0c0 \u8868\u793a\u542f\u7528\u7f13\u5b58 A : \u5f53\u8be5\u9875\u88ab\u521d\u59cb\u5316\u65f6\u4e3a 0\uff0c\u4e00\u4f46\u8fdb\u884c\u8fc7\u8bfb/\u5199\u5219\u7f6e\u4e3a 1 D : \u810f\u9875\u6807\u8bb0\uff08\u8fd9\u91cc\u5c31\u4e0d\u505a\u5177\u4f53\u4ecb\u7ecd\u4e86\uff09 PS : 0 \u8868\u793a\u9875\u9762\u5927\u5c0f\u4e3a 4KB\uff0c1 \u8868\u793a\u9875\u9762\u5927\u5c0f\u4e3a 4MB G : 1 \u8868\u793a\u9875\u9762\u4e3a\u5171\u4eab\u9875\u9762\uff08\u8fd9\u91cc\u5c31\u4e0d\u505a\u5177\u4f53\u4ecb\u7ecd\u4e86\uff09 Avail : 3 \u4f4d\u4fdd\u7559\u4f4d \u901a\u8fc7\u4e0a\u9762\u7684\u9875\u8868\u53ef\u4ee5\u770b\u51fa\uff0c\u5728KERNBASE\u5230KERNBASE+4M\u4e4b\u95f4\u7684\u865a\u62df\u5730\u5740\u5bf9\u5e94\u7684\u9875\u8868\u8bb0\u5f55\u7684\u57fa\u5730\u5740\u662f0,\u90a3\u4e48\u8fd9\u4e00\u6bb5\u7684\u201c\u7269\u7406\u5730\u5740=\u865a\u62df\u5730\u5740-KERNBASE\u201d\u4e0e\u524d\u9762V2P_WO\u7684\u8ba1\u7b97\u76f8\u540c\u3002\u800c\u57280\u52304M\u4e4b\u95f4\u7684\u865a\u62df\u5730\u5740\u5bf9\u5e94\u7684\u9875\u8868\u8bb0\u5f55\u7684\u57fa\u5730\u5740\u4e5f\u662f0\uff0c\u6240\u4ee5\u8fd9\u4e00\u6bb5\u7684\u865a\u62df\u5730\u5740\u4e0e\u7269\u7406\u5730\u5740\u76f8\u540c\u3002 \u8fd9\u6837\u4fdd\u8bc1\u4e86\u5728\u5206\u9875\u673a\u5236\u5f00\u542f\u7684\u60c5\u51b5\u4e0b\u5185\u6838\u4e5f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u4f46\u4e5f\u9650\u5236\u4e86\u5185\u6838\u6700\u591a\u53ea\u80fd\u4f7f\u7528 4MB \u7684\u5185\u5b58\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u73b0\u5728\u7684\u5185\u6838\u6765\u8bf4 4MB \u8db3\u591f\u4e86\u3002","title":"\u5f00\u542f 4MB \u5185\u5b58\u5206\u9875\u652f\u6301"},{"location":"entry_%20kernel/#_2","text":"# Set up the stack pointer. movl $(stack + KSTACKSIZE), %esp .... .comm stack, KSTACKSIZE \u8fd9\u91cc\u901a\u8fc7 .comm \u5728\u5185\u6838 bbs \u6bb5\u5f00\u8f9f\u4e86\u4e00\u6bb5 KSTACKSIZE = 4096 = 4KB \u6b64\u65f6\u5185\u6838\u7684\u5185\u5b58\u5e03\u5c40\u5982\u4e0b\uff1a","title":"\u8bbe\u7f6e\u5185\u6838\u6808\u9876\u4f4d\u7f6e"},{"location":"entry_%20kernel/#_3","text":"\u5230\u8fd9\u91cc\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u6b63\u5e38\u8bbf\u95ee\u865a\u62df\u5185\u5b58\u800c\u4e0d\u9700\u8981\u624b\u5de5\u8f6c\u6362\u4e86\uff0c\u6700\u540e\u5c31\u662f\u8fdb\u5165main\u51fd\u6570\uff0c\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u5185\u6838\u521d\u59cb\u5316\u7684\u5de5\u4f5c\u3002 # Jump to main(), and switch to executing at # high addresses. The indirect call is needed because # the assembler produces a PC-relative instruction # for a direct jump. mov $main, %eax jmp *%eax","title":"\u5185\u6838\u521d\u59cb\u5316"},{"location":"file_system/","text":"\u6587\u4ef6\u7cfb\u7edf \u901a\u8fc7xv6\u7684\u5728qemu\u4e2d\u7684\u542f\u52a8\u547d\u4ee4 qemu-system-i386 -serial mon:stdio -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 2 -m 512 \u53ef\u4ee5\u770b\u5230\uff0cxv6\u8bbe\u7f6e\u4e86\u4e24\u5757\u786c\u76d8\uff0c\u4e00\u5757index=0\u662f\u5b58\u50a8\u7cfb\u7edf\u5185\u6838xv6.img, \u5b9e\u9645\u4e0a\u8fd9\u5757\u786c\u76d8\u6ca1\u6709\u6587\u4ef6\u7cfb\u7edf\uff0c\u5c31\u662f\u5355\u7eaf\u7684\u628aboot loader\u548ckernel\u6587\u4ef6\u9010\u4e2a\u5b57\u8282\u62f7\u8d1d\u8fdb\u6765\u7684\u3002\u53e6\u4e00\u5757index=1\uff0c\u8fd9\u4e00\u5757\u662f\u6709\u6587\u4ef6\u7cfb\u7edf\u7684\uff0c\u5e76\u4e14\u6587\u4ef6\u7cfb\u7edf\u5b58\u50a8\u7684\u662fuser programe\uff0c\u8fd9\u5757\u786c\u76d8\u7684\u521d\u59cb\u6570\u636e\u662f\u7531mkfs.c\u751f\u6210\u7684. \u786c\u76d8\u5e03\u5c40 xv6\u7684\u6587\u4ef6\u7cfb\u7edf\u5728\u786c\u76d8\u4e0a\u7684\u5e03\u5c40\u5982\u4e0b \u7b2c\u4e00\u6247\u533aboot\u6ca1\u6709\u7528\u5230\uff0csuper, log, inodes, bit map \u662f\u6587\u4ef6\u7cfb\u7edf\u7684\u5143\u6570\u636e\u533a\u6bb5\u3002 data\u662f\u6587\u4ef6\u7cfb\u7edf\u7684data block\u533a\u6bb5\u3002 super\uff1a\u8bb0\u5f55\u786c\u76d8\u7684\u6574\u4f53\u72b6\u6001\uff0c\u5305\u62ec\uff1a\u4ee5\u6570\u636e\u5757\u4e2a\u6570\u4e3a\u8ba1\u91cf\u7684\u786c\u76d8\u7684\u603b\u5927\u5c0f\uff0cdata \u533a\u6bb5\u4e2d data blocks\u7684\u4e2a\u6570\uff0cinodes\u533a\u6bb5\u4e2dinode\u7684\u4e2a\u6570, log\u533a\u6bb5\u7684\u6570\u636e\u5757\u7684\u4e2a\u6570\uff0c\u8fd8\u6709\u8fd9\u51e0\u4e2a\u533a\u6bb5\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002 log : \u505acrash recovery\u7528\u7684\u6570\u636e\u5757 inodes: \u6bcf\u4e2ainode\u5bf9\u5e94\u4e00\u4e2a\u6587\u4ef6\uff0c\u6587\u4ef6\u7c7b\u578b\u53ef\u80fd\u662f\u6587\u4ef6/\u76ee\u5f55/\u8bbe\u5907\uff0cinode\u91cc\u8bb0\u5f55\u4e86\u6587\u4ef6\u7c7b\u578b\uff0c\u6587\u4ef6\u5927\u5c0f\uff0c\u4ee5\u53ca\u5b58\u653e\u6587\u4ef6\u5185\u5bb9\u7684\u6570\u636e\u76d8\u5757\u5730\u5740\u7f16\u53f7\u7b49\u3002\u5982\u679cinode\u662f\u76ee\u5f55\u7c7b\u578b\uff0c\u6587\u4ef6\u5185\u5bb9\u5757\u91cc\u5b58\u653e\u7684\u5c31\u662f\u8be5\u76ee\u5f55\u6240\u5305\u542b\u7684\u6587\u4ef6\u8bb0\u5f55\uff0c\u6bcf\u6761\u6587\u4ef6\u8bb0\u5f55\u5305\u542b\u6587\u4ef6\u7684inode\u7f16\u53f7\u548c\u6587\u4ef6\u540d\u79f0\u7b49\u3002 bit map: \u662f\u6807\u8bb0\u6bcf\u4e2a\u6570\u636e\u76d8\u5757\u662f\u5426\u88ab\u5360\u7528\u3002","title":"\u6587\u4ef6\u7cfb\u7edf"},{"location":"file_system/#_1","text":"\u901a\u8fc7xv6\u7684\u5728qemu\u4e2d\u7684\u542f\u52a8\u547d\u4ee4 qemu-system-i386 -serial mon:stdio -drive file=fs.img,index=1,media=disk,format=raw -drive file=xv6.img,index=0,media=disk,format=raw -smp 2 -m 512 \u53ef\u4ee5\u770b\u5230\uff0cxv6\u8bbe\u7f6e\u4e86\u4e24\u5757\u786c\u76d8\uff0c\u4e00\u5757index=0\u662f\u5b58\u50a8\u7cfb\u7edf\u5185\u6838xv6.img, \u5b9e\u9645\u4e0a\u8fd9\u5757\u786c\u76d8\u6ca1\u6709\u6587\u4ef6\u7cfb\u7edf\uff0c\u5c31\u662f\u5355\u7eaf\u7684\u628aboot loader\u548ckernel\u6587\u4ef6\u9010\u4e2a\u5b57\u8282\u62f7\u8d1d\u8fdb\u6765\u7684\u3002\u53e6\u4e00\u5757index=1\uff0c\u8fd9\u4e00\u5757\u662f\u6709\u6587\u4ef6\u7cfb\u7edf\u7684\uff0c\u5e76\u4e14\u6587\u4ef6\u7cfb\u7edf\u5b58\u50a8\u7684\u662fuser programe\uff0c\u8fd9\u5757\u786c\u76d8\u7684\u521d\u59cb\u6570\u636e\u662f\u7531mkfs.c\u751f\u6210\u7684.","title":"\u6587\u4ef6\u7cfb\u7edf"},{"location":"file_system/#_2","text":"xv6\u7684\u6587\u4ef6\u7cfb\u7edf\u5728\u786c\u76d8\u4e0a\u7684\u5e03\u5c40\u5982\u4e0b \u7b2c\u4e00\u6247\u533aboot\u6ca1\u6709\u7528\u5230\uff0csuper, log, inodes, bit map \u662f\u6587\u4ef6\u7cfb\u7edf\u7684\u5143\u6570\u636e\u533a\u6bb5\u3002 data\u662f\u6587\u4ef6\u7cfb\u7edf\u7684data block\u533a\u6bb5\u3002 super\uff1a\u8bb0\u5f55\u786c\u76d8\u7684\u6574\u4f53\u72b6\u6001\uff0c\u5305\u62ec\uff1a\u4ee5\u6570\u636e\u5757\u4e2a\u6570\u4e3a\u8ba1\u91cf\u7684\u786c\u76d8\u7684\u603b\u5927\u5c0f\uff0cdata \u533a\u6bb5\u4e2d data blocks\u7684\u4e2a\u6570\uff0cinodes\u533a\u6bb5\u4e2dinode\u7684\u4e2a\u6570, log\u533a\u6bb5\u7684\u6570\u636e\u5757\u7684\u4e2a\u6570\uff0c\u8fd8\u6709\u8fd9\u51e0\u4e2a\u533a\u6bb5\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002 log : \u505acrash recovery\u7528\u7684\u6570\u636e\u5757 inodes: \u6bcf\u4e2ainode\u5bf9\u5e94\u4e00\u4e2a\u6587\u4ef6\uff0c\u6587\u4ef6\u7c7b\u578b\u53ef\u80fd\u662f\u6587\u4ef6/\u76ee\u5f55/\u8bbe\u5907\uff0cinode\u91cc\u8bb0\u5f55\u4e86\u6587\u4ef6\u7c7b\u578b\uff0c\u6587\u4ef6\u5927\u5c0f\uff0c\u4ee5\u53ca\u5b58\u653e\u6587\u4ef6\u5185\u5bb9\u7684\u6570\u636e\u76d8\u5757\u5730\u5740\u7f16\u53f7\u7b49\u3002\u5982\u679cinode\u662f\u76ee\u5f55\u7c7b\u578b\uff0c\u6587\u4ef6\u5185\u5bb9\u5757\u91cc\u5b58\u653e\u7684\u5c31\u662f\u8be5\u76ee\u5f55\u6240\u5305\u542b\u7684\u6587\u4ef6\u8bb0\u5f55\uff0c\u6bcf\u6761\u6587\u4ef6\u8bb0\u5f55\u5305\u542b\u6587\u4ef6\u7684inode\u7f16\u53f7\u548c\u6587\u4ef6\u540d\u79f0\u7b49\u3002 bit map: \u662f\u6807\u8bb0\u6bcf\u4e2a\u6570\u636e\u76d8\u5757\u662f\u5426\u88ab\u5360\u7528\u3002","title":"\u786c\u76d8\u5e03\u5c40"},{"location":"interrups_process/","text":"\u4e2d\u65ad\u5904\u7406 \u4e2d\u65ad\u7684\u4e09\u79cd\u7c7b\u578b \u7cfb\u7edf\u4e2d\u65ad\u7684\u53d1\u751f\u5206\u4e3a\u4e09\u79cd\u60c5\u51b5\uff1a \u7b2c\u4e00\u79cd Systems calls\uff08\u7cfb\u7edf\u8c03\u7528\uff09, \u5373\u7528\u6237\u7a0b\u5e8f\u5411\u5185\u6838\u53d1\u8d77\u4e00\u4e2a\u7cfb\u7edf\u670d\u52a1\u7533\u8bf7\uff0c\u770b\u8d77\u6765\u7c7b\u4f3c\u4e00\u4e2a\u65b9\u6cd5\u8c03\u7528\uff0c\u6bd4\u5982sleep, write\u3002 \u7b2c\u4e8c\u79cd exceptions\uff08\u8f6f\u4ef6\u5f02\u5e38\uff09, \u4e5f\u5c31\u662f\u5f53\u7a0b\u5e8f\u6267\u884c\u4e86\u4e00\u4e2a\u975e\u6cd5\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u8bbf\u95ee\u4e00\u4e2a\u9875\u8868\u8bb0\u5f55\u91cc\u6839\u672c\u4e0d\u5b58\u5728\u5185\u5b58\u3002 \u7b2c\u4e09\u79cd interrupts\uff08\u786c\u4ef6\u4e2d\u65ad\uff09\uff0c\u5373\u4e00\u4e2a\u8bbe\u5907\u4ea7\u751f\u4e00\u4e2a\u9700\u8981\u64cd\u4f5c\u7cfb\u7edf\u5173\u6ce8\u7684\u4fe1\u53f7\uff0c\u4f8b\u5982\u65f6\u949f\u82af\u7247\u6bcf\u9694100 msec \u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad\u4fe1\u53f7\u4ee5\u5141\u8bb8\u5185\u6838\u5b9e\u73b0\u4e00\u4e2a\u5206\u65f6\u7cfb\u7edf\u3002\u518d\u6bd4\u5982\u5f53\u786c\u76d8\u5b8c\u6210\u4e86\u4e00\u4e2a\u6570\u636e\u5757\u7684\u8bfb\u53d6\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad\u544a\u8bc9\u7cfb\u7edf\u8fd9\u4e2a\u5757\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u53ef\u4ee5\u4e2a\u53d6\u6570\u636e\u4e86\u3002 \u5176\u4e2d\u786c\u4ef6\u4e2d\u65ad\u53c8\u53ef\u4ee5\u5206\u4e3a\u5904\u7406\u5668\u4e0a\u7684\u672c\u5730\u9ad8\u7ea7\u53ef\u7f16\u7a0b\u4e2d\u65ad\u63a7\u5236\u5668\u4ea7\u751f\u7684\uff08Local APIC \uff09\u548c \u4e3b\u677f\u4e0a\u7684\u8f93\u5165\u8f93\u51fa\u9ad8\u7ea7\u53ef\u7f16\u7a0b\u4e2d\u65ad\u63a7\u5236\u5668\u4ea7\u751f\u7684\uff08I/O APIC \uff09, \u8fd9\u4e24\u79cd\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u521d\u59cb\u5316\u4ee3\u7801\u5206\u522b\u662flapic.c\u4e2d\u7684lapicinit\u65b9\u6cd5\u548cioapic.c\u4e2d\u7684ioapicinit\u65b9\u6cd5\u3002\u5176\u4e2dLocal APIC\u4ea7\u751f\u7684\u4e2d\u65ad\u5c31\u4ea4\u7ed9APIC\u6240\u5728\u7684processor\u5904\u7406\uff0c\u800cI/O APIC\u4ea7\u751f\u7684\u4e2d\u65ad\u4f1a\u7531PIC\u603b\u7ebf\u7ecf\u8fc7\u5317\u6865\u5230\u5904\u7406\u5668\u7cfb\u7edf\u603b\u7ebf\u8def\u7531\u5230\u64cd\u4f5c\u7cfb\u7edf\u6307\u5b9a\u7684processor\u4e0a\u5904\u7406\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5728\u4e0a\u9762\u8bb2\u8ff0\u7684\u4e2d\u65ad\u7c7b\u578b\u4e2d\uff0c Systems calls\u662f\u4e0e\u5f53\u524d\u8fdb\u7a0b\u6709\u5173\u7cfb\u7684\uff0c\u5b83\u662f\u7531\u5f53\u524d\u8fdb\u7a0b\u53d1\u8d77\u7684\u8fdb\u800c\u4ea7\u751f\u7684\u3002\u800cinterrupts\u672a\u5fc5\u4e0e\u5f53\u524d\u8fdb\u7a0b\u6709\u5173\u8054\uff0c\u6bd4\u5982\u4e00\u4e2a\u78c1\u76d8\u4f1a\u5728\u5b83\u5b8c\u6210\u6570\u636e\u5757\u7684\u83b7\u53d6\u540e\u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad\uff0c\u4f46\u662f\u5728\u8fd9\u4e2a\u4e2d\u65ad\u53d1\u751f\u7684\u65f6\u5019\u5176\u4ed6\u7684\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\u3002 \u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868\uff08IDT\uff09 x86\u6709256\u4e2a\u4e0d\u540c\u7684\u4e2d\u65ad\uff0c\u5176\u4e2d\u7f16\u53f70-31\u4ee3\u8868\u8f6f\u4ef6\u5f02\u5e38\uff0c32-63\u4ee3\u8868\u786c\u4ef6\u4e2d\u65ad\uff0c64\u4ee3\u8868\u7cfb\u7edf\u8c03\u7528\u3002\u6bcf\u4e2a\u4e2d\u65ad\u6240\u5bf9\u5e94\u5904\u7406\u5165\u53e3\u5b9a\u4e49\u5728\u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868\uff08IDT\uff09\u91cc\u3002\u5728xv6\u7cfb\u7edf\u4e2dIDT\u5728Tvinit\u4e2d\u521d\u59cb\u5316\uff0c\u4f8b\u5982\u5bf9\u5e94\u7cfb\u7edf\u8c03\u7528\u7684\u90a3\u6761\u4e2d\u65ad\u8bb0\u5f55\u7684\u4ee3\u7801\u5982\u4e0b SETGATE(idt[T_SYSCALL], 1, SEG_KCODE<<3, vectors[T_SYSCALL], DPL_USER); \u800cSETGATE\u8fd9\u4e2a\u5b8f\u63a5\u53e3\u5b9a\u4e49\u5982\u4e0b // Set up a normal interrupt/trap gate descriptor. // - istrap: 1 for a trap (= exception) gate, 0 for an interrupt gate. // interrupt gate clears FL_IF, trap gate leaves FL_IF alone // - sel: Code segment selector for interrupt/trap handler // - off: Offset in code segment for interrupt/trap handler // - dpl: Descriptor Privilege Level - // the privilege level required for software to invoke // this interrupt/trap gate explicitly using an int instruction. SETGATE(gate, istrap, sel, off, d) \u5176\u4e2d\u7684sel\u548coff\u7ed9\u51fa\u4e86\u5904\u7406\u4e2d\u65ad\u65f6%cs \u548c %eip\u4e24\u5bc4\u5b58\u5668\u4f1a\u88ab\u8d4b\u4e88\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e24\u4e2a\u503c\u51b3\u5b9a\u4e86\u4e2d\u65ad\u5904\u7406\u7684\u5165\u53e3\u3002 d\u4e5f\u5c31\u662fDPL\u4ee3\u8868\u8fd9\u6761\u4e2d\u65ad\u7684\u7279\u6743\u7ea7\u522b\uff0cx86\u67090\uff08\u6700\u9ad8\uff09\u52303\uff08\u6700\u4f4e\uff094\u4e2a\u7279\u6743\u7ea7\u522b\uff0c\u800c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u53ea\u7528\u5230\u4e24\u4e2a\u7ea7\u522b0\u548c3\uff0c\u5206\u522b\u4ee3\u8868\u5185\u6838\u6a21\u5f0f\u548c\u7528\u6237\u6a21\u5f0f\u3002\u5f53\u524d\u8fd0\u884c\u7684\u6307\u4ee4\u7684\u7279\u6743\u7ea7\u522b\u662f\u88ab\u5b58\u653e\u5728%cs\u5bc4\u5b58\u5668\u7684\u4f4e\u4e09\u4f4d\u4e2d\uff0c\u7528CPL\u4ee3\u8868\u3002\u5982\u679cCPL\u7684\u7279\u6743\u7ea7\u522b\u5c0f\u4e8eDPL\uff0c\u90a3\u4e48\u7cfb\u7edf\u662f\u4e0d\u5141\u8bb8int\u4ee3\u7801\u4ea7\u751f\u8fd9\u4e2a\u4e2d\u65ad\u7684\uff0c\u5982\u679c\u5c1d\u8bd5\u8fd9\u6837\u505a\u5219\u4f1a\u4ea7\u751f\u4e00\u4e2a\u7f16\u53f7\u4e3a13\u7684\u5f02\u5e38\u4e2d\u65ad\u3002\u5728\u4e0a\u9762\u4ee3\u7801\u4e2d\u7cfb\u7edf\u8c03\u7528\u4e2d\u65ad\u63cf\u8ff0\u7b26\u7684\u7279\u6743\u7ea7\u522b\u662fDPL_USER\uff0c\u8fd9\u6837\u5c31\u5141\u8bb8\u7528\u6237\u7a0b\u5e8f\u4f7f\u7528int\u6307\u4ee4\u4ea7\u751f\u8fd9\u4e2a\u4e2d\u65ad\u3002 istrap\u5982\u679c\u662f0\uff0c IF \u6807\u8bb0\u4f1a\u88ab\u6e05\u9664\uff0c\u963b\u6b62\u5176\u4ed6\u4e2d\u65ad\u4ea7\u751f\u3002\u5982\u679c\u662f1\uff0cIF\u6807\u8bb0\u4f1a\u4fdd\u6301\u539f\u6765\u7684\u503c\u3002 task status segment \u5f53\u7cfb\u7edf\u8fdb\u7a0b\u7531\u7528\u6237\u6a21\u5f0f\u8fdb\u5165\u5185\u6838\u6a21\u5f0f\u540e\uff0c\u8fdb\u7a0b\u539f\u6765\u5728\u7528\u6237\u6a21\u5f0f\u4f7f\u7528\u7684\u6808\u4e5f\u5e94\u8be5\u5207\u6362\u4e3a\u53e6\u8be5\u8fdb\u7a0b\u5728\u5185\u6838\u6a21\u5f0f\u4e0b\u4f7f\u7528\u7684\u6808\uff0c\u6240\u4ee5CPU\u8981\u77e5\u9053\u5185\u6838\u6808\u6240\u5728\u7684\u5730\u5740\uff0c\u8fd9\u4e2a\u5730\u5740\u8bb0\u5f55\u5728\u4e00\u4e2a task status segment\u4e2d\uff0c\u800ctask status segment\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\u8bb0\u5f55\u5728 global descriptor table (GDT)\u4e2d\u7684\u4e00\u6761descriptor\u4e2d\uff0c\u8fd9\u6761\u8bb0\u5f55\u7684\u7d22\u5f15\u662fSEG_TSS\uff0c\u8fd9\u4e2a\u7d22\u5f15\u7531ltr\u6307\u4ee4\u4fdd\u5b58\u5230tr\u5bc4\u5b58\u5668\u7684segment selector\u90e8\u5206\u4e2d\u3002\u5b8c\u6210segment selector\u7684\u4fdd\u5b58\u540e\uff0c\u5904\u7406\u5668\u5c31\u7528\u8fd9\u4e2asegment selector\u5b9a\u4f4d\u5230 global descriptor table\uff08GDT\uff09\u4e2d\u7684TSS\u6bb5\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u6bb5\u7684 segment limit \u548c base address\u4e5f\u4fdd\u5b58\u5230tr\u5bc4\u5b58\u5668\u7684\u5176\u4ed6\u90e8\u5206\u4e2d\u3002 task status segment \u7684\u8bbe\u7f6e\u662f\u5728switchuvm\u4e2d\u5b8c\u6210\u7684\u3002 \u4e2d\u65ad\u53d1\u751f\u540e\u7cfb\u7edf\u505a\u4e86\u90a3\u4e9b\u4e8b\u60c5\uff1f \u4fdd\u5b58\u5bc4\u5b58\u5668\u72b6\u6001 \u5f53\u4e00\u4e2a\u4e2d\u65ad\u53d1\u751f\u65f6CPU\u4f1a\u505a\u4e0b\u9762\u51e0\u4ef6\u4e8b\u60c5\uff1a 1) \u5982\u679c\u5904\u7406\u5668\u662f\u5728\u7528\u6237\u6a21\u5f0f\u4e0b\u8fd0\u884c\u90a3\u4e48\u5b83\u9996\u5148\u8981\u628a\u7528\u6237\u6808\u5207\u6362\u4e3a\u8be5\u8fdb\u7a0b\u7684\u5185\u6838\u6808\uff0c\u5177\u4f53\u5c31\u662f\u4ecetask register \u8bb0\u5f55\u7684task status \u5bf9\u8c61\u4e2d\u52a0\u8f7d%esp \u548c %ss\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u628a\u65e7\u7684%ss \u548c %esp\u4fdd\u5b58\u5230\u8fd9\u4e2a\u65b0\u6808\u4e2d\u3002\u5982\u679c\u4e2d\u65ad\u53d1\u751f\u5728\u5185\u6838\u6a21\u5f0f\u4e0b\uff0c\u8fd9\u4e00\u5207\u90fd\u4e0d\u4f1a\u53d1\u751f\u3002 2) \u5904\u7406\u5668\u628a%eflags, %cs, \u548c %eip\u4fdd\u5b58\u5230\u6808\u4e2d\u3002\u6709\u4e00\u4e9b\u4e2d\u65ad\u6bd4\u5982 page fault \uff0c\u5904\u7406\u5668\u8fd8\u4f1a\u4fdd\u5b58\u4e00\u4e2aerror\u5b57\u3002 3) \u5904\u7406\u5668\u4ece\u76f8\u5173\u7684\u4e2d\u65ad\u8868\uff08IDT\uff09\u627e\u5230\u4e2d\u65ad\u5904\u7406\u7684\u5165\u53e3\u5e76\u8df3\u8f6c\u5230\u76f8\u5e94\u7684\u5904\u7406\u5165\u53e3\u5904\uff0c\u5177\u4f53\u5c31\u662f\u4ece\u76f8\u5173IDT\u8bb0\u5f55\u4e2d\u52a0\u8f7d%eip \u548c %cs\uff0c\u8fdb\u5165\u5185\u6838\u6a21\u5f0f\u8fd0\u884c\u3002 \u4ee5\u4e0a\u662f\u4e2d\u65ad\u53d1\u751f\u540eCPU\u81ea\u52a8\u505a\u7684\u4e8b\u60c5\uff0c\u5728\u8fdb\u5165\u4e2d\u65ad\u5904\u7406\u5165\u53e3\u540e\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u8981\u505a\u7684\u4e8b\u60c5\u4e86\u3002\u4e2d\u65ad\u5165\u53e3\u5b9a\u4e49\u5728vectors.S\u4e2d\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662f\u7531vectors.pl \u8fd9\u4e2a Perl \u811a\u672c\u751f\u6210\u7684\u3002vectors.S\u91cc\u9762\u6bcf\u4e00\u6761\u8bb0\u5f55\u5bf9\u5e94\u4e00\u4e2a\u4e2d\u65ad\u5904\u7406\u7684\u5165\u53e3\uff0c256\u4e2a\u4e2d\u65ad\u5c31\u6709256\u6761\u8bb0\u5f55\u3002 4) \u6bcf\u6761\u4e2d\u65ad\u5904\u7406\u7684\u5165\u53e3\u4ee3\u7801\u505a\u7684\u4e8b\u60c5\u57fa\u672c\u76f8\u540c\uff0cpush\u4e00\u4e2a\u9519\u8bef\u4ee3\u78010\uff08\u5982\u679c\u4e2d\u65ad\u672c\u8eab\u5c31\u4f1a\u4ea7\u751f\u9519\u8bef\u4ee3\u7801\uff0c\u4f8b\u5982\u4e0a\u9762\u8bb2\u5230\u7684CPU\u81ea\u52a8\u505a\u7684\u4e8b\u60c5\u7684\u7b2c\u4e8c\u6b65\u4e2d\u7684page falt, \u8fd9\u91cc\u5c31\u4f1a\u7701\u7565\u8fd9\u4e2apush\uff0c\u8fd9\u4e48\u505a\u662f\u4e3a\u4e86\u4fdd\u6301\u6808\u7684\u4e00\u81f4\u6027\uff09\u548c\u4e00\u4e2a\u4e2d\u65ad\u7f16\u53f7\uff0c\u7136\u540e\u8df3\u8f6c\u5230alltraps\u3002 5) Alltraps \u7ee7\u7eed\u4fdd\u5b58\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u5b83\u628a%ds, %es, %fs\uff0c%gs push\u5230\u6808\u4e2d\uff0c\u7136\u540epushal\u628a\u901a\u7528\u5bc4\u5b58\u5668(%eax, %ecx, %edx, %ebx, %oes, %ebp, %esi, %edi)\u90fdpush\u5230\u6808\u4e2d\u3002 \u4e0a\u9762\u4e00\u7cfb\u5217\u7684\u6b65\u9aa4\u5c31\u662f\u6784\u9020\u4e86\u4e00\u4e2atrapframe\u3002trapframe \u5728 kernel stack\u4e2d\u7684\u5e03\u5c40\u5982\u4e0b\uff1a \u5728\u8fdb\u5165\u4e2d\u65ad\u5904\u7406\u5668\u4e4b\u524dCPU\u5df2\u7ecf\u8bbe\u7f6e\u4e86%cs\u548c%ss\u6bb5\u5bc4\u5b58\u5668\uff0calltraps \u7ee7\u7eed\u5b8c\u6210 %ds \u548c %es \u6bb5\u5bc4\u5b58\u5668\u7684\u8bbe\u7f6e\u3002 \u6267\u884ctrap\u51fd\u6570 \u4e0a\u9762\u5df2\u7ecf\u628a\u4e2d\u65ad\u53d1\u751f\u65f6CPU\u5bc4\u5b58\u5668\u7684\u72b6\u6001\u4fdd\u5b58\u5230\u4e86trapframe\u4e2d\uff0c\u4e0b\u9762\u5c31\u8981\u5f00\u59cb\u6267\u884ctrap\u51fd\u6570\u4e86\u3002\u4e0a\u9762\u5df2\u7ecf\u8bf4\u660e\u4e86\u6b64\u65f6\u7684\u6808\u9876\u6307\u9488%esp\u5c31\u662f\u6307\u5411trapframe\uff0c\u56e0\u6b64\u628a%esp push\u5230\u6808\u4e2d\u4f5c\u4e3atrap\u51fd\u6570\u7684\u53c2\u6570, \u3002\u7136\u540e\u8c03\u7528trap\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u662f\u7528\u6765\u5904\u7406\u5404\u79cd\u7c7b\u578b\u7684\u4e2d\u65ad,\u6839\u636e\u4e2d\u65ad\u7f16\u53f7\u5206\u914d\u7ed9\u5177\u4f53\u7684Interupte handler \u53bb\u5904\u7406\uff0c\u5728trap\u51fd\u6570\u5b8c\u6210\u540e\u8fd4\u56de\uff0c\u63a5\u7740alltraps \u901a\u8fc7\u6267\u884c addl $4, %esp \u628atrap\u51fd\u6570\u53c2\u6570\u4ece\u6808\u4e2d\u79fb\u9664\u3002\u6700\u540e\u7cfb\u7edf\u53c8\u8981\u901a\u8fc7trapret\u8fd4\u56de\u5230\u4e2d\u65ad\u539f\u6765\u53d1\u751f\u7684\u5730\u65b9\u7ee7\u7eed\u6267\u884c\u4e86\uff0c\u5177\u4f53\u5c31\u662f\u4ecetrapframe\u4e2d\u4f9d\u6b21\u6062\u590d\u5404\u4e2a\u5bc4\u5b58\u5668\u7684\u72b6\u6001\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5df2\u7ecf\u5728\u201c\u7b2c\u4e00\u4e2a\u7528\u6237\u8fdb\u7a0b\u201d\u90a3\u4e00\u7ae0\u7684\u8fd4\u56de\u7528\u6237\u7a0b\u5e8f\u7684\u65f6\u5019\u634b\u8fc7\u4e86\u3002 \u503c\u5f97\u4e00\u63d0\u7684\u662f\u5982\u679c\u4e2d\u65ad\u53d1\u751f\u5728\u7cfb\u7edf\u6b63\u5728\u5185\u6838\u6a21\u5f0f\u4e0b\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u4e0d\u4f1a\u8fdb\u884c\u6808\u7684\u5207\u6362\u4e5f\u4e0d\u4f1a\u4fdd\u5b58\u6808\u7684\u6bb5\u5bc4\u5b58\u5668%ss\u548c\u6808\u6307\u9488\u5bc4\u5b58\u5668%esp\uff0ctrapret\u7684iret\u6307\u4ee4\u9875\u65e0\u9700\u6062\u590d%esp\u548c%ss\u3002","title":"\u4e2d\u65ad\u5904\u7406\u6d41\u7a0b"},{"location":"interrups_process/#_1","text":"","title":"\u4e2d\u65ad\u5904\u7406"},{"location":"interrups_process/#_2","text":"\u7cfb\u7edf\u4e2d\u65ad\u7684\u53d1\u751f\u5206\u4e3a\u4e09\u79cd\u60c5\u51b5\uff1a \u7b2c\u4e00\u79cd Systems calls\uff08\u7cfb\u7edf\u8c03\u7528\uff09, \u5373\u7528\u6237\u7a0b\u5e8f\u5411\u5185\u6838\u53d1\u8d77\u4e00\u4e2a\u7cfb\u7edf\u670d\u52a1\u7533\u8bf7\uff0c\u770b\u8d77\u6765\u7c7b\u4f3c\u4e00\u4e2a\u65b9\u6cd5\u8c03\u7528\uff0c\u6bd4\u5982sleep, write\u3002 \u7b2c\u4e8c\u79cd exceptions\uff08\u8f6f\u4ef6\u5f02\u5e38\uff09, \u4e5f\u5c31\u662f\u5f53\u7a0b\u5e8f\u6267\u884c\u4e86\u4e00\u4e2a\u975e\u6cd5\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u8bbf\u95ee\u4e00\u4e2a\u9875\u8868\u8bb0\u5f55\u91cc\u6839\u672c\u4e0d\u5b58\u5728\u5185\u5b58\u3002 \u7b2c\u4e09\u79cd interrupts\uff08\u786c\u4ef6\u4e2d\u65ad\uff09\uff0c\u5373\u4e00\u4e2a\u8bbe\u5907\u4ea7\u751f\u4e00\u4e2a\u9700\u8981\u64cd\u4f5c\u7cfb\u7edf\u5173\u6ce8\u7684\u4fe1\u53f7\uff0c\u4f8b\u5982\u65f6\u949f\u82af\u7247\u6bcf\u9694100 msec \u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad\u4fe1\u53f7\u4ee5\u5141\u8bb8\u5185\u6838\u5b9e\u73b0\u4e00\u4e2a\u5206\u65f6\u7cfb\u7edf\u3002\u518d\u6bd4\u5982\u5f53\u786c\u76d8\u5b8c\u6210\u4e86\u4e00\u4e2a\u6570\u636e\u5757\u7684\u8bfb\u53d6\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad\u544a\u8bc9\u7cfb\u7edf\u8fd9\u4e2a\u5757\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u53ef\u4ee5\u4e2a\u53d6\u6570\u636e\u4e86\u3002 \u5176\u4e2d\u786c\u4ef6\u4e2d\u65ad\u53c8\u53ef\u4ee5\u5206\u4e3a\u5904\u7406\u5668\u4e0a\u7684\u672c\u5730\u9ad8\u7ea7\u53ef\u7f16\u7a0b\u4e2d\u65ad\u63a7\u5236\u5668\u4ea7\u751f\u7684\uff08Local APIC \uff09\u548c \u4e3b\u677f\u4e0a\u7684\u8f93\u5165\u8f93\u51fa\u9ad8\u7ea7\u53ef\u7f16\u7a0b\u4e2d\u65ad\u63a7\u5236\u5668\u4ea7\u751f\u7684\uff08I/O APIC \uff09, \u8fd9\u4e24\u79cd\u4e2d\u65ad\u63a7\u5236\u5668\u7684\u521d\u59cb\u5316\u4ee3\u7801\u5206\u522b\u662flapic.c\u4e2d\u7684lapicinit\u65b9\u6cd5\u548cioapic.c\u4e2d\u7684ioapicinit\u65b9\u6cd5\u3002\u5176\u4e2dLocal APIC\u4ea7\u751f\u7684\u4e2d\u65ad\u5c31\u4ea4\u7ed9APIC\u6240\u5728\u7684processor\u5904\u7406\uff0c\u800cI/O APIC\u4ea7\u751f\u7684\u4e2d\u65ad\u4f1a\u7531PIC\u603b\u7ebf\u7ecf\u8fc7\u5317\u6865\u5230\u5904\u7406\u5668\u7cfb\u7edf\u603b\u7ebf\u8def\u7531\u5230\u64cd\u4f5c\u7cfb\u7edf\u6307\u5b9a\u7684processor\u4e0a\u5904\u7406\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5728\u4e0a\u9762\u8bb2\u8ff0\u7684\u4e2d\u65ad\u7c7b\u578b\u4e2d\uff0c Systems calls\u662f\u4e0e\u5f53\u524d\u8fdb\u7a0b\u6709\u5173\u7cfb\u7684\uff0c\u5b83\u662f\u7531\u5f53\u524d\u8fdb\u7a0b\u53d1\u8d77\u7684\u8fdb\u800c\u4ea7\u751f\u7684\u3002\u800cinterrupts\u672a\u5fc5\u4e0e\u5f53\u524d\u8fdb\u7a0b\u6709\u5173\u8054\uff0c\u6bd4\u5982\u4e00\u4e2a\u78c1\u76d8\u4f1a\u5728\u5b83\u5b8c\u6210\u6570\u636e\u5757\u7684\u83b7\u53d6\u540e\u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad\uff0c\u4f46\u662f\u5728\u8fd9\u4e2a\u4e2d\u65ad\u53d1\u751f\u7684\u65f6\u5019\u5176\u4ed6\u7684\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\u3002","title":"\u4e2d\u65ad\u7684\u4e09\u79cd\u7c7b\u578b"},{"location":"interrups_process/#idt","text":"x86\u6709256\u4e2a\u4e0d\u540c\u7684\u4e2d\u65ad\uff0c\u5176\u4e2d\u7f16\u53f70-31\u4ee3\u8868\u8f6f\u4ef6\u5f02\u5e38\uff0c32-63\u4ee3\u8868\u786c\u4ef6\u4e2d\u65ad\uff0c64\u4ee3\u8868\u7cfb\u7edf\u8c03\u7528\u3002\u6bcf\u4e2a\u4e2d\u65ad\u6240\u5bf9\u5e94\u5904\u7406\u5165\u53e3\u5b9a\u4e49\u5728\u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868\uff08IDT\uff09\u91cc\u3002\u5728xv6\u7cfb\u7edf\u4e2dIDT\u5728Tvinit\u4e2d\u521d\u59cb\u5316\uff0c\u4f8b\u5982\u5bf9\u5e94\u7cfb\u7edf\u8c03\u7528\u7684\u90a3\u6761\u4e2d\u65ad\u8bb0\u5f55\u7684\u4ee3\u7801\u5982\u4e0b SETGATE(idt[T_SYSCALL], 1, SEG_KCODE<<3, vectors[T_SYSCALL], DPL_USER); \u800cSETGATE\u8fd9\u4e2a\u5b8f\u63a5\u53e3\u5b9a\u4e49\u5982\u4e0b // Set up a normal interrupt/trap gate descriptor. // - istrap: 1 for a trap (= exception) gate, 0 for an interrupt gate. // interrupt gate clears FL_IF, trap gate leaves FL_IF alone // - sel: Code segment selector for interrupt/trap handler // - off: Offset in code segment for interrupt/trap handler // - dpl: Descriptor Privilege Level - // the privilege level required for software to invoke // this interrupt/trap gate explicitly using an int instruction. SETGATE(gate, istrap, sel, off, d) \u5176\u4e2d\u7684sel\u548coff\u7ed9\u51fa\u4e86\u5904\u7406\u4e2d\u65ad\u65f6%cs \u548c %eip\u4e24\u5bc4\u5b58\u5668\u4f1a\u88ab\u8d4b\u4e88\u7684\u503c\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e24\u4e2a\u503c\u51b3\u5b9a\u4e86\u4e2d\u65ad\u5904\u7406\u7684\u5165\u53e3\u3002 d\u4e5f\u5c31\u662fDPL\u4ee3\u8868\u8fd9\u6761\u4e2d\u65ad\u7684\u7279\u6743\u7ea7\u522b\uff0cx86\u67090\uff08\u6700\u9ad8\uff09\u52303\uff08\u6700\u4f4e\uff094\u4e2a\u7279\u6743\u7ea7\u522b\uff0c\u800c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u53ea\u7528\u5230\u4e24\u4e2a\u7ea7\u522b0\u548c3\uff0c\u5206\u522b\u4ee3\u8868\u5185\u6838\u6a21\u5f0f\u548c\u7528\u6237\u6a21\u5f0f\u3002\u5f53\u524d\u8fd0\u884c\u7684\u6307\u4ee4\u7684\u7279\u6743\u7ea7\u522b\u662f\u88ab\u5b58\u653e\u5728%cs\u5bc4\u5b58\u5668\u7684\u4f4e\u4e09\u4f4d\u4e2d\uff0c\u7528CPL\u4ee3\u8868\u3002\u5982\u679cCPL\u7684\u7279\u6743\u7ea7\u522b\u5c0f\u4e8eDPL\uff0c\u90a3\u4e48\u7cfb\u7edf\u662f\u4e0d\u5141\u8bb8int\u4ee3\u7801\u4ea7\u751f\u8fd9\u4e2a\u4e2d\u65ad\u7684\uff0c\u5982\u679c\u5c1d\u8bd5\u8fd9\u6837\u505a\u5219\u4f1a\u4ea7\u751f\u4e00\u4e2a\u7f16\u53f7\u4e3a13\u7684\u5f02\u5e38\u4e2d\u65ad\u3002\u5728\u4e0a\u9762\u4ee3\u7801\u4e2d\u7cfb\u7edf\u8c03\u7528\u4e2d\u65ad\u63cf\u8ff0\u7b26\u7684\u7279\u6743\u7ea7\u522b\u662fDPL_USER\uff0c\u8fd9\u6837\u5c31\u5141\u8bb8\u7528\u6237\u7a0b\u5e8f\u4f7f\u7528int\u6307\u4ee4\u4ea7\u751f\u8fd9\u4e2a\u4e2d\u65ad\u3002 istrap\u5982\u679c\u662f0\uff0c IF \u6807\u8bb0\u4f1a\u88ab\u6e05\u9664\uff0c\u963b\u6b62\u5176\u4ed6\u4e2d\u65ad\u4ea7\u751f\u3002\u5982\u679c\u662f1\uff0cIF\u6807\u8bb0\u4f1a\u4fdd\u6301\u539f\u6765\u7684\u503c\u3002","title":"\u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868\uff08IDT\uff09"},{"location":"interrups_process/#task-status-segment","text":"\u5f53\u7cfb\u7edf\u8fdb\u7a0b\u7531\u7528\u6237\u6a21\u5f0f\u8fdb\u5165\u5185\u6838\u6a21\u5f0f\u540e\uff0c\u8fdb\u7a0b\u539f\u6765\u5728\u7528\u6237\u6a21\u5f0f\u4f7f\u7528\u7684\u6808\u4e5f\u5e94\u8be5\u5207\u6362\u4e3a\u53e6\u8be5\u8fdb\u7a0b\u5728\u5185\u6838\u6a21\u5f0f\u4e0b\u4f7f\u7528\u7684\u6808\uff0c\u6240\u4ee5CPU\u8981\u77e5\u9053\u5185\u6838\u6808\u6240\u5728\u7684\u5730\u5740\uff0c\u8fd9\u4e2a\u5730\u5740\u8bb0\u5f55\u5728\u4e00\u4e2a task status segment\u4e2d\uff0c\u800ctask status segment\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\u8bb0\u5f55\u5728 global descriptor table (GDT)\u4e2d\u7684\u4e00\u6761descriptor\u4e2d\uff0c\u8fd9\u6761\u8bb0\u5f55\u7684\u7d22\u5f15\u662fSEG_TSS\uff0c\u8fd9\u4e2a\u7d22\u5f15\u7531ltr\u6307\u4ee4\u4fdd\u5b58\u5230tr\u5bc4\u5b58\u5668\u7684segment selector\u90e8\u5206\u4e2d\u3002\u5b8c\u6210segment selector\u7684\u4fdd\u5b58\u540e\uff0c\u5904\u7406\u5668\u5c31\u7528\u8fd9\u4e2asegment selector\u5b9a\u4f4d\u5230 global descriptor table\uff08GDT\uff09\u4e2d\u7684TSS\u6bb5\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u6bb5\u7684 segment limit \u548c base address\u4e5f\u4fdd\u5b58\u5230tr\u5bc4\u5b58\u5668\u7684\u5176\u4ed6\u90e8\u5206\u4e2d\u3002 task status segment \u7684\u8bbe\u7f6e\u662f\u5728switchuvm\u4e2d\u5b8c\u6210\u7684\u3002","title":"task status segment"},{"location":"interrups_process/#_3","text":"","title":"\u4e2d\u65ad\u53d1\u751f\u540e\u7cfb\u7edf\u505a\u4e86\u90a3\u4e9b\u4e8b\u60c5\uff1f"},{"location":"interrups_process/#_4","text":"\u5f53\u4e00\u4e2a\u4e2d\u65ad\u53d1\u751f\u65f6CPU\u4f1a\u505a\u4e0b\u9762\u51e0\u4ef6\u4e8b\u60c5\uff1a 1) \u5982\u679c\u5904\u7406\u5668\u662f\u5728\u7528\u6237\u6a21\u5f0f\u4e0b\u8fd0\u884c\u90a3\u4e48\u5b83\u9996\u5148\u8981\u628a\u7528\u6237\u6808\u5207\u6362\u4e3a\u8be5\u8fdb\u7a0b\u7684\u5185\u6838\u6808\uff0c\u5177\u4f53\u5c31\u662f\u4ecetask register \u8bb0\u5f55\u7684task status \u5bf9\u8c61\u4e2d\u52a0\u8f7d%esp \u548c %ss\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u628a\u65e7\u7684%ss \u548c %esp\u4fdd\u5b58\u5230\u8fd9\u4e2a\u65b0\u6808\u4e2d\u3002\u5982\u679c\u4e2d\u65ad\u53d1\u751f\u5728\u5185\u6838\u6a21\u5f0f\u4e0b\uff0c\u8fd9\u4e00\u5207\u90fd\u4e0d\u4f1a\u53d1\u751f\u3002 2) \u5904\u7406\u5668\u628a%eflags, %cs, \u548c %eip\u4fdd\u5b58\u5230\u6808\u4e2d\u3002\u6709\u4e00\u4e9b\u4e2d\u65ad\u6bd4\u5982 page fault \uff0c\u5904\u7406\u5668\u8fd8\u4f1a\u4fdd\u5b58\u4e00\u4e2aerror\u5b57\u3002 3) \u5904\u7406\u5668\u4ece\u76f8\u5173\u7684\u4e2d\u65ad\u8868\uff08IDT\uff09\u627e\u5230\u4e2d\u65ad\u5904\u7406\u7684\u5165\u53e3\u5e76\u8df3\u8f6c\u5230\u76f8\u5e94\u7684\u5904\u7406\u5165\u53e3\u5904\uff0c\u5177\u4f53\u5c31\u662f\u4ece\u76f8\u5173IDT\u8bb0\u5f55\u4e2d\u52a0\u8f7d%eip \u548c %cs\uff0c\u8fdb\u5165\u5185\u6838\u6a21\u5f0f\u8fd0\u884c\u3002 \u4ee5\u4e0a\u662f\u4e2d\u65ad\u53d1\u751f\u540eCPU\u81ea\u52a8\u505a\u7684\u4e8b\u60c5\uff0c\u5728\u8fdb\u5165\u4e2d\u65ad\u5904\u7406\u5165\u53e3\u540e\u5c31\u662f\u64cd\u4f5c\u7cfb\u7edf\u8981\u505a\u7684\u4e8b\u60c5\u4e86\u3002\u4e2d\u65ad\u5165\u53e3\u5b9a\u4e49\u5728vectors.S\u4e2d\uff0c\u8fd9\u4e2a\u6587\u4ef6\u662f\u7531vectors.pl \u8fd9\u4e2a Perl \u811a\u672c\u751f\u6210\u7684\u3002vectors.S\u91cc\u9762\u6bcf\u4e00\u6761\u8bb0\u5f55\u5bf9\u5e94\u4e00\u4e2a\u4e2d\u65ad\u5904\u7406\u7684\u5165\u53e3\uff0c256\u4e2a\u4e2d\u65ad\u5c31\u6709256\u6761\u8bb0\u5f55\u3002 4) \u6bcf\u6761\u4e2d\u65ad\u5904\u7406\u7684\u5165\u53e3\u4ee3\u7801\u505a\u7684\u4e8b\u60c5\u57fa\u672c\u76f8\u540c\uff0cpush\u4e00\u4e2a\u9519\u8bef\u4ee3\u78010\uff08\u5982\u679c\u4e2d\u65ad\u672c\u8eab\u5c31\u4f1a\u4ea7\u751f\u9519\u8bef\u4ee3\u7801\uff0c\u4f8b\u5982\u4e0a\u9762\u8bb2\u5230\u7684CPU\u81ea\u52a8\u505a\u7684\u4e8b\u60c5\u7684\u7b2c\u4e8c\u6b65\u4e2d\u7684page falt, \u8fd9\u91cc\u5c31\u4f1a\u7701\u7565\u8fd9\u4e2apush\uff0c\u8fd9\u4e48\u505a\u662f\u4e3a\u4e86\u4fdd\u6301\u6808\u7684\u4e00\u81f4\u6027\uff09\u548c\u4e00\u4e2a\u4e2d\u65ad\u7f16\u53f7\uff0c\u7136\u540e\u8df3\u8f6c\u5230alltraps\u3002 5) Alltraps \u7ee7\u7eed\u4fdd\u5b58\u5bc4\u5b58\u5668\u7684\u503c\uff0c\u5b83\u628a%ds, %es, %fs\uff0c%gs push\u5230\u6808\u4e2d\uff0c\u7136\u540epushal\u628a\u901a\u7528\u5bc4\u5b58\u5668(%eax, %ecx, %edx, %ebx, %oes, %ebp, %esi, %edi)\u90fdpush\u5230\u6808\u4e2d\u3002 \u4e0a\u9762\u4e00\u7cfb\u5217\u7684\u6b65\u9aa4\u5c31\u662f\u6784\u9020\u4e86\u4e00\u4e2atrapframe\u3002trapframe \u5728 kernel stack\u4e2d\u7684\u5e03\u5c40\u5982\u4e0b\uff1a \u5728\u8fdb\u5165\u4e2d\u65ad\u5904\u7406\u5668\u4e4b\u524dCPU\u5df2\u7ecf\u8bbe\u7f6e\u4e86%cs\u548c%ss\u6bb5\u5bc4\u5b58\u5668\uff0calltraps \u7ee7\u7eed\u5b8c\u6210 %ds \u548c %es \u6bb5\u5bc4\u5b58\u5668\u7684\u8bbe\u7f6e\u3002","title":"\u4fdd\u5b58\u5bc4\u5b58\u5668\u72b6\u6001"},{"location":"interrups_process/#trap","text":"\u4e0a\u9762\u5df2\u7ecf\u628a\u4e2d\u65ad\u53d1\u751f\u65f6CPU\u5bc4\u5b58\u5668\u7684\u72b6\u6001\u4fdd\u5b58\u5230\u4e86trapframe\u4e2d\uff0c\u4e0b\u9762\u5c31\u8981\u5f00\u59cb\u6267\u884ctrap\u51fd\u6570\u4e86\u3002\u4e0a\u9762\u5df2\u7ecf\u8bf4\u660e\u4e86\u6b64\u65f6\u7684\u6808\u9876\u6307\u9488%esp\u5c31\u662f\u6307\u5411trapframe\uff0c\u56e0\u6b64\u628a%esp push\u5230\u6808\u4e2d\u4f5c\u4e3atrap\u51fd\u6570\u7684\u53c2\u6570, \u3002\u7136\u540e\u8c03\u7528trap\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u662f\u7528\u6765\u5904\u7406\u5404\u79cd\u7c7b\u578b\u7684\u4e2d\u65ad,\u6839\u636e\u4e2d\u65ad\u7f16\u53f7\u5206\u914d\u7ed9\u5177\u4f53\u7684Interupte handler \u53bb\u5904\u7406\uff0c\u5728trap\u51fd\u6570\u5b8c\u6210\u540e\u8fd4\u56de\uff0c\u63a5\u7740alltraps \u901a\u8fc7\u6267\u884c addl $4, %esp \u628atrap\u51fd\u6570\u53c2\u6570\u4ece\u6808\u4e2d\u79fb\u9664\u3002\u6700\u540e\u7cfb\u7edf\u53c8\u8981\u901a\u8fc7trapret\u8fd4\u56de\u5230\u4e2d\u65ad\u539f\u6765\u53d1\u751f\u7684\u5730\u65b9\u7ee7\u7eed\u6267\u884c\u4e86\uff0c\u5177\u4f53\u5c31\u662f\u4ecetrapframe\u4e2d\u4f9d\u6b21\u6062\u590d\u5404\u4e2a\u5bc4\u5b58\u5668\u7684\u72b6\u6001\uff0c\u8fd9\u6bb5\u4ee3\u7801\u5df2\u7ecf\u5728\u201c\u7b2c\u4e00\u4e2a\u7528\u6237\u8fdb\u7a0b\u201d\u90a3\u4e00\u7ae0\u7684\u8fd4\u56de\u7528\u6237\u7a0b\u5e8f\u7684\u65f6\u5019\u634b\u8fc7\u4e86\u3002 \u503c\u5f97\u4e00\u63d0\u7684\u662f\u5982\u679c\u4e2d\u65ad\u53d1\u751f\u5728\u7cfb\u7edf\u6b63\u5728\u5185\u6838\u6a21\u5f0f\u4e0b\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u4e0d\u4f1a\u8fdb\u884c\u6808\u7684\u5207\u6362\u4e5f\u4e0d\u4f1a\u4fdd\u5b58\u6808\u7684\u6bb5\u5bc4\u5b58\u5668%ss\u548c\u6808\u6307\u9488\u5bc4\u5b58\u5668%esp\uff0ctrapret\u7684iret\u6307\u4ee4\u9875\u65e0\u9700\u6062\u590d%esp\u548c%ss\u3002","title":"\u6267\u884ctrap\u51fd\u6570"},{"location":"scheduler/","text":"CPU\u8c03\u5ea6\u7ebf\u7a0b \u4ece \u7cfb\u7edf\u542f\u52a8\u52a0\u8f7d\uff08boot loader\uff09--> entry.S --> main \u91cc\u7684\u4e00\u7cfb\u5217\u521d\u59cb\u5316 \uff0c\u6700\u540e\u5230scheduler\uff08\uff09\u8fd9\u662f\u6574\u4e2a\u7cfb\u7edf\u7684\u4e3b\u5e72\u3002scheduler\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u7ebf\u7a0b\uff0c\u6709\u72ec\u81ea\u7684\u6808\uff0c\u6bcf\u4e2aCPU\u90fd\u8fd0\u884c\u4e00\u4e2ascheduler\u3002scheduler\u6bcf\u8fd0\u884c\u4e00\u6b21\u5c31\u4f1a\u5c1d\u8bd5\u627e\u5230\u4e00\u4e2a\u72b6\u6001\u4e3aRUNNABLE\u7684\u8fdb\u7a0b\uff0c\u7136\u540e\u8ba9\u51faCPU\u7ed9\u8fd9\u4e2a\u8fdb\u7a0b\u8fd0\u884c\uff0c\u5177\u4f53\u5c31\u662f\u8c03\u7528swtch\u628a\u5f53\u524d\u7684scheduler\u7684\u7ebf\u7a0b\u72b6\u6001\u4fdd\u5b58\u5230\u5b83\u7684\u6808\u4e2d\uff0c\u7136\u540e\u628aCPU\u7684\u5bc4\u5b58\u5668\u8bbe\u7f6e\u4e3a\u8981\u8fd0\u884c\u7684\u8fdb\u7a0b\u4e4b\u524d\u5728\u5185\u6838\u6808\u4e2d\u4fdd\u5b58\u7684\u72b6\u6001\u3002\u5f53\u8fd9\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\u53c8\u8981\u51b3\u5b9a\u8ba9\u51faCPU\uff0c\u6bd4\u5982\u56e0\u4e3a\u65f6\u95f4\u4e2d\u65ad\u7684\u539f\u56e0\u8c03\u7528yield -> sched -> swtch \u8fd9\u4e00\u6b21\u7f6e\u6362\u4e0e\u524d\u9762\u90a3\u4e00\u6b21\u6b63\u597d\u76f8\u53cd\uff0c\u5148\u628a\u5f53\u524d\u8fdb\u7a0b\u7684\u72b6\u6001\u4fdd\u5b58\u5230\u8be5\u8fdb\u7a0b\u5185\u6838\u6808\u4e2d\uff0c\u7136\u540e\u628a\u524d\u9762\u4fdd\u5b58\u5230scheduler\u7ebf\u7a0b\u6808\u4e2d\u7684CPU\u5bc4\u5b58\u5668\u72b6\u6001\u6062\u590d\u5230CPU\u5bc4\u5b58\u5668\u4e2d\uff0cscheduler\u518d\u6b21\u83b7\u5f97CPU\u7ee7\u7eed\u5728\u4e0a\u4e00\u6b21\u8ba9\u51faCPU\u7684\u5730\u65b9\u6267\u884c\uff0c\u4e5f\u5c31\u662f\u7ee7\u7eedfor\u5faa\u73af\u5bfb\u627e\u4e0b\u4e00\u4e2a\u72b6\u6001\u4e3aRUNNABLE\u7684\u8fdb\u7a0b\uff0c\u7136\u540e\u91cd\u590d\u524d\u9762\u7684\u8fc7\u7a0b\u518d\u6b21\u8c03\u7528swtch\u628aCPU\u8ba9\u7ed9\u8fd9\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u3002 \u8fd9\u91cc\u9762\u7684\u91cd\u70b9\u5c31\u662fswtch\u65b9\u6cd5\u4e86\uff0c\u4e0b\u9762\u8be6\u7ec6\u5206\u6790swtch\u65b9\u6cd5\u3002 Context switching \u5982\u4e0a\u6240\u8ff0 switch \u7684\u529f\u80fd\u5c31\u662f \u628a\u5f53\u524d\u7ebf\u7a0b\u7684\u5bc4\u5b58\u5668\u72b6\u6001\u4fdd\u5b58\u5230\u65e7\u7ebf\u7a0b\u7684\u6808\u4e2d\uff0c\u628a\u65b0\u7ebf\u7a0b\u6808\u4e2d\u4e4b\u524d\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668\u72b6\u6001\u6062\u590d\u5230CPU\u5bc4\u5b58\u5668\u4e2d,\u4ee5\u5b9e\u73b0\u7ebf\u7a0b\u7684\u5207\u6362 \u3002switch\u7684\u4ee3\u7801\u5982\u4e0b\uff1a # Context switch # # void swtch(struct context **old, struct context *new); # # Save the current registers on the stack, creating # a struct context, and save its address in *old. # Switch stacks to new and pop previously-saved registers. .globl swtch swtch: movl 4(%esp), %eax // eax = old movl 8(%esp), %edx // edx = new # Save old callee-saved registers pushl %ebp pushl %ebx pushl %esi pushl %edi # Switch stacks movl %esp, (%eax) // *old = esp movl %edx, %esp // esp = new # Load new callee-saved registers popl %edi popl %esi popl %ebx popl %ebp ret \u5728\u8c03\u7528swtch\u51fd\u6570\u7684\u65f6\u5019\u6309\u7167x86\u7684\u60ef\u4f8b\u4f1a\u5148\u628a%eip\u4fdd\u5b58\u5230\u5f53\u524d\u6808\u4e2d,\u7136\u540e\u8df3\u8f6c\u5230swtch\u8fd9\u91cc\u3002\u63a5\u7740swtch\u7684\u56db\u4e2apushl\u547d\u4ee4\u7ee7\u7eed\u4fdd\u5b58callee-saved registers\u5230\u5f53\u524d\u6808\u4e2d\uff0c\u7136\u540e\u540e\u628a\u4fdd\u5b58\u4f4d\u7f6e\u4e5f\u5c31\u662f\u5f53\u524d\u6808\u6307\u9488%esp\u8bb0\u5f55\u5728\u5728*old \u4e2d\u3002 \u63a5\u7740\u628a\u65b0\u7684\u6808\u6307\u9488\u8d4b\u7ed9%esp, \u7136\u540e\u56db\u4e2apopl\u6307\u4ee4\u628a\u65b0\u6808\u4e2d\u4fdd\u5b58\u7684\u72b6\u6001\u503c\u6062\u590d\u5230\u5bc4\u5b58\u5668\u4e2d\uff0cret\u6307\u4ee4\u6062\u590d%eip\u5bc4\u5b58\u5668\u3002 %esp \u548c %eip\u7684\u6062\u590d\u610f\u5473\u7740CPU\u5207\u6362\u4e86\u6808\u548c\u6b63\u5728\u6267\u884c\u7684\u4ee3\u7801\u3002","title":"Scheduler"},{"location":"scheduler/#cpu","text":"\u4ece \u7cfb\u7edf\u542f\u52a8\u52a0\u8f7d\uff08boot loader\uff09--> entry.S --> main \u91cc\u7684\u4e00\u7cfb\u5217\u521d\u59cb\u5316 \uff0c\u6700\u540e\u5230scheduler\uff08\uff09\u8fd9\u662f\u6574\u4e2a\u7cfb\u7edf\u7684\u4e3b\u5e72\u3002scheduler\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u7ebf\u7a0b\uff0c\u6709\u72ec\u81ea\u7684\u6808\uff0c\u6bcf\u4e2aCPU\u90fd\u8fd0\u884c\u4e00\u4e2ascheduler\u3002scheduler\u6bcf\u8fd0\u884c\u4e00\u6b21\u5c31\u4f1a\u5c1d\u8bd5\u627e\u5230\u4e00\u4e2a\u72b6\u6001\u4e3aRUNNABLE\u7684\u8fdb\u7a0b\uff0c\u7136\u540e\u8ba9\u51faCPU\u7ed9\u8fd9\u4e2a\u8fdb\u7a0b\u8fd0\u884c\uff0c\u5177\u4f53\u5c31\u662f\u8c03\u7528swtch\u628a\u5f53\u524d\u7684scheduler\u7684\u7ebf\u7a0b\u72b6\u6001\u4fdd\u5b58\u5230\u5b83\u7684\u6808\u4e2d\uff0c\u7136\u540e\u628aCPU\u7684\u5bc4\u5b58\u5668\u8bbe\u7f6e\u4e3a\u8981\u8fd0\u884c\u7684\u8fdb\u7a0b\u4e4b\u524d\u5728\u5185\u6838\u6808\u4e2d\u4fdd\u5b58\u7684\u72b6\u6001\u3002\u5f53\u8fd9\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\u53c8\u8981\u51b3\u5b9a\u8ba9\u51faCPU\uff0c\u6bd4\u5982\u56e0\u4e3a\u65f6\u95f4\u4e2d\u65ad\u7684\u539f\u56e0\u8c03\u7528yield -> sched -> swtch \u8fd9\u4e00\u6b21\u7f6e\u6362\u4e0e\u524d\u9762\u90a3\u4e00\u6b21\u6b63\u597d\u76f8\u53cd\uff0c\u5148\u628a\u5f53\u524d\u8fdb\u7a0b\u7684\u72b6\u6001\u4fdd\u5b58\u5230\u8be5\u8fdb\u7a0b\u5185\u6838\u6808\u4e2d\uff0c\u7136\u540e\u628a\u524d\u9762\u4fdd\u5b58\u5230scheduler\u7ebf\u7a0b\u6808\u4e2d\u7684CPU\u5bc4\u5b58\u5668\u72b6\u6001\u6062\u590d\u5230CPU\u5bc4\u5b58\u5668\u4e2d\uff0cscheduler\u518d\u6b21\u83b7\u5f97CPU\u7ee7\u7eed\u5728\u4e0a\u4e00\u6b21\u8ba9\u51faCPU\u7684\u5730\u65b9\u6267\u884c\uff0c\u4e5f\u5c31\u662f\u7ee7\u7eedfor\u5faa\u73af\u5bfb\u627e\u4e0b\u4e00\u4e2a\u72b6\u6001\u4e3aRUNNABLE\u7684\u8fdb\u7a0b\uff0c\u7136\u540e\u91cd\u590d\u524d\u9762\u7684\u8fc7\u7a0b\u518d\u6b21\u8c03\u7528swtch\u628aCPU\u8ba9\u7ed9\u8fd9\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u3002 \u8fd9\u91cc\u9762\u7684\u91cd\u70b9\u5c31\u662fswtch\u65b9\u6cd5\u4e86\uff0c\u4e0b\u9762\u8be6\u7ec6\u5206\u6790swtch\u65b9\u6cd5\u3002","title":"CPU\u8c03\u5ea6\u7ebf\u7a0b"},{"location":"scheduler/#context-switching","text":"\u5982\u4e0a\u6240\u8ff0 switch \u7684\u529f\u80fd\u5c31\u662f \u628a\u5f53\u524d\u7ebf\u7a0b\u7684\u5bc4\u5b58\u5668\u72b6\u6001\u4fdd\u5b58\u5230\u65e7\u7ebf\u7a0b\u7684\u6808\u4e2d\uff0c\u628a\u65b0\u7ebf\u7a0b\u6808\u4e2d\u4e4b\u524d\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668\u72b6\u6001\u6062\u590d\u5230CPU\u5bc4\u5b58\u5668\u4e2d,\u4ee5\u5b9e\u73b0\u7ebf\u7a0b\u7684\u5207\u6362 \u3002switch\u7684\u4ee3\u7801\u5982\u4e0b\uff1a # Context switch # # void swtch(struct context **old, struct context *new); # # Save the current registers on the stack, creating # a struct context, and save its address in *old. # Switch stacks to new and pop previously-saved registers. .globl swtch swtch: movl 4(%esp), %eax // eax = old movl 8(%esp), %edx // edx = new # Save old callee-saved registers pushl %ebp pushl %ebx pushl %esi pushl %edi # Switch stacks movl %esp, (%eax) // *old = esp movl %edx, %esp // esp = new # Load new callee-saved registers popl %edi popl %esi popl %ebx popl %ebp ret \u5728\u8c03\u7528swtch\u51fd\u6570\u7684\u65f6\u5019\u6309\u7167x86\u7684\u60ef\u4f8b\u4f1a\u5148\u628a%eip\u4fdd\u5b58\u5230\u5f53\u524d\u6808\u4e2d,\u7136\u540e\u8df3\u8f6c\u5230swtch\u8fd9\u91cc\u3002\u63a5\u7740swtch\u7684\u56db\u4e2apushl\u547d\u4ee4\u7ee7\u7eed\u4fdd\u5b58callee-saved registers\u5230\u5f53\u524d\u6808\u4e2d\uff0c\u7136\u540e\u540e\u628a\u4fdd\u5b58\u4f4d\u7f6e\u4e5f\u5c31\u662f\u5f53\u524d\u6808\u6307\u9488%esp\u8bb0\u5f55\u5728\u5728*old \u4e2d\u3002 \u63a5\u7740\u628a\u65b0\u7684\u6808\u6307\u9488\u8d4b\u7ed9%esp, \u7136\u540e\u56db\u4e2apopl\u6307\u4ee4\u628a\u65b0\u6808\u4e2d\u4fdd\u5b58\u7684\u72b6\u6001\u503c\u6062\u590d\u5230\u5bc4\u5b58\u5668\u4e2d\uff0cret\u6307\u4ee4\u6062\u590d%eip\u5bc4\u5b58\u5668\u3002 %esp \u548c %eip\u7684\u6062\u590d\u610f\u5473\u7740CPU\u5207\u6362\u4e86\u6808\u548c\u6b63\u5728\u6267\u884c\u7684\u4ee3\u7801\u3002","title":"Context switching"},{"location":"scheduling/","text":"","title":"Scheduling"},{"location":"system_call/","text":"\u7cfb\u7edf\u8c03\u7528 \u7cfb\u7edf\u8c03\u7528\u7684\u7528\u6237\u63a5\u53e3 \u7528\u6237\u7a0b\u5e8f\u7cfb\u7edf\u8c03\u7528\u7684\u63a5\u53e3\u5728 user.h \u91cc\u5b9a\u4e49\uff0c\u5728usys.S\u91cc\u5b9e\u73b0\uff0c\u6bcf\u4e2a\u7cfb\u7edf\u8c03\u7528\u90fd\u7528\u4e00\u4e2a\u5b8f\u5b9e\u73b0 #define SYSCALL(name) \\ .globl name; \\ name: \\ movl $SYS_ ## name, %eax; \\ int $T_SYSCALL; \\ ret movl $SYS_ ## name, %eax; \u8fd9\u91cc\u7684\u201d##\u201c\u662f\u5b8f\u5b9a\u4e49\u91cc\u7528\u4e8e\u62fc\u63a5\u53d8\u91cf\u7528\u7684\uff0c\u8fd9\u6bb5\u4ee3\u7801\u662f\u628a\u7cfb\u7edf\u8c03\u7528\u7f16\u53f7\u8d4b\u503c\u7ed9%eax\uff0c\u7cfb\u7edf\u8c03\u7528\u7f16\u53f7\u662f\u7528\u6765\u6807\u8bc6\u5c06\u8981\u88ab\u8c03\u7528\u7684\u7cfb\u7edf\u670d\u52a1\u63a5\u53e3\u3002\u8fd8\u8bb0\u5f97\u5728\u201c\u4e2d\u65ad\u5904\u7406\u201d\u90a3\u4e00\u7ae0\uff0c\u4e2d\u65ad\u53d1\u751f\u540e\u6240\u6709\u5bc4\u5b58\u5668\u90fd\u4f1a\u88ab\u88ab\u4fdd\u5b58\u5230trapframe\u4e2d\uff0c\u800ceax\u4f5c\u4e3a\u5176\u4e2d\u4e4b\u4e00\u4f1a\u5728syscall\u90a3\u91cc\u4f7f\u7528\u5230\u3002 int $T_SYSCALL \u4ea7\u751f\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u4e2d\u65ad\uff0c\u8fd8\u8bb0\u5f97\u7cfb\u7edf\u8c03\u7528\u7684\u4e2d\u65ad\u7801\u5373T_SYSCALL\u662f64\u3002 \u7cfb\u7edf\u8c03\u7528\u7684\u6d41\u7a0b \u8fd9\u91cc\u4ee5exec\u4e3a\u4f8b\uff0c\u5f53\u7528\u6237\u7a0b\u5e8f\u6267\u884cexec\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u540e\uff0c\u4f1a\u6267\u884cusys.S\u91ccSYSCALL(exec)\u5b8f\u5b9a\u4e49\u7684\u4ee3\u7801,\u8fd9\u6bb5\u4ee3\u7801\u5728\u9884\u5904\u7406\u5b8c\u6210\u540e\u4f1a\u662f\u4e0b\u9762\u7684\u6837\u5b50 .globl exec; exec: movl $SYS_exec, %eax; int $T_SYSCALL; ret int $T_SYSCALL \u4ea7\u751f\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u4e2d\u65ad\uff0cCPU\u8fdb\u5165\u4e2d\u65ad\u5904\u7406\u7684\u6d41\u7a0b\uff0c\u5173\u4e8e\u4e2d\u65ad\u5904\u7406\u7684\u6d41\u7a0b\u53c2\u89c1\u524d\u4e00\u7ae0\u201c\u4e2d\u65ad\u5904\u7406\u201d\uff0c\u5728\u90a3\u4e00\u7ae0\u91cc\u8bb2\u4e86\u7cfb\u7edf\u5982\u4f55\u627e\u5230\u4e2d\u65ad\u5904\u7406\u7684\u5165\u53e3\uff0c\u4fdd\u5b58\u5f53\u524d\u8fdb\u7a0b\u72b6\u6001\uff0c\u6700\u540e\u8fdb\u5165trap\u51fd\u6570\uff0c\u8fd9\u91cc\u4e3b\u8981\u8bb2\u5728trap\u51fd\u6570\u91cc\u5173\u4e8e\u7cfb\u7edf\u8c03\u7528\u7684\u5904\u7406\u8fc7\u7a0b\u3002 \u5728trap\u51fd\u6570\u91cc\u901a\u8fc7\u4e2d\u65ad\u7f16\u53f7\uff08trapno\uff09\u5224\u65ad\u4e2d\u65ad\u7c7b\u578b\u662f\u7cfb\u7edf\u8c03\u7528\uff0c\u7136\u540e\u8c03\u7528syscall\u51fd\u6570\uff0c\u5728syscall\u51fd\u6570\u91cc\u53d6\u51fa\u4fdd\u5b58\u5728trapframe\u91cc\u7684eax\uff0c\u5373\u7cfb\u7edf\u8c03\u7528\u7f16\u53f7\u3002\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u7f16\u53f7\u5728\u7cfb\u7edf\u8c03\u7528\u5217\u8868\u4e2d\uff08syscalls[]\uff09\u7d22\u5f15\u5230\u76f8\u5e94\u7684\u7cfb\u7edf\u8c03\u7528\u670d\u52a1\u5373sys_exec\uff0c\u7136\u540e\u8c03\u7528sys_exec\u5e76\u5c06\u8fd4\u56de\u503c\u8d4b\u4e88trapfraem\u7684eax\uff0c\u5728\u7cfb\u7edf\u8c03\u7528\u8fd4\u56de\u65f6trapfraem\u7684eax\u505a\u4e3a\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\u4f1a\u88ab\u6062\u590d\u5230%eax\u5bc4\u5b58\u5668\u4e2d\u3002 \u83b7\u53d6\u7cfb\u7edf\u8c03\u7528\u53c2\u6570 \u5185\u6838\u91cc\u9762\u5b9e\u73b0\u7cfb\u7edf\u8c03\u7528\u670d\u52a1\u7684\u51fd\u6570\u6bd4\u5982sys_exec\uff0c\u8981\u83b7\u53d6\u7528\u6237\u7a0b\u5e8f\u4f20\u9012\u7684\u53c2\u6570\uff0c\u800c\u7528\u6237\u7a0b\u5e8f\u4f20\u9012\u7684\u53c2\u6570\u662f\u653e\u5728\u8fdb\u7a0b\u7684\u7528\u6237\u6808\u91cc\u7684\uff0c\u8fd9\u91cc\u7528\u6237\u6808\u7684\u6808\u9876\u6307\u9488\u4fdd\u5b58\u5728trapframe\u7684esp\u91cc\uff0c\u6808\u9876\u7684\u7b2c\u4e00\u4e2a\u503c\u662f\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u5730\u5740\uff0c\u4ece\u7b2c\u4e8c\u503c\u5f00\u59cb\u624d\u662f\u4f20\u9012\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u5730\u5740\u662f %esp+4 \uff0c \u7b2cn\u4e2a\u53c2\u6570\u7684\u5730\u5740\u662f %esp+4+4*n \u3002 \u7cfb\u7edf\u5b9e\u73b0\u4e86\u4e00\u7cfb\u5217\u7684\u8f85\u52a9\u51fd\u6570\u5982argint, argptr, argstr\u548cargfd \u5206\u522b\u53bb\u83b7\u53d6\u6574\u578b\uff0c\u6307\u9488\u578b\uff0c\u5b57\u7b26\u4e32\u578b\u548c\u6587\u4ef6\u63cf\u8ff0\u7b26\u578b\u7684\u7cfb\u7edf\u8c03\u7528\u53c2\u6570\u3002\u4f8b\u5982argint\u9996\u5148\u8ba1\u7b97\u7b2cn\u4e2a\u53c2\u6570\u7684\u5730\u5740\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u5730\u5740\u544a\u8bc9fetchint\uff0cfetchint\u53d6\u51fa\u8fd9\u4e2a\u5730\u5740\u4e0a\u7684int\u6570\u636e\u5e76\u62f7\u8d1d\u5230ip\u6307\u5b9a\u7684\u53d8\u91cf\u5730\u5740\u4e0a\u3002","title":"\u7cfb\u7edf\u8c03\u7528"},{"location":"system_call/#_1","text":"","title":"\u7cfb\u7edf\u8c03\u7528"},{"location":"system_call/#_2","text":"\u7528\u6237\u7a0b\u5e8f\u7cfb\u7edf\u8c03\u7528\u7684\u63a5\u53e3\u5728 user.h \u91cc\u5b9a\u4e49\uff0c\u5728usys.S\u91cc\u5b9e\u73b0\uff0c\u6bcf\u4e2a\u7cfb\u7edf\u8c03\u7528\u90fd\u7528\u4e00\u4e2a\u5b8f\u5b9e\u73b0 #define SYSCALL(name) \\ .globl name; \\ name: \\ movl $SYS_ ## name, %eax; \\ int $T_SYSCALL; \\ ret movl $SYS_ ## name, %eax; \u8fd9\u91cc\u7684\u201d##\u201c\u662f\u5b8f\u5b9a\u4e49\u91cc\u7528\u4e8e\u62fc\u63a5\u53d8\u91cf\u7528\u7684\uff0c\u8fd9\u6bb5\u4ee3\u7801\u662f\u628a\u7cfb\u7edf\u8c03\u7528\u7f16\u53f7\u8d4b\u503c\u7ed9%eax\uff0c\u7cfb\u7edf\u8c03\u7528\u7f16\u53f7\u662f\u7528\u6765\u6807\u8bc6\u5c06\u8981\u88ab\u8c03\u7528\u7684\u7cfb\u7edf\u670d\u52a1\u63a5\u53e3\u3002\u8fd8\u8bb0\u5f97\u5728\u201c\u4e2d\u65ad\u5904\u7406\u201d\u90a3\u4e00\u7ae0\uff0c\u4e2d\u65ad\u53d1\u751f\u540e\u6240\u6709\u5bc4\u5b58\u5668\u90fd\u4f1a\u88ab\u88ab\u4fdd\u5b58\u5230trapframe\u4e2d\uff0c\u800ceax\u4f5c\u4e3a\u5176\u4e2d\u4e4b\u4e00\u4f1a\u5728syscall\u90a3\u91cc\u4f7f\u7528\u5230\u3002 int $T_SYSCALL \u4ea7\u751f\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u4e2d\u65ad\uff0c\u8fd8\u8bb0\u5f97\u7cfb\u7edf\u8c03\u7528\u7684\u4e2d\u65ad\u7801\u5373T_SYSCALL\u662f64\u3002","title":"\u7cfb\u7edf\u8c03\u7528\u7684\u7528\u6237\u63a5\u53e3"},{"location":"system_call/#_3","text":"\u8fd9\u91cc\u4ee5exec\u4e3a\u4f8b\uff0c\u5f53\u7528\u6237\u7a0b\u5e8f\u6267\u884cexec\u7cfb\u7edf\u8c03\u7528\u51fd\u6570\u540e\uff0c\u4f1a\u6267\u884cusys.S\u91ccSYSCALL(exec)\u5b8f\u5b9a\u4e49\u7684\u4ee3\u7801,\u8fd9\u6bb5\u4ee3\u7801\u5728\u9884\u5904\u7406\u5b8c\u6210\u540e\u4f1a\u662f\u4e0b\u9762\u7684\u6837\u5b50 .globl exec; exec: movl $SYS_exec, %eax; int $T_SYSCALL; ret int $T_SYSCALL \u4ea7\u751f\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u4e2d\u65ad\uff0cCPU\u8fdb\u5165\u4e2d\u65ad\u5904\u7406\u7684\u6d41\u7a0b\uff0c\u5173\u4e8e\u4e2d\u65ad\u5904\u7406\u7684\u6d41\u7a0b\u53c2\u89c1\u524d\u4e00\u7ae0\u201c\u4e2d\u65ad\u5904\u7406\u201d\uff0c\u5728\u90a3\u4e00\u7ae0\u91cc\u8bb2\u4e86\u7cfb\u7edf\u5982\u4f55\u627e\u5230\u4e2d\u65ad\u5904\u7406\u7684\u5165\u53e3\uff0c\u4fdd\u5b58\u5f53\u524d\u8fdb\u7a0b\u72b6\u6001\uff0c\u6700\u540e\u8fdb\u5165trap\u51fd\u6570\uff0c\u8fd9\u91cc\u4e3b\u8981\u8bb2\u5728trap\u51fd\u6570\u91cc\u5173\u4e8e\u7cfb\u7edf\u8c03\u7528\u7684\u5904\u7406\u8fc7\u7a0b\u3002 \u5728trap\u51fd\u6570\u91cc\u901a\u8fc7\u4e2d\u65ad\u7f16\u53f7\uff08trapno\uff09\u5224\u65ad\u4e2d\u65ad\u7c7b\u578b\u662f\u7cfb\u7edf\u8c03\u7528\uff0c\u7136\u540e\u8c03\u7528syscall\u51fd\u6570\uff0c\u5728syscall\u51fd\u6570\u91cc\u53d6\u51fa\u4fdd\u5b58\u5728trapframe\u91cc\u7684eax\uff0c\u5373\u7cfb\u7edf\u8c03\u7528\u7f16\u53f7\u3002\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u7f16\u53f7\u5728\u7cfb\u7edf\u8c03\u7528\u5217\u8868\u4e2d\uff08syscalls[]\uff09\u7d22\u5f15\u5230\u76f8\u5e94\u7684\u7cfb\u7edf\u8c03\u7528\u670d\u52a1\u5373sys_exec\uff0c\u7136\u540e\u8c03\u7528sys_exec\u5e76\u5c06\u8fd4\u56de\u503c\u8d4b\u4e88trapfraem\u7684eax\uff0c\u5728\u7cfb\u7edf\u8c03\u7528\u8fd4\u56de\u65f6trapfraem\u7684eax\u505a\u4e3a\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u503c\u4f1a\u88ab\u6062\u590d\u5230%eax\u5bc4\u5b58\u5668\u4e2d\u3002","title":"\u7cfb\u7edf\u8c03\u7528\u7684\u6d41\u7a0b"},{"location":"system_call/#_4","text":"\u5185\u6838\u91cc\u9762\u5b9e\u73b0\u7cfb\u7edf\u8c03\u7528\u670d\u52a1\u7684\u51fd\u6570\u6bd4\u5982sys_exec\uff0c\u8981\u83b7\u53d6\u7528\u6237\u7a0b\u5e8f\u4f20\u9012\u7684\u53c2\u6570\uff0c\u800c\u7528\u6237\u7a0b\u5e8f\u4f20\u9012\u7684\u53c2\u6570\u662f\u653e\u5728\u8fdb\u7a0b\u7684\u7528\u6237\u6808\u91cc\u7684\uff0c\u8fd9\u91cc\u7528\u6237\u6808\u7684\u6808\u9876\u6307\u9488\u4fdd\u5b58\u5728trapframe\u7684esp\u91cc\uff0c\u6808\u9876\u7684\u7b2c\u4e00\u4e2a\u503c\u662f\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u5730\u5740\uff0c\u4ece\u7b2c\u4e8c\u503c\u5f00\u59cb\u624d\u662f\u4f20\u9012\u7684\u53c2\u6570\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u5730\u5740\u662f %esp+4 \uff0c \u7b2cn\u4e2a\u53c2\u6570\u7684\u5730\u5740\u662f %esp+4+4*n \u3002 \u7cfb\u7edf\u5b9e\u73b0\u4e86\u4e00\u7cfb\u5217\u7684\u8f85\u52a9\u51fd\u6570\u5982argint, argptr, argstr\u548cargfd \u5206\u522b\u53bb\u83b7\u53d6\u6574\u578b\uff0c\u6307\u9488\u578b\uff0c\u5b57\u7b26\u4e32\u578b\u548c\u6587\u4ef6\u63cf\u8ff0\u7b26\u578b\u7684\u7cfb\u7edf\u8c03\u7528\u53c2\u6570\u3002\u4f8b\u5982argint\u9996\u5148\u8ba1\u7b97\u7b2cn\u4e2a\u53c2\u6570\u7684\u5730\u5740\uff0c\u7136\u540e\u628a\u8fd9\u4e2a\u5730\u5740\u544a\u8bc9fetchint\uff0cfetchint\u53d6\u51fa\u8fd9\u4e2a\u5730\u5740\u4e0a\u7684int\u6570\u636e\u5e76\u62f7\u8d1d\u5230ip\u6307\u5b9a\u7684\u53d8\u91cf\u5730\u5740\u4e0a\u3002","title":"\u83b7\u53d6\u7cfb\u7edf\u8c03\u7528\u53c2\u6570"},{"location":"the_first_process/","text":"\u7b2c\u4e00\u4e2a\u8fdb\u7a0b \u4ec0\u4e48\u662f\u8fdb\u7a0b\uff1f\u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0c\u8fdb\u7a0b\u662f\u5bf9\u4e00\u53f0\u673a\u5668\u7684\u62bd\u8c61\uff0c\u5b83\u53ef\u4ee5\u7ed9\u7528\u6237\u4e00\u79cd\u4eab\u6709\u5355\u72ec\u7684\u5904\u7406\u5668\u548c\u5185\u5b58\u7684\u5047\u8c61\u3002\u4ece\u5177\u4f53\u5b9e\u73b0\u4e0a\u8bb2\uff0c\u8fdb\u7a0b\u5c31\u662fCPU\u5bc4\u5b58\u5668\u7684\u72b6\u6001\u548c\u865a\u62df\u5185\u5b58\u7684\u9875\u8868\u3002 \u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u521b\u5efa \u7cfb\u7edf\u7684\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u521d\u59cb\u5316\u5728 userinit \u51fd\u6570\u91cc\u5b8c\u6210\u3002\u8be5\u51fd\u6570\u9996\u5148\u8c03\u7528 allocproc \u5206\u914d\u4e00\u4e2a\u8fdb\u7a0b\u5bf9\u8c61\uff0c\u7cfb\u7edf\u6bcf\u4e2a\u8fdb\u7a0b\u5bf9\u8c61\u90fd\u8981\u901a\u8fc7allocproc\u5206\u914d\uff0c \u7cfb\u7edf\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u4e5f\u4e0d\u4f8b\u5916\u3002\u5728allocproc\u4e2d\u6211\u4eec\u4ece\u8fdb\u7a0b\u5217\u8868\uff08ptable\uff09\u4e2d\u7533\u8bf7\u5230\u4e00\u4e2a\u72b6\u6001\u4e3aUNUSED\u7684\u8fdb\u7a0b\uff0c \u7533\u8bf7\u5230\u8fdb\u7a0b\u540e\u8bbe\u7f6e\u5b83\u7684\u72b6\u6001\u4e3aEMBRYO\uff0c\u5e76\u5206\u914d\u4e00\u4e2a\u8fdb\u7a0b\u7f16\u53f7\u3002\u7136\u540e\u8981\u4e3a\u8be5\u8fdb\u7a0b\u5206\u914d\u4e00\u4e2a\u5185\u6838\u6808\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u4e00\u4e2a\u5185\u6838\u6808\uff0c\u4e00\u4e2a\u7528\u6237\u6808\uff0c\u5185\u6838\u6808\u662f\u8be5\u8fdb\u7a0b\u8fdb\u5165\u5185\u6838\u6a21\u5f0f\u4e0b\u8fd0\u884c\u6240\u4f7f\u7528\u7684\u6808\uff0c\u7528\u6237\u6808\u662f\u8be5\u8fdb\u7a0b\u5728\u7528\u6237\u6a21\u5f0f\u4e0b\u4f7f\u7528\u7684\u6808\u3002\u7ee7\u7eed\u770ballocproc\u51fd\u6570\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u8fdb\u7a0b\u7684trapframe\u548ccontext\u4e5f\u5728\u8fd9\u4e2a\u5206\u914d\u7684\u5185\u6838\u6808\u4e2d\u3002trapframe\u4f5c\u7528\u662f\u5728\u8fdb\u7a0b\u53d1\u751f\u4e2d\u65ad\u65f6\u4fdd\u5b58\u7684\u5f53\u524d\u8fdb\u7a0b\u5bc4\u5b58\u5668\u7684\u72b6\u6001\uff0c\u7136\u540e\u5728\u4e2d\u65ad\u5b8c\u6210\u65f6\u6062\u590d\u8fdb\u7a0b\u5bc4\u5b58\u5668\u7684\u72b6\u6001\u3002\u5728userinit\u4e2d\u53ef\u4ee5\u770b\u5230trapframe\u5728\u8fd9\u91cc\u662f\u7528\u6765\u4fdd\u5b58\u7528\u6237\u6a21\u5f0f\u4e0b\u5404\u4e2a\u5bc4\u5b58\u5668\u7684\u72b6\u6001\u3002\u6bd4\u5982 p->tf->cs = (SEG_UCODE << 3) | DPL_USER \u8fd9\u91cc\u7684DPL_USER\uff08=3\uff09\u5c31\u662f\u7528\u6237\u6a21\u5f0f\u7684\u7279\u6743\u7ea7\u522b\uff0c\u7279\u6743\u7ea7\u522b\u5206\u4e09\u4e2a\u7b49\u7ea7\uff0c\u7b49\u7ea7\u6700\u9ad8\u7684\u503c\u662f0\uff0c\u6700\u4f4e\u7684\u503c\u662f3, \u4f4e\u7ea7\u522b\u6307\u4ee4\u7684\u4e0d\u80fd\u8bbf\u95ee\u9ad8\u7ea7\u522b\u7684\u6bb5\u5730\u5740\uff0cxv6\u7cfb\u7edf\u53ea\u7528\u4e86\u4e24\u4e2a\u7ea7\u522b0\u548c3\uff0c\u5185\u6838\u6a21\u5f0f\u662f0\uff0c\u7528\u6237\u6a21\u5f0f\u662f3\u3002\u518d\u6bd4\u5982eip\u5728\u8fd9\u91cc\u8bbe\u7f6e\u4e3a0,\u662f\u8be5\u8fdb\u7a0b\u7684\u5165\u53e3\u5730\u5740\u3002context\u662f\u7cfb\u7edf\u5728\u8fdb\u884c\u8c03\u5ea6\u65f6\u628a\u5f53\u524d\u7684\u5bc4\u5b58\u5668\u72b6\u6001\u4fdd\u5b58\u5728\u65e7\u7684context\u91cc\uff0c\u7136\u540e\u628a\u5bc4\u5b58\u5668\u8bbe\u7f6e\u4e3a\u65b0\u7684context\u91cc\u7684\u503c\u3002\u5b8c\u6210\u5185\u6838\u6808\u7684\u5206\u914d\u540e\uff0c\u5b83\u7684\u5e03\u5c40\u5982\u4e0b\uff1a userinit\u7684\u4e0b\u4e00\u6b65\u5c31\u662f\u8981\u5206\u914d\u865a\u62df\u5185\u5b58\u7684\u9875\u8868\uff0c\u8fd9\u662f\u901a\u8fc7setupkvm()\u5b9e\u73b0\u7684\u3002setupkvm\u7ed9\u8fdb\u7a0b\u5206\u914d\u4e86\u4e00\u4e2a\u9875\u8868\uff0c\u5e76\u521d\u59cb\u5316\u4e86\u5185\u6838\u7684\u6620\u5c04\u3002\u5185\u6838\u5185\u5b58\u7a7a\u95f4\u8bbe\u7f6e\u5b8c\u6bd5\u540e\uff0c\u8c03\u7528 inituvm(p->pgdir, _binary_initcode_start, (int)_binary_initcode_size) \u8bbe\u7f6e\u8fd9\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u7528\u6237\u5185\u5b58\u7a7a\u95f4\uff0c_binary_initcode_start\u548c_binary_initcode_size\u5206\u522b\u662f\u201cinitcode.S\u201d\u7684\u8d77\u59cb\u5730\u5740\u548c\u957f\u5ea6\uff0c\u8fd9\u4e24\u4e2a\u53d8\u91cf\u662f\u7531\u94fe\u63a5\u5668\u6839\u636eMakeFile\u7684\u8bbe\u7f6e kernel: $(OBJS) entry.o entryother initcode kernel.ld $(LD) $(LDFLAGS) -T kernel.ld -o kernel entry.o $(OBJS) -b binary initcode entryother \u81ea\u52a8\u52a0\u5230elf\u6587\u4ef6\u91cc\u7684\u3002inituvm\u4f1a\u5206\u914d\u8db3\u591f\u7684\u5185\u5b58\u7a7a\u95f4\u5e76\u628ainitcode.S\u5bf9\u5e94\u7684\u7f16\u8bd1\u4ee3\u7801\u62f7\u8d1d\u8fdb\u6765\u3002 \u6700\u540euserinit\u628a\u8fdb\u7a0b\u7684\u72b6\u6001\u8bbe\u7f6e\u4e3aRUNNABLE\uff0c\u8868\u793a\u8fd9\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u88ab\u8c03\u5ea6\u8fdbcpu\u8fd0\u884c\u4e86\u3002 \u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u8fd0\u884c \u4e0a\u9762\u5df2\u7ecf\u5b8c\u6210\u4e86\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u521b\u5efa\uff0c\u7136\u540e\u5728\u524d\u9762\u8bb2\u7684\u201cscheduler\u201d\u8fd0\u884c\u8d77\u6765\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u65b0\u521b\u5efa\u7684\u8fdb\u7a0b\uff0c\u7136\u540e\u901a\u8fc7swtch\u628a\u8fd9\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u8d77\u6765\u3002 \u8fd8\u8bb0\u5f97\u8fd9\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u7684context\u662f\u5728allocproc\u4e2d\u8bbe\u7f6e\u7684\uff0c%eip=forkret\uff0c\u5176\u4ed6\u5bc4\u5b58\u5668=0\u3002\u6240\u4ee5\u6700\u540eret\u6307\u4ee4\u8fd4\u56de\u5230forkret\u51fd\u6570\u3002 forkret\u6267\u884c\u4e86\u4e00\u4e9b\u5fc5\u987b\u5728\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u7684\u521d\u59cb\u5316\u5de5\u4f5c\uff0c\u6267\u884c\u5b8c\u6210\u540e\u4f1a\u8fdb\u5165trapret\u3002\u4e3a\u4ec0\u4e48\u4f1a\u8fdb\u5165trapret\u5462\uff1f\u770b\u4e0a\u9762\u7684\u8fdb\u7a0b\u5185\u6838\u6808\u7684\u5e03\u5c40\u56fe\uff0c\u8fdb\u7a0bcontext\u5168\u90e8\u9000\u6808\u4ee5\u540e\uff0c\u6808\u9876\u6307\u9488\u6307\u5411\u4e86trapret\uff0c\u6240\u4ee5forkret\u5b8c\u6210\u540e\u8fd4\u56de\u5230trapret\u4e86\u3002trapret\u5728'trapasm.S'\u6587\u4ef6\u91cc\u5b9a\u4e49\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a # Return falls through to trapret... .globl trapret trapret: popal popl %gs popl %fs popl %es popl %ds addl $0x8, %esp # trapno and errcode iret \u8fd9\u91cc\u5b9e\u9645\u5c31\u662f\u628a\u8fdb\u7a0btrapframe\u4fdd\u5b58\u7684\u503c\u6062\u590d\u5230\u5bc4\u5b58\u5668\u4e2d\u3002\u4e3a\u4ec0\u4e48\u662f\u8fd9\u6837\u5462\uff1f\u8fd8\u662f\u6839\u636e\u524d\u9762\u8bb2\u5230\u7684\u8fdb\u7a0b\u5185\u6838\u6808\u5e03\u5c40\uff0c\u5f53trapret\u9000\u6808\u4ee5\u540e\u6808\u9876\u6307\u9488\u521a\u597d\u6307\u5411\u8fdb\u7a0b\u7684trapframe\uff0c\u8fd8\u8bb0\u5f97\u8fd9\u4e2atrapframe \u662f\u5728userinit\u91cc\u8bbe\u7f6e\u7684\u3002\u4e00\u7cfb\u5217\u7684pop\u6307\u4ee4\u628a\u5404\u4e2a\u5bc4\u5b58\u5668\u72b6\u6001\u6062\u590d\uff0c addl $0x8, %esp \u662f\u7565\u8fc7trapframe\u91cc\u7684trapno \u548c errcode,\u6700\u540e\u7684iret\u628a\u6307\u4ee4\u5bc4\u5b58\u5668%eip %cs\u548c\u6808\u5bc4\u5b58\u5668 %esp %ss \u4ecetrapframe\u4e2d\u6062\u590d\uff0c\u7cfb\u7edf\u8fdb\u5165\u7528\u6237\u6a21\u5f0f\uff0c\u5f00\u59cb\u8fd0\u884cinitcode.S\u7684\u4ee3\u7801\u3002 \u8fd0\u884cinitcode.S initcode.S \u5b9e\u9645\u5c31\u662f\u624b\u52a8\u5236\u4f5c\u4e86\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u9996\u5148 pushl $argv , pushl $init \u4f5c\u4e3a\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\u3002\u7136\u540e pushl $0 \u662f\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u5730\u5740, \u5b9e\u9645\u8c03\u7528exec\u4e0d\u4f1a\u8fd4\u56de\uff0c\u8fd9\u4e2a\u5730\u5740\u53ea\u662f\u5360\u4f4d\u7528\u7684\u3002\u6700\u540e movl $SYS_exec, %eax \u662f\u628aeax\u8bbe\u7f6e\u4e3a\u4ee3\u8868exec\u7684\u7cfb\u7edf\u8c03\u7528\u7684\u7f16\u53f7\uff0c\u5e76\u6267\u884c int T_SYSCALL \u53d1\u8d77\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u4e2d\u65ad\uff0c\u76f8\u5185\u6838\u7533\u8bf7\u8fd0\u884cexec\u7cfb\u7edf\u8c03\u7528\uff08\u5173\u4e8e\u7cfb\u7edf\u8c03\u7528\u548c\u4e2d\u65ad\u5904\u7406\u6d41\u7a0b\u53c2\u89c1\u540e\u9762\u7684\u201c\u4e2d\u65ad\u5904\u7406\u201d\u548c\u201c\u7cfb\u7edf\u8c03\u7528\u201d\u7ae0\u8282\uff09\u3002exec\u7cfb\u7edf\u8c03\u7528\u670d\u52a1\u6839\u636e\u7528\u6237\u7a0b\u5e8f\u4f20\u5165\u7684\u53c2\u6570\"init\",\u628ainitcode \u66ff\u6362\u4e3ainit\u5e76\u8fd0\u884c\u3002\u201cinit\u201d\u5f00\u542f\u4e86\u4e00\u4e2a\u63a7\u5236\u53f0shell.","title":"\u7b2c\u4e00\u4e2a\u8fdb\u7a0b"},{"location":"the_first_process/#_1","text":"\u4ec0\u4e48\u662f\u8fdb\u7a0b\uff1f\u4ece\u6982\u5ff5\u4e0a\u8bb2\uff0c\u8fdb\u7a0b\u662f\u5bf9\u4e00\u53f0\u673a\u5668\u7684\u62bd\u8c61\uff0c\u5b83\u53ef\u4ee5\u7ed9\u7528\u6237\u4e00\u79cd\u4eab\u6709\u5355\u72ec\u7684\u5904\u7406\u5668\u548c\u5185\u5b58\u7684\u5047\u8c61\u3002\u4ece\u5177\u4f53\u5b9e\u73b0\u4e0a\u8bb2\uff0c\u8fdb\u7a0b\u5c31\u662fCPU\u5bc4\u5b58\u5668\u7684\u72b6\u6001\u548c\u865a\u62df\u5185\u5b58\u7684\u9875\u8868\u3002","title":"\u7b2c\u4e00\u4e2a\u8fdb\u7a0b"},{"location":"the_first_process/#_2","text":"\u7cfb\u7edf\u7684\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u521d\u59cb\u5316\u5728 userinit \u51fd\u6570\u91cc\u5b8c\u6210\u3002\u8be5\u51fd\u6570\u9996\u5148\u8c03\u7528 allocproc \u5206\u914d\u4e00\u4e2a\u8fdb\u7a0b\u5bf9\u8c61\uff0c\u7cfb\u7edf\u6bcf\u4e2a\u8fdb\u7a0b\u5bf9\u8c61\u90fd\u8981\u901a\u8fc7allocproc\u5206\u914d\uff0c \u7cfb\u7edf\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u4e5f\u4e0d\u4f8b\u5916\u3002\u5728allocproc\u4e2d\u6211\u4eec\u4ece\u8fdb\u7a0b\u5217\u8868\uff08ptable\uff09\u4e2d\u7533\u8bf7\u5230\u4e00\u4e2a\u72b6\u6001\u4e3aUNUSED\u7684\u8fdb\u7a0b\uff0c \u7533\u8bf7\u5230\u8fdb\u7a0b\u540e\u8bbe\u7f6e\u5b83\u7684\u72b6\u6001\u4e3aEMBRYO\uff0c\u5e76\u5206\u914d\u4e00\u4e2a\u8fdb\u7a0b\u7f16\u53f7\u3002\u7136\u540e\u8981\u4e3a\u8be5\u8fdb\u7a0b\u5206\u914d\u4e00\u4e2a\u5185\u6838\u6808\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u4e00\u4e2a\u5185\u6838\u6808\uff0c\u4e00\u4e2a\u7528\u6237\u6808\uff0c\u5185\u6838\u6808\u662f\u8be5\u8fdb\u7a0b\u8fdb\u5165\u5185\u6838\u6a21\u5f0f\u4e0b\u8fd0\u884c\u6240\u4f7f\u7528\u7684\u6808\uff0c\u7528\u6237\u6808\u662f\u8be5\u8fdb\u7a0b\u5728\u7528\u6237\u6a21\u5f0f\u4e0b\u4f7f\u7528\u7684\u6808\u3002\u7ee7\u7eed\u770ballocproc\u51fd\u6570\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u8fdb\u7a0b\u7684trapframe\u548ccontext\u4e5f\u5728\u8fd9\u4e2a\u5206\u914d\u7684\u5185\u6838\u6808\u4e2d\u3002trapframe\u4f5c\u7528\u662f\u5728\u8fdb\u7a0b\u53d1\u751f\u4e2d\u65ad\u65f6\u4fdd\u5b58\u7684\u5f53\u524d\u8fdb\u7a0b\u5bc4\u5b58\u5668\u7684\u72b6\u6001\uff0c\u7136\u540e\u5728\u4e2d\u65ad\u5b8c\u6210\u65f6\u6062\u590d\u8fdb\u7a0b\u5bc4\u5b58\u5668\u7684\u72b6\u6001\u3002\u5728userinit\u4e2d\u53ef\u4ee5\u770b\u5230trapframe\u5728\u8fd9\u91cc\u662f\u7528\u6765\u4fdd\u5b58\u7528\u6237\u6a21\u5f0f\u4e0b\u5404\u4e2a\u5bc4\u5b58\u5668\u7684\u72b6\u6001\u3002\u6bd4\u5982 p->tf->cs = (SEG_UCODE << 3) | DPL_USER \u8fd9\u91cc\u7684DPL_USER\uff08=3\uff09\u5c31\u662f\u7528\u6237\u6a21\u5f0f\u7684\u7279\u6743\u7ea7\u522b\uff0c\u7279\u6743\u7ea7\u522b\u5206\u4e09\u4e2a\u7b49\u7ea7\uff0c\u7b49\u7ea7\u6700\u9ad8\u7684\u503c\u662f0\uff0c\u6700\u4f4e\u7684\u503c\u662f3, \u4f4e\u7ea7\u522b\u6307\u4ee4\u7684\u4e0d\u80fd\u8bbf\u95ee\u9ad8\u7ea7\u522b\u7684\u6bb5\u5730\u5740\uff0cxv6\u7cfb\u7edf\u53ea\u7528\u4e86\u4e24\u4e2a\u7ea7\u522b0\u548c3\uff0c\u5185\u6838\u6a21\u5f0f\u662f0\uff0c\u7528\u6237\u6a21\u5f0f\u662f3\u3002\u518d\u6bd4\u5982eip\u5728\u8fd9\u91cc\u8bbe\u7f6e\u4e3a0,\u662f\u8be5\u8fdb\u7a0b\u7684\u5165\u53e3\u5730\u5740\u3002context\u662f\u7cfb\u7edf\u5728\u8fdb\u884c\u8c03\u5ea6\u65f6\u628a\u5f53\u524d\u7684\u5bc4\u5b58\u5668\u72b6\u6001\u4fdd\u5b58\u5728\u65e7\u7684context\u91cc\uff0c\u7136\u540e\u628a\u5bc4\u5b58\u5668\u8bbe\u7f6e\u4e3a\u65b0\u7684context\u91cc\u7684\u503c\u3002\u5b8c\u6210\u5185\u6838\u6808\u7684\u5206\u914d\u540e\uff0c\u5b83\u7684\u5e03\u5c40\u5982\u4e0b\uff1a userinit\u7684\u4e0b\u4e00\u6b65\u5c31\u662f\u8981\u5206\u914d\u865a\u62df\u5185\u5b58\u7684\u9875\u8868\uff0c\u8fd9\u662f\u901a\u8fc7setupkvm()\u5b9e\u73b0\u7684\u3002setupkvm\u7ed9\u8fdb\u7a0b\u5206\u914d\u4e86\u4e00\u4e2a\u9875\u8868\uff0c\u5e76\u521d\u59cb\u5316\u4e86\u5185\u6838\u7684\u6620\u5c04\u3002\u5185\u6838\u5185\u5b58\u7a7a\u95f4\u8bbe\u7f6e\u5b8c\u6bd5\u540e\uff0c\u8c03\u7528 inituvm(p->pgdir, _binary_initcode_start, (int)_binary_initcode_size) \u8bbe\u7f6e\u8fd9\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u7528\u6237\u5185\u5b58\u7a7a\u95f4\uff0c_binary_initcode_start\u548c_binary_initcode_size\u5206\u522b\u662f\u201cinitcode.S\u201d\u7684\u8d77\u59cb\u5730\u5740\u548c\u957f\u5ea6\uff0c\u8fd9\u4e24\u4e2a\u53d8\u91cf\u662f\u7531\u94fe\u63a5\u5668\u6839\u636eMakeFile\u7684\u8bbe\u7f6e kernel: $(OBJS) entry.o entryother initcode kernel.ld $(LD) $(LDFLAGS) -T kernel.ld -o kernel entry.o $(OBJS) -b binary initcode entryother \u81ea\u52a8\u52a0\u5230elf\u6587\u4ef6\u91cc\u7684\u3002inituvm\u4f1a\u5206\u914d\u8db3\u591f\u7684\u5185\u5b58\u7a7a\u95f4\u5e76\u628ainitcode.S\u5bf9\u5e94\u7684\u7f16\u8bd1\u4ee3\u7801\u62f7\u8d1d\u8fdb\u6765\u3002 \u6700\u540euserinit\u628a\u8fdb\u7a0b\u7684\u72b6\u6001\u8bbe\u7f6e\u4e3aRUNNABLE\uff0c\u8868\u793a\u8fd9\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u88ab\u8c03\u5ea6\u8fdbcpu\u8fd0\u884c\u4e86\u3002","title":"\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u521b\u5efa"},{"location":"the_first_process/#_3","text":"\u4e0a\u9762\u5df2\u7ecf\u5b8c\u6210\u4e86\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u521b\u5efa\uff0c\u7136\u540e\u5728\u524d\u9762\u8bb2\u7684\u201cscheduler\u201d\u8fd0\u884c\u8d77\u6765\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u53d1\u73b0\u8fd9\u4e2a\u65b0\u521b\u5efa\u7684\u8fdb\u7a0b\uff0c\u7136\u540e\u901a\u8fc7swtch\u628a\u8fd9\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u8d77\u6765\u3002 \u8fd8\u8bb0\u5f97\u8fd9\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u7684context\u662f\u5728allocproc\u4e2d\u8bbe\u7f6e\u7684\uff0c%eip=forkret\uff0c\u5176\u4ed6\u5bc4\u5b58\u5668=0\u3002\u6240\u4ee5\u6700\u540eret\u6307\u4ee4\u8fd4\u56de\u5230forkret\u51fd\u6570\u3002 forkret\u6267\u884c\u4e86\u4e00\u4e9b\u5fc5\u987b\u5728\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u7684\u521d\u59cb\u5316\u5de5\u4f5c\uff0c\u6267\u884c\u5b8c\u6210\u540e\u4f1a\u8fdb\u5165trapret\u3002\u4e3a\u4ec0\u4e48\u4f1a\u8fdb\u5165trapret\u5462\uff1f\u770b\u4e0a\u9762\u7684\u8fdb\u7a0b\u5185\u6838\u6808\u7684\u5e03\u5c40\u56fe\uff0c\u8fdb\u7a0bcontext\u5168\u90e8\u9000\u6808\u4ee5\u540e\uff0c\u6808\u9876\u6307\u9488\u6307\u5411\u4e86trapret\uff0c\u6240\u4ee5forkret\u5b8c\u6210\u540e\u8fd4\u56de\u5230trapret\u4e86\u3002trapret\u5728'trapasm.S'\u6587\u4ef6\u91cc\u5b9a\u4e49\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a # Return falls through to trapret... .globl trapret trapret: popal popl %gs popl %fs popl %es popl %ds addl $0x8, %esp # trapno and errcode iret \u8fd9\u91cc\u5b9e\u9645\u5c31\u662f\u628a\u8fdb\u7a0btrapframe\u4fdd\u5b58\u7684\u503c\u6062\u590d\u5230\u5bc4\u5b58\u5668\u4e2d\u3002\u4e3a\u4ec0\u4e48\u662f\u8fd9\u6837\u5462\uff1f\u8fd8\u662f\u6839\u636e\u524d\u9762\u8bb2\u5230\u7684\u8fdb\u7a0b\u5185\u6838\u6808\u5e03\u5c40\uff0c\u5f53trapret\u9000\u6808\u4ee5\u540e\u6808\u9876\u6307\u9488\u521a\u597d\u6307\u5411\u8fdb\u7a0b\u7684trapframe\uff0c\u8fd8\u8bb0\u5f97\u8fd9\u4e2atrapframe \u662f\u5728userinit\u91cc\u8bbe\u7f6e\u7684\u3002\u4e00\u7cfb\u5217\u7684pop\u6307\u4ee4\u628a\u5404\u4e2a\u5bc4\u5b58\u5668\u72b6\u6001\u6062\u590d\uff0c addl $0x8, %esp \u662f\u7565\u8fc7trapframe\u91cc\u7684trapno \u548c errcode,\u6700\u540e\u7684iret\u628a\u6307\u4ee4\u5bc4\u5b58\u5668%eip %cs\u548c\u6808\u5bc4\u5b58\u5668 %esp %ss \u4ecetrapframe\u4e2d\u6062\u590d\uff0c\u7cfb\u7edf\u8fdb\u5165\u7528\u6237\u6a21\u5f0f\uff0c\u5f00\u59cb\u8fd0\u884cinitcode.S\u7684\u4ee3\u7801\u3002","title":"\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\u7684\u8fd0\u884c"},{"location":"the_first_process/#initcodes","text":"initcode.S \u5b9e\u9645\u5c31\u662f\u624b\u52a8\u5236\u4f5c\u4e86\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u9996\u5148 pushl $argv , pushl $init \u4f5c\u4e3a\u7cfb\u7edf\u8c03\u7528\u7684\u53c2\u6570\u3002\u7136\u540e pushl $0 \u662f\u7cfb\u7edf\u8c03\u7528\u7684\u8fd4\u56de\u5730\u5740, \u5b9e\u9645\u8c03\u7528exec\u4e0d\u4f1a\u8fd4\u56de\uff0c\u8fd9\u4e2a\u5730\u5740\u53ea\u662f\u5360\u4f4d\u7528\u7684\u3002\u6700\u540e movl $SYS_exec, %eax \u662f\u628aeax\u8bbe\u7f6e\u4e3a\u4ee3\u8868exec\u7684\u7cfb\u7edf\u8c03\u7528\u7684\u7f16\u53f7\uff0c\u5e76\u6267\u884c int T_SYSCALL \u53d1\u8d77\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7684\u4e2d\u65ad\uff0c\u76f8\u5185\u6838\u7533\u8bf7\u8fd0\u884cexec\u7cfb\u7edf\u8c03\u7528\uff08\u5173\u4e8e\u7cfb\u7edf\u8c03\u7528\u548c\u4e2d\u65ad\u5904\u7406\u6d41\u7a0b\u53c2\u89c1\u540e\u9762\u7684\u201c\u4e2d\u65ad\u5904\u7406\u201d\u548c\u201c\u7cfb\u7edf\u8c03\u7528\u201d\u7ae0\u8282\uff09\u3002exec\u7cfb\u7edf\u8c03\u7528\u670d\u52a1\u6839\u636e\u7528\u6237\u7a0b\u5e8f\u4f20\u5165\u7684\u53c2\u6570\"init\",\u628ainitcode \u66ff\u6362\u4e3ainit\u5e76\u8fd0\u884c\u3002\u201cinit\u201d\u5f00\u542f\u4e86\u4e00\u4e2a\u63a7\u5236\u53f0shell.","title":"\u8fd0\u884cinitcode.S"},{"location":"timer_interrupt/","text":"\u65f6\u95f4\u4e2d\u65ad CPU\u7684\u65f6\u949f\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad\uff0c\u8fd9\u6837\u5185\u6838\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u4e2d\u65ad\u4fe1\u53f7\u5b9e\u73b0\u591a\u4e2a\u8fdb\u7a0b\u95f4\u7684\u65f6\u95f4\u5206\u7247\uff08time-slice\uff09\u3002\u65f6\u95f4\u4e2d\u65ad\u7684\u9891\u7387\u901a\u5e38\u662f\u6bcf\u79d2100\u6b21\uff0c\u8fd9\u6837\u5373\u53ef\u4ee5\u4fdd\u8bc1\u8212\u9002\u7684\u4ea4\u4e92\u6548\u679c\u53c8\u4e0d\u81f3\u4e8e\u9891\u7e41\u7684\u4e2d\u65ad\u5f71\u54cdCPU\u7684\u8fd0\u884c\u3002 \u65f6\u95f4\u4e2d\u65ad\u7684\u6d41\u7a0b \u9075\u5faa\u4e2d\u65ad\u5904\u7406\u7684\u6d41\u7a0b\uff0c\u65f6\u95f4\u4e2d\u65ad\u4e5f\u4f1a\u8fdb\u5165trap\u51fd\u6570\uff0c\u5728\u8fd9\u91cc\u9488\u5bf9\u65f6\u95f4\u4e2d\u65ad\u5b9e\u73b0\u4e86\u4e24\u4e2a\u529f\u80fd\uff0c\u4e00\u4e2a\u662f\u5b9e\u73b0ticks\u8ba1\u6570\u5524\u9192\u4e4b\u524dsleep\u7684\u8fdb\u7a0b\uff0c\u53e6\u4e00\u4e2a\u662f\u8c03\u7528yield\u8ba9\u51faCPU\u7ed9\u5176\u4ed6\u8fdb\u7a0b\u4f7f\u7528\u3002\u8fd9\u91cc\u91cd\u70b9\u5173\u6ce8\u5173\u4e8e\u65f6\u95f4\u5206\u7247\u7684\u5b9e\u73b0\uff0c\u6240\u4ee5\u53ea\u5206\u6790\u7b2c\u4e8c\u4e2a\u529f\u80fd\u3002 \u8ffd\u8e2ayield\u7684\u8c03\u7528\u8f68\u8ff9\u4f9d\u6b21\u8fdb\u5165 yield\uff08\uff09-> sched() --> swtch(&p->context, mycpu()->scheduler) ,\u5173\u4e8eswtch\u7684\u5177\u4f53\u5206\u6790\u5728\"CPU\u8c03\u5ea6\u7ebf\u7a0b\"\u90a3\u91cc\u5df2\u7ecf\u4f5c\u8fc7\u63cf\u8ff0\u3002\u8fd9\u91cc\u7684 mycpu()->scheduler \u5c31\u662f\u4e0a\u4e00\u6b21\u5728 scheduler\uff08\uff09 \u8c03\u7528swtch\u8ba9\u51faCPU\u7ed9\u5f53\u4e0b\u8fd9\u4e2a\u8fdb\u7a0b\u5e76\u628a\u81ea\u5df1\u7684\u5bc4\u5b58\u5668\u4fdd\u5b58\u7684\u4f4d\u7f6e\u3002\u8fd9\u91cc\u518d\u6b21\u8c03\u7528swtch \u53ea\u662f\u53c2\u6570\u7684\u987a\u5e8f\u4e0e\u4e0a\u4e00\u6b21\u6b63\u597d\u76f8\u53cd\uff0cCPU\u8c03\u5ea6\u7ebf\u7a0b\uff08mycpu()->scheduler\uff09\u88ab\u6362\u5165\uff0c\u8fdb\u7a0b\uff08p->context\uff09\u88ab\u6362\u51fa\u3002\u8fd9\u91cc\u7684swtch\u6267\u884c\u5b8c\u6210\u540e\uff0c\u5f53\u524d\u8fdb\u7a0b\u8ba9\u51faCPU\u505c\u6b62\u8fd0\u884c\uff0cscheduler\u91cd\u65b0\u83b7\u5f97CPU\u63a5\u7740\u4e0a\u6b21\u505c\u6b62\u7684\u5730\u65b9\u7ee7\u7eed\u8fd0\u884c\uff0c\u5bfb\u627e\u4e0b\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884c\u7684\u8fdb\u7a0b\u3002\u540e\u9762\u7684\u67d0\u4e00\u4e2a\u65f6\u523bscheduler\u4e5f\u4f1a\u518d\u6b21\u9009\u4e2d\u5f53\u524d\u505c\u6b62\u7684\u8fdb\u7a0b\u518d\u6b21\u6062\u590d\u5b83\u7684\u8fd0\u884c\u3002\u5f53\u88ab\u6062\u590d\u7684\u65f6\u5019\uff0c\u5f53\u524d\u8fdb\u7a0b\u63a5\u7740\u4e0a\u6b21\u4e2d\u6b62\u7684\u5730\u65b9\u4e5f\u5c31\u662f\u8c03\u7528swtch\u7684\u5730\u65b9\u7684\u7ee7\u7eed\u6267\u884c,\u6309\u4e4b\u524d\u201cyield\u201d\u7684\u8c03\u7528\u8f68\u8ff9\u76f8\u53cd\u7684\u65b9\u5411\u4f9d\u6b21\u8fd4\u56de\uff0c\u6700\u540e\u8c03\u7528trapret\u8fd4\u56de\u5230\u88ab\u201c\u65f6\u95f4\u4e2d\u65ad\u201d\u4e2d\u65ad\u7684\u4f4d\u7f6e\u7ee7\u7eed\u6267\u884c\u3002 \u4ece\u4e0a\u9762\u7684\u53ef\u4ee5\u770b\u51fasched() \u548c scheduler() \u76f8\u4e92\u534f\u4f5c\uff0c\u50cf\u8fd9\u6837\u7684\u8fde\u4e2a\u51fd\u6570\u88ab\u79f0\u4e3a\u201ccoroutines\u201d\u3002","title":"\u65f6\u95f4\u4e2d\u65ad"},{"location":"timer_interrupt/#_1","text":"CPU\u7684\u65f6\u949f\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u90fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e2d\u65ad\uff0c\u8fd9\u6837\u5185\u6838\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u4e2d\u65ad\u4fe1\u53f7\u5b9e\u73b0\u591a\u4e2a\u8fdb\u7a0b\u95f4\u7684\u65f6\u95f4\u5206\u7247\uff08time-slice\uff09\u3002\u65f6\u95f4\u4e2d\u65ad\u7684\u9891\u7387\u901a\u5e38\u662f\u6bcf\u79d2100\u6b21\uff0c\u8fd9\u6837\u5373\u53ef\u4ee5\u4fdd\u8bc1\u8212\u9002\u7684\u4ea4\u4e92\u6548\u679c\u53c8\u4e0d\u81f3\u4e8e\u9891\u7e41\u7684\u4e2d\u65ad\u5f71\u54cdCPU\u7684\u8fd0\u884c\u3002","title":"\u65f6\u95f4\u4e2d\u65ad"},{"location":"timer_interrupt/#_2","text":"\u9075\u5faa\u4e2d\u65ad\u5904\u7406\u7684\u6d41\u7a0b\uff0c\u65f6\u95f4\u4e2d\u65ad\u4e5f\u4f1a\u8fdb\u5165trap\u51fd\u6570\uff0c\u5728\u8fd9\u91cc\u9488\u5bf9\u65f6\u95f4\u4e2d\u65ad\u5b9e\u73b0\u4e86\u4e24\u4e2a\u529f\u80fd\uff0c\u4e00\u4e2a\u662f\u5b9e\u73b0ticks\u8ba1\u6570\u5524\u9192\u4e4b\u524dsleep\u7684\u8fdb\u7a0b\uff0c\u53e6\u4e00\u4e2a\u662f\u8c03\u7528yield\u8ba9\u51faCPU\u7ed9\u5176\u4ed6\u8fdb\u7a0b\u4f7f\u7528\u3002\u8fd9\u91cc\u91cd\u70b9\u5173\u6ce8\u5173\u4e8e\u65f6\u95f4\u5206\u7247\u7684\u5b9e\u73b0\uff0c\u6240\u4ee5\u53ea\u5206\u6790\u7b2c\u4e8c\u4e2a\u529f\u80fd\u3002 \u8ffd\u8e2ayield\u7684\u8c03\u7528\u8f68\u8ff9\u4f9d\u6b21\u8fdb\u5165 yield\uff08\uff09-> sched() --> swtch(&p->context, mycpu()->scheduler) ,\u5173\u4e8eswtch\u7684\u5177\u4f53\u5206\u6790\u5728\"CPU\u8c03\u5ea6\u7ebf\u7a0b\"\u90a3\u91cc\u5df2\u7ecf\u4f5c\u8fc7\u63cf\u8ff0\u3002\u8fd9\u91cc\u7684 mycpu()->scheduler \u5c31\u662f\u4e0a\u4e00\u6b21\u5728 scheduler\uff08\uff09 \u8c03\u7528swtch\u8ba9\u51faCPU\u7ed9\u5f53\u4e0b\u8fd9\u4e2a\u8fdb\u7a0b\u5e76\u628a\u81ea\u5df1\u7684\u5bc4\u5b58\u5668\u4fdd\u5b58\u7684\u4f4d\u7f6e\u3002\u8fd9\u91cc\u518d\u6b21\u8c03\u7528swtch \u53ea\u662f\u53c2\u6570\u7684\u987a\u5e8f\u4e0e\u4e0a\u4e00\u6b21\u6b63\u597d\u76f8\u53cd\uff0cCPU\u8c03\u5ea6\u7ebf\u7a0b\uff08mycpu()->scheduler\uff09\u88ab\u6362\u5165\uff0c\u8fdb\u7a0b\uff08p->context\uff09\u88ab\u6362\u51fa\u3002\u8fd9\u91cc\u7684swtch\u6267\u884c\u5b8c\u6210\u540e\uff0c\u5f53\u524d\u8fdb\u7a0b\u8ba9\u51faCPU\u505c\u6b62\u8fd0\u884c\uff0cscheduler\u91cd\u65b0\u83b7\u5f97CPU\u63a5\u7740\u4e0a\u6b21\u505c\u6b62\u7684\u5730\u65b9\u7ee7\u7eed\u8fd0\u884c\uff0c\u5bfb\u627e\u4e0b\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884c\u7684\u8fdb\u7a0b\u3002\u540e\u9762\u7684\u67d0\u4e00\u4e2a\u65f6\u523bscheduler\u4e5f\u4f1a\u518d\u6b21\u9009\u4e2d\u5f53\u524d\u505c\u6b62\u7684\u8fdb\u7a0b\u518d\u6b21\u6062\u590d\u5b83\u7684\u8fd0\u884c\u3002\u5f53\u88ab\u6062\u590d\u7684\u65f6\u5019\uff0c\u5f53\u524d\u8fdb\u7a0b\u63a5\u7740\u4e0a\u6b21\u4e2d\u6b62\u7684\u5730\u65b9\u4e5f\u5c31\u662f\u8c03\u7528swtch\u7684\u5730\u65b9\u7684\u7ee7\u7eed\u6267\u884c,\u6309\u4e4b\u524d\u201cyield\u201d\u7684\u8c03\u7528\u8f68\u8ff9\u76f8\u53cd\u7684\u65b9\u5411\u4f9d\u6b21\u8fd4\u56de\uff0c\u6700\u540e\u8c03\u7528trapret\u8fd4\u56de\u5230\u88ab\u201c\u65f6\u95f4\u4e2d\u65ad\u201d\u4e2d\u65ad\u7684\u4f4d\u7f6e\u7ee7\u7eed\u6267\u884c\u3002 \u4ece\u4e0a\u9762\u7684\u53ef\u4ee5\u770b\u51fasched() \u548c scheduler() \u76f8\u4e92\u534f\u4f5c\uff0c\u50cf\u8fd9\u6837\u7684\u8fde\u4e2a\u51fd\u6570\u88ab\u79f0\u4e3a\u201ccoroutines\u201d\u3002","title":"\u65f6\u95f4\u4e2d\u65ad\u7684\u6d41\u7a0b"}]}